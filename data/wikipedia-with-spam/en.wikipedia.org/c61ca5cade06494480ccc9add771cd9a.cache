https://en.wikipedia.org/wiki/Orthogonality_(programming)
Orthogonality (programming) - Wikipedia
In computer programming, "orthogonality in a programming language means that a relatively small set of primitive constructs can be combined in a relatively small number of ways to build the control and...
orthogonality programming from wikipedia the free encyclopedia jump to navigation search this article includes a list of references but its sources remain unclear because it has insufficient inline citations please help to improve this article by introducing more precise citations august 2012 learn how and when to remove this template message in computer programming orthogonality in a programming language means that a relatively small set of primitive constructs can be combined in a relatively small number of ways to build the control and data structures of the language sebesta robert concepts of programming languages  the term is mostfrequently used regarding assembly instruction sets as orthogonal instruction set orthogonality is an important concept addressing how a relatively small number of components can be combined in a relatively small number of ways to get the desired results it is associated with simplicity the more orthogonal the design the fewer exceptions this makes it easier to learn read and write programs in a programming language1 the meaning of an orthogonal feature is independent of context the key parameters are symmetry and consistency for example a pointer is an orthogonal concept an example from ibm mainframe and vax highlights this concept an ibm mainframe has two different instructions for adding the contents of a register to a memory cell or another register these statements are shown below a reg1 memorycell ar reg1 reg2 in the first case the contents of reg1 are added to the contents of a memory cell the result is stored in reg1 in the second case the contents of reg1 are added to the contents of another register reg2 and the result is stored in reg1 in contrast to the above set of statements vax has only one statement for addition addl operand1 operand2 in this case the two operands operand1 and operand2 can be registers memory cells or a combination of both the instruction adds the contents of operand1 to the contents of operand2 storing the result in operand1 vax’s instruction for addition is more orthogonal than the instructions provided by ibm hence it is easier for the programmer to remember and use the one provided by vax the design of c language may be examined from the perspective of orthogonality the c language is somewhat inconsistent in its treatment of concepts and language structure making it difficult for the user to learn and use the language examples of exceptions follow structures but not arrays may be returned from a function an array can be returned if it is inside a structure a member of a structure can be any data type except void or the structure of the same type an array element can be any data type except void everything is passed by value except arrays void can be used as a type in a structure but a variable of this type cannot be declared in a function though this concept was first applied to programming language orthogonality has since become recognized as a valuable feature in the design of apis and even user interfaces there too having a small set of composable primitive operations without surprising crosslinkages is valuable leading to systems that are easier to explain and less frustrating to use further readingedit the pragmatic programmer from journeyman to master by andrew hunt and david thomas addisonwesley 2000 isbn 9780201616224 external linksedit the art of unix programming chapter about orthogonality – orthogonality concept wellexplained v t e software engineering fields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification and validation structured analysis orientations agile aspectoriented object orientation ontology service orientation sdlc models developmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model vmodel waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml usl sysml software engineers victor basili kent beck grady booch fred brooks barry boehm peter chen danese cooper ward cunningham tom demarco edsger w dijkstra delores m etter martin fowler adele goldstine margaret hamilton c a r hoare lois haibt mary jean harrold grace hopper watts humphrey michael a jackson ivar jacobson alan kay nancy leveson stephen j mellor bertrand meyer david parnas trygve reenskaug winston w royce james rumbaugh mary shaw peri tarr elaine weyuker niklaus wirth edward yourdon related fields computer science computer engineering project management risk management systems engineering category commons referencesedit templatethe concepts of programming languages robert sebesta y retrieved from httpsenwikipediaorgwindexphptitleorthogonalityprogrammingoldid797434425 categories programming language topics hidden categories articles lacking intext citations from august 2012 all articles lacking intext citations navigation menu personal tools not logged in talk contributions create account log in namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate to wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page printexport create a book download as pdf printable version languages add links this page was last edited on 27 august 2017 at 0116 text is available under the creative commons attributionsharealike license additional terms may apply by using this site you agree to the terms of use and privacy policy wikipedia® is a registered trademark of the wikimedia foundation inc a nonprofit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 
https://en.wikipedia.org/wiki/Orthogonality_(programming)
https://en.wikipedia.org/wiki/Orthogonality_(programming)
https://en.wikipedia.org/wiki/Wikipedia:Citing_sources
https://en.wikipedia.org/wiki/Wikipedia:Citing_sources
https://en.wikipedia.org/wiki/Wikipedia:WikiProject_Fact_and_Reference_Check
https://en.wikipedia.org/wiki/Wikipedia:When_to_cite
https://en.wikipedia.org/wiki/Help:Maintenance_template_removal
https://en.wikipedia.org/wiki/Computer_programming
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Orthogonal_instruction_set
https://en.wikipedia.org/w/index.php?title=Orthogonality_(programming)&action=edit&section=1
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-0-201-61622-4
https://en.wikipedia.org/w/index.php?title=Orthogonality_(programming)&action=edit&section=2
http://www.catb.org/~esr/writings/taoup/html/ch04s02.html
https://en.wikipedia.org/wiki/Template:Software_engineering
https://en.wikipedia.org/wiki/Template_talk:Software_engineering
https://en.wikipedia.org/w/index.php?title=Template:Software_engineering&action=edit
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Computer_programming
https://en.wikipedia.org/wiki/Requirements_engineering
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Software_testing
https://en.wikipedia.org/wiki/Systems_analysis
https://en.wikipedia.org/wiki/Formal_methods
https://en.wikipedia.org/wiki/Data_modeling
https://en.wikipedia.org/wiki/Enterprise_architecture
https://en.wikipedia.org/wiki/Functional_specification
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Software
https://en.wikipedia.org/wiki/Software_archaeology
https://en.wikipedia.org/wiki/Software_architecture
https://en.wikipedia.org/wiki/Software_configuration_management
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_quality
https://en.wikipedia.org/wiki/Software_quality_assurance
https://en.wikipedia.org/wiki/Software_verification_and_validation
https://en.wikipedia.org/wiki/Structured_analysis
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Aspect-oriented_software_development
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Ontology_(information_science)
https://en.wikipedia.org/wiki/Service-oriented_architecture
https://en.wikipedia.org/wiki/Systems_development_life_cycle
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Enterprise_Unified_Process
https://en.wikipedia.org/wiki/Executable_UML
https://en.wikipedia.org/wiki/Incremental_build_model
https://en.wikipedia.org/wiki/Iterative_and_incremental_development
https://en.wikipedia.org/wiki/Software_prototyping
https://en.wikipedia.org/wiki/Rapid_application_development
https://en.wikipedia.org/wiki/Unified_Process
https://en.wikipedia.org/wiki/Scrum_(software_development)
https://en.wikipedia.org/wiki/Spiral_model
https://en.wikipedia.org/wiki/V-Model_(software_development)
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Extreme_programming
https://en.wikipedia.org/wiki/ISO/IEC_15504
https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration
https://en.wikipedia.org/wiki/Data_model
https://en.wikipedia.org/wiki/Entity–relationship_model
https://en.wikipedia.org/wiki/Function_model
https://en.wikipedia.org/wiki/Information_model
https://en.wikipedia.org/wiki/Metamodeling
https://en.wikipedia.org/wiki/Object_model
https://en.wikipedia.org/wiki/Systems_modeling
https://en.wikipedia.org/wiki/View_model
https://en.wikipedia.org/wiki/IDEF
https://en.wikipedia.org/wiki/Unified_Modeling_Language
https://en.wikipedia.org/wiki/Universal_Systems_Language
https://en.wikipedia.org/wiki/Systems_Modeling_Language
https://en.wikipedia.org/wiki/Victor_Basili
https://en.wikipedia.org/wiki/Kent_Beck
https://en.wikipedia.org/wiki/Grady_Booch
https://en.wikipedia.org/wiki/Fred_Brooks
https://en.wikipedia.org/wiki/Barry_Boehm
https://en.wikipedia.org/wiki/Peter_Chen
https://en.wikipedia.org/wiki/Danese_Cooper
https://en.wikipedia.org/wiki/Ward_Cunningham
https://en.wikipedia.org/wiki/Tom_DeMarco
https://en.wikipedia.org/wiki/Edsger_W._Dijkstra
https://en.wikipedia.org/wiki/Delores_M._Etter
https://en.wikipedia.org/wiki/Martin_Fowler
https://en.wikipedia.org/wiki/Adele_Goldstine
https://en.wikipedia.org/wiki/Margaret_Hamilton_(scientist)
https://en.wikipedia.org/wiki/Tony_Hoare
https://en.wikipedia.org/wiki/Lois_Haibt
https://en.wikipedia.org/wiki/Mary_Jean_Harrold
https://en.wikipedia.org/wiki/Grace_Hopper
https://en.wikipedia.org/wiki/Watts_Humphrey
https://en.wikipedia.org/wiki/Michael_A._Jackson
https://en.wikipedia.org/wiki/Ivar_Jacobson
https://en.wikipedia.org/wiki/Alan_Kay
https://en.wikipedia.org/wiki/Nancy_Leveson
https://en.wikipedia.org/wiki/Stephen_J._Mellor
https://en.wikipedia.org/wiki/Bertrand_Meyer
https://en.wikipedia.org/wiki/David_Parnas
https://en.wikipedia.org/wiki/Trygve_Reenskaug
https://en.wikipedia.org/wiki/Winston_W._Royce
https://en.wikipedia.org/wiki/James_Rumbaugh
https://en.wikipedia.org/wiki/Mary_Shaw_(computer_scientist)
https://en.wikipedia.org/wiki/Peri_Tarr
https://en.wikipedia.org/wiki/Elaine_Weyuker
https://en.wikipedia.org/wiki/Niklaus_Wirth
https://en.wikipedia.org/wiki/Edward_Yourdon
https://en.wikipedia.org/wiki/Computer_science
https://en.wikipedia.org/wiki/Computer_engineering
https://en.wikipedia.org/wiki/Project_management
https://en.wikipedia.org/wiki/Risk_management
https://en.wikipedia.org/wiki/Systems_engineering
https://en.wikipedia.org/wiki/Category:Software_engineering
https://commons.wikimedia.org/wiki/Software_engineering
https://en.wikipedia.org/w/index.php?title=Orthogonality_(programming)&action=edit&section=3
https://en.wikipedia.org/w/index.php?title=Template:The_Concepts_of_Programming_Languages,_Robert_Sebesta&action=edit&redlink=1
https://en.wikipedia.org/w/index.php?title=Orthogonality_(programming)&oldid=797434425
https://en.wikipedia.org/wiki/Help:Category
https://en.wikipedia.org/wiki/Category:Programming_language_topics
https://en.wikipedia.org/wiki/Category:Articles_lacking_in-text_citations_from_August_2012
https://en.wikipedia.org/wiki/Category:All_articles_lacking_in-text_citations
https://en.wikipedia.org/wiki/Special:MyTalk
https://en.wikipedia.org/wiki/Special:MyContributions
https://en.wikipedia.org/w/index.php?title=Special:CreateAccount&returnto=Orthogonality+(programming)
https://en.wikipedia.org/w/index.php?title=Special:UserLogin&returnto=Orthogonality+(programming)
https://en.wikipedia.org/wiki/Orthogonality_(programming)
https://en.wikipedia.org/wiki/Talk:Orthogonality_(programming)
https://en.wikipedia.org/wiki/Orthogonality_(programming)
https://en.wikipedia.org/w/index.php?title=Orthogonality_(programming)&action=edit
https://en.wikipedia.org/w/index.php?title=Orthogonality_(programming)&action=history
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Portal:Contents
https://en.wikipedia.org/wiki/Portal:Featured_content
https://en.wikipedia.org/wiki/Portal:Current_events
https://en.wikipedia.org/wiki/Special:Random
https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&utm_medium=sidebar&utm_campaign=C13_en.wikipedia.org&uselang=en
https://shop.wikimedia.org
https://en.wikipedia.org/wiki/Help:Contents
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:Community_portal
https://en.wikipedia.org/wiki/Special:RecentChanges
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://en.wikipedia.org/wiki/Special:WhatLinksHere/Orthogonality_(programming)
https://en.wikipedia.org/wiki/Special:RecentChangesLinked/Orthogonality_(programming)
https://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard
https://en.wikipedia.org/wiki/Special:SpecialPages
https://en.wikipedia.org/w/index.php?title=Orthogonality_(programming)&oldid=797434425
https://en.wikipedia.org/w/index.php?title=Orthogonality_(programming)&action=info
https://www.wikidata.org/wiki/Special:EntityPage/Q7104534
https://en.wikipedia.org/w/index.php?title=Special:CiteThisPage&page=Orthogonality_(programming)&id=797434425
https://en.wikipedia.org/w/index.php?title=Special:Book&bookcmd=book_creator&referer=Orthogonality+(programming)
https://en.wikipedia.org/w/index.php?title=Special:ElectronPdf&page=Orthogonality+(programming)&action=show-download-screen
https://en.wikipedia.org/w/index.php?title=Orthogonality_(programming)&printable=yes
https://www.wikidata.org/wiki/Special:EntityPage/Q7104534
https://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License
https://creativecommons.org/licenses/by-sa/3.0/
https://wikimediafoundation.org/wiki/Terms_of_Use
https://wikimediafoundation.org/wiki/Privacy_policy
https://www.wikimediafoundation.org/
https://wikimediafoundation.org/wiki/Privacy_policy
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:General_disclaimer
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute
https://wikimediafoundation.org/wiki/Cookie_statement
https://en.m.wikipedia.org/w/index.php?title=Orthogonality_(programming)&mobileaction=toggle_view_mobile
https://wikimediafoundation.org/
https://www.mediawiki.org/
