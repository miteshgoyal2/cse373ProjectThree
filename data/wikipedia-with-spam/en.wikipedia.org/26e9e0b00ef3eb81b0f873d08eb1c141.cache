https://en.wikipedia.org/wiki/Programming_paradigm
Programming paradigm - Wikipedia
This article is about classification of programming languages. For definition of the term "programming model", see Programming model. For the use of the term in project management methodology, see Software...
programming paradigm from wikipedia the free encyclopedia jump to navigation search this article is about classification of programming languages for definition of the term programming model see programming model for the use of the term in project management methodology see software development § programming paradigm this article needs additional citations for verification please help improve this article by adding citations to reliable sources unsourced material may be challenged and removed february 2011 learn how and when to remove this template message programming paradigms action agentoriented arrayoriented automatabased concept concurrent computing relativistic programming datadriven declarative contrast imperative constraint constraint logic concurrent constraint logic dataflow flowbased celloriented spreadsheets reactive functional functional logic purely functional logic abductive logic answer set concurrent logic functional logic inductive logic dynamic enduser programming eventdriven serviceoriented timedriven expressionoriented featureoriented functionlevel contrast valuelevel generic imperative contrast declarative literate procedural languageoriented natural language programming disciplinespecific domainspecific grammaroriented dialecting intentional metaprogramming automatic inductive programming reflective attributeoriented homoiconic macro template policybased nonstructured contrast structured array nondeterministic parallel computing processoriented pointfree style concatenative probabilistic semantic structured contrast nonstructured blockstructured modular contrast monolithic objectoriented actorbased classbased concurrent prototypebased by separation of concerns aspectoriented roleoriented subjectoriented recursive valuelevel contrast functionlevel v t e programming paradigms are a way to classify programming languages based on their features languages can be classified into multiple paradigms some paradigms are concerned mainly with implications for the execution model of the language such as allowing side effects or whether the sequence of operations is defined by the execution model other paradigms are concerned mainly with the way that code is organized such as grouping a code into units along with the state that is modified by the code yet others are concerned mainly with the style of syntax and grammar common programming paradigms include imperative which allows side effects functional which disallows side effects declarative which does not state the order in which operations execute objectoriented which groups code together with the state the code modifies procedural which groups code into functions logic which has a particular style of execution model coupled to a particular style of syntax and grammar and symbolic programming which has a particular style of syntax and grammar123 for example languages that fall into the imperative paradigm have two main features they state the order in which operations occur with constructs that explicitly control that order and they allow side effects in which state can be modified at one point in time within one unit of code and then later read at a different point in time inside a different unit of code the communication between the units of code is not explicit meanwhile in objectoriented programming code is organized into objects that contain state that is only modified by the code that is part of the object most objectoriented languages are also imperative languages in contrast languages that fit the declarative paradigm do not state the order in which to execute operations instead they supply a number of operations that are available in the system along with the conditions under which each is allowed to execute the implementation of the languages execution model tracks which operations are free to execute and chooses the order on its own more at comparison of multiparadigm programming languages contents 1 overview 2 history 21 machine code 22 procedural languages 23 objectoriented programming 24 further paradigms 3 multiparadigm 4 see also 5 references 6 external links overviewedit overview of the various programming paradigms according to peter van roy45 just as software engineering as a process is defined by differing methodologies so the programming languages as models of computation are defined by differing paradigms some languages are designed to support one paradigm smalltalk supports objectoriented programming haskell supports functional programming while other programming languages support multiple paradigms such as object pascal c java c scala visual basic common lisp scheme perl php python ruby oz and f for example programs written in c object pascal or php can be purely procedural purely objectoriented or can contain elements of both or other paradigms software designers and programmers decide how to use those paradigm elements in objectoriented programming programs are treated as a set of interacting objects in functional programming programs are treated as a sequence of stateless function evaluations when programming computers or systems with many processors in processoriented programming programs are treated as sets of concurrent processes acting on logically shared data structures many programming paradigms are as well known for the techniques they forbid as for those they enable for instance pure functional programming disallows use of sideeffects while structured programming disallows use of the goto statement partly for this reason new paradigms are often regarded as doctrinaire or overly rigid by those accustomed to earlier styles5 yet avoiding certain techniques can make it easier to understand program behavior and to prove theorems about program correctness programming paradigms can also be compared with programming models which allow invoking an execution model by using only an api programming models can also be classified into paradigms based on features of the execution model for parallel computing using a programming model instead of a language is common the reason is that details of the parallel hardware leak into the abstractions used to program the hardware this causes the programmer to have to map patterns in the algorithm onto patterns in the execution model which have been inserted due to leakage of hardware into the abstraction as a consequence no one parallel programming language maps well to all computation problems it is thus more convenient to use a base sequential language and insert api calls to parallel execution models via a programming model such parallel programming models can be classified according to abstractions that reflect the hardware such as shared memory distributed memory with message passing notions of place visible in the code and so forth these can be considered flavors of programming paradigm that apply to only parallel languages and programming models historyedit different approaches to programming have developed over time being identified as such either at the time or retrospectively an early approach consciously identified as such is structured programming advocated since the mid 1960s the concept of a programming paradigm as such dates at least to 1978 in the turing award lecture of robert w floyd entitled the paradigms of programming which cites the notion of paradigm as used by thomas kuhn in his the structure of scientific revolutions 19626 machine codeedit the lowestlevel programming paradigms are machine code which directly represents the instructions the contents of program memory as a sequence of numbers and assembly language where the machine instructions are represented by mnemonics and memory addresses can be given symbolic labels these are sometimes called first and secondgeneration languages in the 1960s assembly languages were developed to support library copy and quite sophisticated conditional macro generation and preprocessing abilities call to subroutines external variables and common sections globals enabling significant code reuse and isolation from hardware specifics via use of logical operators such as readwritegetput assembly was and still is used for time critical systems and often in embedded systems as it gives the most direct control of what the machine does procedural languagesedit the next advance was the development of procedural languages these thirdgeneration languages the first described as highlevel languages use vocabulary related to the problem being solved for example common business oriented language cobol – uses terms like file move and copy formula translation fortran – using mathematical language terminology it was developed mainly for scientific and engineering problems algorithmic language algol – focused on being an appropriate language to define algorithms while using mathematical language terminology and targeting scientific and engineering problems just like fortran programming language one pli – a hybrid commercialscientific general purpose language supporting pointers beginners all purpose symbolic instruction code basic – it was developed to enable more people to write programs c – a generalpurpose programming language initially developed by dennis ritchie between 1969 and 1973 at att bell labs all these languages follow the procedural paradigm that is they describe step by step exactly the procedure that should according to the particular programmer at least be followed to solve a specific problem the efficacy and efficiency of any such solution are both therefore entirely subjective and highly dependent on that programmers experience inventiveness and ability objectoriented programmingedit main article objectoriented programming following the widespread use of procedural languages objectoriented programming oop languages were created such as simula smalltalk c c eiffel php and java in these languages data and methods to manipulate it are kept as one unit called an object the only way that another object or user can access the data is via the objects methods thus the inner workings of an object may be changed without affecting any code that uses the object there is still some controversy raised by alexander stepanov richard stallman7 and other programmers concerning the efficacy of the oop paradigm versus the procedural paradigm the need for every object to have associative methods leads some skeptics to associate oop with software bloat an attempt to resolve this dilemma came through polymorphism because objectoriented programming is considered a paradigm not a language it is possible to create even an objectoriented assembler language high level assembly hla is an example of this that fully supports advanced data types and objectoriented assembly language programming – despite its early origins thus differing programming paradigms can be seen rather like motivational memes of their advocates rather than necessarily representing progress from one level to the next precise comparisons of the efficacy of competing paradigms are frequently made more difficult because of new and differing terminology applied to similar entities and processes together with numerous implementation distinctions across languages further paradigmsedit literate programming as a form of imperative programming structures programs as a humancentered web as in a hypertext essay documentation is integral to the program and the program is structured following the logic of prose exposition rather than compiler convenience independent of the imperative branch declarative programming paradigms were developed in these languages the computer is told what the problem is not how to solve the problem – the program is structured as a set of properties to find in the expected result not as a procedure to follow given a database or a set of rules the computer tries to find a solution matching all the desired properties an archetype of a declarative language is the fourth generation language sql and the family of functional languages and logic programming functional programming is a subset of declarative programming programs written using this paradigm use functions blocks of code intended to behave like mathematical functions functional languages discourage changes in the value of variables through assignment making a great deal of use of recursion instead the logic programming paradigm views computation as automated reasoning over a body of knowledge facts about the problem domain are expressed as logic formulae and programs are executed by applying inference rules over them until an answer to the problem is found or the set of formulae is proved inconsistent symbolic programming is a paradigm that describes programs able to manipulate formulas and program components as data3 programs can thus effectively modify themselves and appear to learn making them suited for applications such as artificial intelligence expert systems natural language processing and computer games languages that support this paradigm include lisp and prolog8 multiparadigmedit see also comparison of multiparadigm programming languages a multiparadigm programming language is a programming language that supports more than one programming paradigm9 the design goal of such languages is to allow programmers to use the most suitable programming style and associated language constructs for a given job considering that no single paradigm solves all problems in the easiest or most efficient way one example is c which includes imperative and objectoriented paradigms together with a certain level of support for functional programming with features like delegates allowing functions to be treated as firstorder objects type inference anonymous functions and language integrated query other examples are f and scala which provide similar functionality to c but also include full support for functional programming including currying pattern matching algebraic data types lazy evaluation tail recursion immutability etc perhaps the most extreme example is oz which has subsets that adhere to logic oz descends from logic programming functional objectoriented dataflow concurrent and other paradigms oz was designed over a tenyear period to combine in a harmonious way concepts that are traditionally associated with different programming paradigms lisp while often taught as a functional language is known for its malleability and thus its ability to engulf many paradigms see alsoedit computer programming portal architecture description language comparison of programming languages comparison of programming paradigms domainspecific language mindset modeling language programming domain type system turing completeness von neumann programming languages referencesedit nørmark kurt overview of the four main programming paradigms aalborg university 9 may 2011 retrieved 22 september 2012 frans coenen 19991011 characteristics of declarative programming languages cgicsclivacuk retrieved 20140220  a b michael a covington 20100823 csciarti 45406540 first lecture on symbolic programming and lisp pdf university of georgia retrieved 20131120  peter van roy 20090512 programming paradigms for dummies what every programmer should know pdf infouclacbe retrieved 20140127  frank rubin march 1987 goto considered harmful considered harmful pdf communications of the acm 30 3 195–196 doi101145214748315722 archived from the original pdf on march 20 2009  floyd r w 1979 the paradigms of programming communications of the acm 22 8 455 doi101145359138359140  mode inheritance cloning hooks oop google groups discussion  business glossary symbolic programming definition allbusinesscom retrieved 20140730  multiparadigm programming language developermozillaorg retrieved 21 october 2013  external linksedit classification of the principal programming paradigms how programming paradigms evolve and get adopted software engineering v t e types of сomputer languages types architecture description hardware description knowledge representation markup modeling programming language query specification stylesheet transformation see also categorylists of computer languages categorylists of programming languages list of programming languages by type v t e software engineering fields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification and validation structured analysis orientations agile aspectoriented object orientation ontology service orientation sdlc models developmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model vmodel waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml usl sysml software engineers victor basili kent beck grady booch fred brooks barry boehm peter chen danese cooper ward cunningham tom demarco edsger w dijkstra delores m etter martin fowler adele goldstine margaret hamilton c a r hoare lois haibt mary jean harrold grace hopper watts humphrey michael a jackson ivar jacobson alan kay nancy leveson stephen j mellor bertrand meyer david parnas trygve reenskaug winston w royce james rumbaugh mary shaw peri tarr elaine weyuker niklaus wirth edward yourdon related fields computer science computer engineering project management risk management systems engineering category commons v t e major fields of computer science note this template roughly follows the 2012 acm computing classification system hardware printed circuit board peripheral integrated circuit verylargescale integration energy consumption electronic design automation computer systems organization computer architecture embedded system realtime computing dependability networks network architecture network protocol network components network scheduler network performance evaluation network service software organization interpreter middleware virtual machine operating system software quality software notations and tools programming paradigm programming language compiler domainspecific language modeling language software framework integrated development environment software configuration management software library software repository software development software development process requirements analysis software design software construction software deployment software maintenance programming team opensource model theory of computation model of computation formal language automata theory computational complexity theory logic semantics algorithms algorithm design analysis of algorithms randomized algorithm computational geometry mathematics of computing discrete mathematics probability statistics mathematical software information theory mathematical analysis numerical analysis information systems database management system information storage systems enterprise information system social information systems geographic information system decision support system process control system multimedia information system data mining digital library computing platform digital marketing world wide web information retrieval security cryptography formal methods security services intrusion detection system hardware security network security information security application security human–computer interaction interaction design social computing ubiquitous computing visualization accessibility concurrency concurrent computing parallel computing distributed computing multithreading multiprocessing artificial intelligence natural language processing knowledge representation and reasoning computer vision automated planning and scheduling search methodology control method philosophy of artificial intelligence distributed artificial intelligence machine learning supervised learning unsupervised learning reinforcement learning multitask learning crossvalidation graphics animation rendering image manipulation graphics processing unit mixed reality virtual reality image compression solid modeling applied computing ecommerce enterprise software computational mathematics computational physics computational chemistry computational biology computational social science computational engineering computational healthcare digital art electronic publishing cyberwarfare electronic voting video game word processing operations research educational technology document management book category portal wikiproject commons programming v t e programming language generations 1gl 2gl 3gl 4gl 5gl v t e programming languages comparison timeline history assembly basic c c c cobol fortran go groovy haskell java javascript js kotlin lisp lua objectivec pascal perl php python ruby shell smalltalk swift visual basic net vbnet more category lists alphabetical categorical generational nonenglishbased v t e types of programming languages actorbased array aspectoriented classbased concatenative concurrent datastructured dataflow declarative domainspecific dynamic esoteric eventdriven extensible functional imperative logic macro metaprogramming multiparadigm objectbased objectoriented pipeline procedural prototypebased reflective rulebased scripting synchronous templating assembly compiled interpreted machine lowlevel highlevel very highlevel first generation second generation third generation fourth generation fifth generation nonenglishbased visual v t e major fields of computer science note this template roughly follows the 2012 acm computing classification system hardware printed circuit board peripheral integrated circuit verylargescale integration energy consumption electronic design automation computer systems organization computer architecture embedded system realtime computing dependability networks network architecture network protocol network components network scheduler network performance evaluation network service software organization interpreter middleware virtual machine operating system software quality software notations and tools programming paradigm programming language compiler domainspecific language modeling language software framework integrated development environment software configuration management software library software repository software development software development process requirements analysis software design software construction software deployment software maintenance programming team opensource model theory of computation model of computation formal language automata theory computational complexity theory logic semantics algorithms algorithm design analysis of algorithms randomized algorithm computational geometry mathematics of computing discrete mathematics probability statistics mathematical software information theory mathematical analysis numerical analysis information systems database management system information storage systems enterprise information system social information systems geographic information system decision support system process control system multimedia information system data mining digital library computing platform digital marketing world wide web information retrieval security cryptography formal methods security services intrusion detection system hardware security network security information security application security human–computer interaction interaction design social computing ubiquitous computing visualization accessibility concurrency concurrent computing parallel computing distributed computing multithreading multiprocessing artificial intelligence natural language processing knowledge representation and reasoning computer vision automated planning and scheduling search methodology control method philosophy of artificial intelligence distributed artificial intelligence machine learning supervised learning unsupervised learning reinforcement learning multitask learning crossvalidation graphics animation rendering image manipulation graphics processing unit mixed reality virtual reality image compression solid modeling applied computing ecommerce enterprise software computational mathematics computational physics computational chemistry computational biology computational social science computational engineering computational healthcare digital art electronic publishing cyberwarfare electronic voting video game word processing operations research educational technology document management book category portal wikiproject commons retrieved from httpsenwikipediaorgwindexphptitleprogrammingparadigmoldid806334219 categories programming paradigms programming language classification programming language topics hidden categories articles needing additional references from february 2011 all articles needing additional references navigation menu personal tools not logged in talk contributions create account log in namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate to wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page printexport create a book download as pdf printable version languages العربية български bosanski català čeština dansk deutsch eesti ελληνικά español esperanto euskara فارسی français galego 한국어 bahasa indonesia italiano עברית kiswahili latina latviešu magyar македонски bahasa melayu mirandés nederlands 日本語 norsk polski português română русский scots shqip simple english српски srpski srpskohrvatski српскохрватски suomi svenska ไทย türkçe українська اردو tiếng việt 中文 edit links this page was last edited on 21 october 2017 at 0925 text is available under the creative commons attributionsharealike license additional terms may apply by using this site you agree to the terms of use and privacy policy wikipedia® is a registered trademark of the wikimedia foundation inc a nonprofit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_model
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/File:Question_book-new.svg
https://en.wikipedia.org/wiki/Wikipedia:Verifiability
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit
https://en.wikipedia.org/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1
https://en.wikipedia.org/wiki/Help:Maintenance_template_removal
https://en.wikipedia.org/wiki/Action_language
https://en.wikipedia.org/wiki/Agent-oriented_programming
https://en.wikipedia.org/wiki/Array_programming
https://en.wikipedia.org/wiki/Automata-based_programming
https://en.wikipedia.org/wiki/Concept_programming
https://en.wikipedia.org/wiki/Concurrent_computing
https://en.wikipedia.org/wiki/Relativistic_programming
https://en.wikipedia.org/wiki/Data-driven_programming
https://en.wikipedia.org/wiki/Declarative_programming
https://en.wikipedia.org/wiki/Imperative_programming
https://en.wikipedia.org/wiki/Constraint_programming
https://en.wikipedia.org/wiki/Constraint_logic_programming
https://en.wikipedia.org/wiki/Concurrent_constraint_logic_programming
https://en.wikipedia.org/wiki/Dataflow_programming
https://en.wikipedia.org/wiki/Flow-based_programming
https://en.wikipedia.org/wiki/Spreadsheet
https://en.wikipedia.org/wiki/Reactive_programming
https://en.wikipedia.org/wiki/Functional_programming
https://en.wikipedia.org/wiki/Functional_logic_programming
https://en.wikipedia.org/wiki/Purely_functional_programming
https://en.wikipedia.org/wiki/Logic_programming
https://en.wikipedia.org/wiki/Abductive_logic_programming
https://en.wikipedia.org/wiki/Answer_set_programming
https://en.wikipedia.org/wiki/Concurrent_logic_programming
https://en.wikipedia.org/wiki/Functional_logic_programming
https://en.wikipedia.org/wiki/Inductive_logic_programming
https://en.wikipedia.org/wiki/Dynamic_programming_language
https://en.wikipedia.org/wiki/End-user_development
https://en.wikipedia.org/wiki/Event-driven_programming
https://en.wikipedia.org/wiki/Service-oriented_architecture
https://en.wikipedia.org/wiki/Time-driven_programming
https://en.wikipedia.org/wiki/Expression-oriented_programming_language
https://en.wikipedia.org/wiki/Feature-oriented_programming
https://en.wikipedia.org/wiki/Function-level_programming
https://en.wikipedia.org/wiki/Value-level_programming
https://en.wikipedia.org/wiki/Generic_programming
https://en.wikipedia.org/wiki/Imperative_programming
https://en.wikipedia.org/wiki/Declarative_programming
https://en.wikipedia.org/wiki/Literate_programming
https://en.wikipedia.org/wiki/Procedural_programming
https://en.wikipedia.org/wiki/Language-oriented_programming
https://en.wikipedia.org/wiki/Natural_language_programming
https://en.wikipedia.org/wiki/Service-oriented_modeling
https://en.wikipedia.org/wiki/Domain-specific_language
https://en.wikipedia.org/wiki/Grammar-oriented_programming
https://en.wikipedia.org/wiki/Dialect_(computing)
https://en.wikipedia.org/wiki/Intentional_programming
https://en.wikipedia.org/wiki/Metaprogramming
https://en.wikipedia.org/wiki/Automatic_programming
https://en.wikipedia.org/wiki/Inductive_programming
https://en.wikipedia.org/wiki/Reflection_(computer_programming)
https://en.wikipedia.org/wiki/Attribute-oriented_programming
https://en.wikipedia.org/wiki/Homoiconicity
https://en.wikipedia.org/wiki/Macro_(computer_science)
https://en.wikipedia.org/wiki/Template_metaprogramming
https://en.wikipedia.org/wiki/Policy-based_design
https://en.wikipedia.org/wiki/Non-structured_programming
https://en.wikipedia.org/wiki/Structured_programming
https://en.wikipedia.org/wiki/Array_programming
https://en.wikipedia.org/wiki/Nondeterministic_programming
https://en.wikipedia.org/wiki/Parallel_computing
https://en.wikipedia.org/wiki/Process-oriented_programming
https://en.wikipedia.org/wiki/Tacit_programming
https://en.wikipedia.org/wiki/Concatenative_programming_language
https://en.wikipedia.org/wiki/Probabilistic_programming_language
https://en.wikipedia.org/wiki/Semantic-oriented_programming
https://en.wikipedia.org/wiki/Structured_programming
https://en.wikipedia.org/wiki/Non-structured_programming
https://en.wikipedia.org/wiki/Block_(programming)
https://en.wikipedia.org/wiki/Modular_programming
https://en.wikipedia.org/wiki/Monolithic_application
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Actor_model
https://en.wikipedia.org/wiki/Class-based_programming
https://en.wikipedia.org/wiki/Concurrent_object-oriented_programming
https://en.wikipedia.org/wiki/Prototype-based_programming
https://en.wikipedia.org/wiki/Separation_of_concerns
https://en.wikipedia.org/wiki/Aspect-oriented_programming
https://en.wikipedia.org/wiki/Role-oriented_programming
https://en.wikipedia.org/wiki/Subject-oriented_programming
https://en.wikipedia.org/wiki/Recursion_(computer_science)
https://en.wikipedia.org/wiki/Value-level_programming
https://en.wikipedia.org/wiki/Function-level_programming
https://en.wikipedia.org/wiki/Template:Programming_paradigms
https://en.wikipedia.org/wiki/Template_talk:Programming_paradigms
https://en.wikipedia.org/w/index.php?title=Template:Programming_paradigms&action=edit
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Execution_model
https://en.wikipedia.org/wiki/Side_effect_(computer_science)
https://en.wikipedia.org/wiki/Imperative_programming
https://en.wikipedia.org/wiki/Functional_programming
https://en.wikipedia.org/wiki/Declarative_programming
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Procedural_programming
https://en.wikipedia.org/wiki/Logic_programming
https://en.wikipedia.org/wiki/Symbolic_programming
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Object_(programming)
https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit&section=1
https://en.wikipedia.org/wiki/File:Programming_paradigms.svg
https://en.wikipedia.org/wiki/File:Programming_paradigms.svg
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Smalltalk
https://en.wikipedia.org/wiki/Haskell_(programming_language)
https://en.wikipedia.org/wiki/Object_Pascal
https://en.wikipedia.org/wiki/C++
https://en.wikipedia.org/wiki/Java_(programming_language)
https://en.wikipedia.org/wiki/C_Sharp_(programming_language)
https://en.wikipedia.org/wiki/Scala_(programming_language)
https://en.wikipedia.org/wiki/Visual_Basic
https://en.wikipedia.org/wiki/Common_Lisp
https://en.wikipedia.org/wiki/Scheme_(programming_language)
https://en.wikipedia.org/wiki/Perl
https://en.wikipedia.org/wiki/PHP
https://en.wikipedia.org/wiki/Python_(programming_language)
https://en.wikipedia.org/wiki/Ruby_(programming_language)
https://en.wikipedia.org/wiki/Oz_(programming_language)
https://en.wikipedia.org/wiki/F_Sharp_(programming_language)
https://en.wikipedia.org/wiki/Procedural_programming
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Functional_programming
https://en.wikipedia.org/wiki/Process-oriented_programming
https://en.wikipedia.org/wiki/Data_structure
https://en.wikipedia.org/wiki/Side-effect_(computer_science)
https://en.wikipedia.org/wiki/Structured_programming
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Automated_theorem_proving
https://en.wikipedia.org/wiki/Programming_model
https://en.wikipedia.org/wiki/Execution_model
https://en.wikipedia.org/wiki/Parallel_computing
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit&section=2
https://en.wikipedia.org/wiki/Structured_programming
https://en.wikipedia.org/wiki/Turing_Award
https://en.wikipedia.org/wiki/Robert_W._Floyd
https://en.wikipedia.org/wiki/Thomas_Kuhn
https://en.wikipedia.org/wiki/The_Structure_of_Scientific_Revolutions
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit&section=3
https://en.wikipedia.org/wiki/Low-level_programming_language
https://en.wikipedia.org/wiki/Machine_code
https://en.wikipedia.org/wiki/Instruction_set
https://en.wikipedia.org/wiki/Assembly_language
https://en.wikipedia.org/wiki/Memory_address
https://en.wikipedia.org/wiki/First-generation_programming_language
https://en.wikipedia.org/wiki/Second-generation_programming_language
https://en.wikipedia.org/wiki/Subroutine
https://en.wikipedia.org/wiki/Embedded_system
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit&section=4
https://en.wikipedia.org/wiki/Procedural_language
https://en.wikipedia.org/wiki/Third-generation_programming_language
https://en.wikipedia.org/wiki/High-level_programming_language
https://en.wikipedia.org/wiki/COBOL
https://en.wikipedia.org/wiki/Computer_file
https://en.wikipedia.org/wiki/Move_(command)
https://en.wikipedia.org/wiki/Copy_(command)
https://en.wikipedia.org/wiki/FORTRAN
https://en.wikipedia.org/wiki/Mathematical
https://en.wikipedia.org/wiki/ALGOL
https://en.wikipedia.org/wiki/Algorithm
https://en.wikipedia.org/wiki/PL/I
https://en.wikipedia.org/wiki/Pointer_(computer_programming)
https://en.wikipedia.org/wiki/BASIC
https://en.wikipedia.org/wiki/C_(programming_language)
https://en.wikipedia.org/wiki/Dennis_Ritchie
https://en.wikipedia.org/wiki/AT&T_Bell_Labs
https://en.wikipedia.org/wiki/Efficacy
https://en.wikipedia.org/wiki/Algorithmic_efficiency
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit&section=5
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Simula
https://en.wikipedia.org/wiki/Smalltalk
https://en.wikipedia.org/wiki/C++
https://en.wikipedia.org/wiki/C_Sharp_(programming_language)
https://en.wikipedia.org/wiki/Eiffel_(programming_language)
https://en.wikipedia.org/wiki/PHP
https://en.wikipedia.org/wiki/Java_(programming_language)
https://en.wikipedia.org/wiki/Data
https://en.wikipedia.org/wiki/Object_(computer_science)
https://en.wikipedia.org/wiki/Method_(computer_programming)
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Alexander_Stepanov
https://en.wikipedia.org/wiki/Richard_Stallman
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Software_bloat
https://en.wikipedia.org/wiki/Polymorphism_(computer_science)
https://en.wikipedia.org/wiki/High_Level_Assembly
https://en.wikipedia.org/wiki/Meme
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit&section=6
https://en.wikipedia.org/wiki/Literate_programming
https://en.wikipedia.org/wiki/Imperative_programming
https://en.wikipedia.org/wiki/Hypertext
https://en.wikipedia.org/wiki/Declarative_programming
https://en.wikipedia.org/wiki/Fourth-generation_programming_language
https://en.wikipedia.org/wiki/SQL
https://en.wikipedia.org/wiki/Functional_programming
https://en.wikipedia.org/wiki/Subroutine
https://en.wikipedia.org/wiki/Function_(mathematics)
https://en.wikipedia.org/wiki/Assignment_(computer_science)
https://en.wikipedia.org/wiki/Recursion_(computer_science)
https://en.wikipedia.org/wiki/Logic_programming
https://en.wikipedia.org/wiki/Automated_reasoning
https://en.wikipedia.org/wiki/Problem_domain
https://en.wikipedia.org/wiki/Inference_rule
https://en.wikipedia.org/wiki/Symbolic_programming
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Artificial_intelligence
https://en.wikipedia.org/wiki/Expert_system
https://en.wikipedia.org/wiki/Natural_language_processing
https://en.wikipedia.org/wiki/Lisp_(programming_language)
https://en.wikipedia.org/wiki/Prolog
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit&section=7
https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/C_sharp_(programming_language)
https://en.wikipedia.org/wiki/Imperative_programming
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Functional_programming
https://en.wikipedia.org/wiki/Delegate_(CLI)
https://en.wikipedia.org/wiki/Type_inference
https://en.wikipedia.org/wiki/Anonymous_function
https://en.wikipedia.org/wiki/Language_Integrated_Query
https://en.wikipedia.org/wiki/F_sharp_(programming_language)
https://en.wikipedia.org/wiki/Scala_(programming_language)
https://en.wikipedia.org/wiki/Functional_programming
https://en.wikipedia.org/wiki/Currying
https://en.wikipedia.org/wiki/Pattern_matching
https://en.wikipedia.org/wiki/Algebraic_data_types
https://en.wikipedia.org/wiki/Lazy_evaluation
https://en.wikipedia.org/wiki/Tail_recursion
https://en.wikipedia.org/wiki/Immutable_object
https://en.wikipedia.org/wiki/Oz_(programming_language)
https://en.wikipedia.org/wiki/Logic_programming
https://en.wikipedia.org/wiki/Functional_programming
https://en.wikipedia.org/wiki/Object-oriented_programming_language
https://en.wikipedia.org/wiki/Dataflow
https://en.wikipedia.org/wiki/Lisp_(programming_language)
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit&section=8
https://en.wikipedia.org/wiki/File:8bit-dynamiclist_(reversed).gif
https://en.wikipedia.org/wiki/Portal:Computer_programming
https://en.wikipedia.org/wiki/Architecture_description_language
https://en.wikipedia.org/wiki/Comparison_of_programming_languages
https://en.wikipedia.org/wiki/Comparison_of_programming_paradigms
https://en.wikipedia.org/wiki/Domain-specific_language
https://en.wikipedia.org/wiki/Mindset
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Programming_domain
https://en.wikipedia.org/wiki/Type_system
https://en.wikipedia.org/wiki/Turing_completeness
https://en.wikipedia.org/wiki/Von_Neumann_programming_languages
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit&section=9
https://en.wikipedia.org/wiki/Programming_paradigm
http://people.cs.aau.dk/~normark/prog3-03/html/notes/paradigms_themes-paradigm-overview-section.html
https://en.wikipedia.org/wiki/Programming_paradigm
http://cgi.csc.liv.ac.uk/~frans/OldLectures/2CS24/declarative.html
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
http://www.ai.uga.edu/mc/LispNotes/FirstLectureOnSymbolicProgramming.pdf
https://en.wikipedia.org/wiki/Programming_paradigm
http://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf
https://en.wikipedia.org/wiki/Programming_paradigm
https://web.archive.org/web/20090320002214/http:/www.ecn.purdue.edu/ParaMount/papers/rubin87goto.pdf
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.1145/214748.315722
http://www.ecn.purdue.edu/ParaMount/papers/rubin87goto.pdf
https://en.wikipedia.org/wiki/Programming_paradigm
http://dl.acm.org/ft_gateway.cfm?id=359140&ftid=289772&dwn=1&CFID=285645736&CFTOKEN=55009136
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.1145/359138.359140
https://en.wikipedia.org/wiki/Programming_paradigm
http://groups.google.com/group/comp.emacs.xemacs/browse_thread/thread/d0af257a2837640c/37f251537fafbb03?lnk=st&q=%22Richard+Stallman%22+oop&rnum=5&hl=en
https://en.wikipedia.org/wiki/Programming_paradigm
http://www.allbusiness.com/glossaries/symbolic-programming/4950308-1.html
https://en.wikipedia.org/wiki/Programming_paradigm
https://developer.mozilla.org/en-US/docs/multiparadigmlanguage.html
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit&section=10
http://www.info.ucl.ac.be/~pvr/paradigms.html
http://www.janeve.me/articles/understanding-programming-paradigms
https://en.wikipedia.org/wiki/Template:Computer_language
https://en.wikipedia.org/wiki/Template_talk:Computer_language
https://en.wikipedia.org/w/index.php?title=Template:Computer_language&action=edit
https://en.wikipedia.org/wiki/Computer_language
https://en.wikipedia.org/wiki/Architecture_description_language
https://en.wikipedia.org/wiki/Hardware_description_language
https://en.wikipedia.org/wiki/Knowledge_representation_language
https://en.wikipedia.org/wiki/Markup_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Query_language
https://en.wikipedia.org/wiki/Specification_language
https://en.wikipedia.org/wiki/Style_sheet_language
https://en.wikipedia.org/wiki/Transformation_language
https://en.wikipedia.org/wiki/Category:Lists_of_computer_languages
https://en.wikipedia.org/wiki/Category:Lists_of_programming_languages
https://en.wikipedia.org/wiki/List_of_programming_languages_by_type
https://en.wikipedia.org/wiki/Template:Software_engineering
https://en.wikipedia.org/wiki/Template_talk:Software_engineering
https://en.wikipedia.org/w/index.php?title=Template:Software_engineering&action=edit
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Computer_programming
https://en.wikipedia.org/wiki/Requirements_engineering
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Software_testing
https://en.wikipedia.org/wiki/Systems_analysis
https://en.wikipedia.org/wiki/Formal_methods
https://en.wikipedia.org/wiki/Data_modeling
https://en.wikipedia.org/wiki/Enterprise_architecture
https://en.wikipedia.org/wiki/Functional_specification
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Orthogonality_(programming)
https://en.wikipedia.org/wiki/Software
https://en.wikipedia.org/wiki/Software_archaeology
https://en.wikipedia.org/wiki/Software_architecture
https://en.wikipedia.org/wiki/Software_configuration_management
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_quality
https://en.wikipedia.org/wiki/Software_quality_assurance
https://en.wikipedia.org/wiki/Software_verification_and_validation
https://en.wikipedia.org/wiki/Structured_analysis
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Aspect-oriented_software_development
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Ontology_(information_science)
https://en.wikipedia.org/wiki/Service-oriented_architecture
https://en.wikipedia.org/wiki/Systems_development_life_cycle
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Enterprise_Unified_Process
https://en.wikipedia.org/wiki/Executable_UML
https://en.wikipedia.org/wiki/Incremental_build_model
https://en.wikipedia.org/wiki/Iterative_and_incremental_development
https://en.wikipedia.org/wiki/Software_prototyping
https://en.wikipedia.org/wiki/Rapid_application_development
https://en.wikipedia.org/wiki/Unified_Process
https://en.wikipedia.org/wiki/Scrum_(software_development)
https://en.wikipedia.org/wiki/Spiral_model
https://en.wikipedia.org/wiki/V-Model_(software_development)
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Extreme_programming
https://en.wikipedia.org/wiki/ISO/IEC_15504
https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration
https://en.wikipedia.org/wiki/Data_model
https://en.wikipedia.org/wiki/Entity–relationship_model
https://en.wikipedia.org/wiki/Function_model
https://en.wikipedia.org/wiki/Information_model
https://en.wikipedia.org/wiki/Metamodeling
https://en.wikipedia.org/wiki/Object_model
https://en.wikipedia.org/wiki/Systems_modeling
https://en.wikipedia.org/wiki/View_model
https://en.wikipedia.org/wiki/IDEF
https://en.wikipedia.org/wiki/Unified_Modeling_Language
https://en.wikipedia.org/wiki/Universal_Systems_Language
https://en.wikipedia.org/wiki/Systems_Modeling_Language
https://en.wikipedia.org/wiki/Victor_Basili
https://en.wikipedia.org/wiki/Kent_Beck
https://en.wikipedia.org/wiki/Grady_Booch
https://en.wikipedia.org/wiki/Fred_Brooks
https://en.wikipedia.org/wiki/Barry_Boehm
https://en.wikipedia.org/wiki/Peter_Chen
https://en.wikipedia.org/wiki/Danese_Cooper
https://en.wikipedia.org/wiki/Ward_Cunningham
https://en.wikipedia.org/wiki/Tom_DeMarco
https://en.wikipedia.org/wiki/Edsger_W._Dijkstra
https://en.wikipedia.org/wiki/Delores_M._Etter
https://en.wikipedia.org/wiki/Martin_Fowler
https://en.wikipedia.org/wiki/Adele_Goldstine
https://en.wikipedia.org/wiki/Margaret_Hamilton_(scientist)
https://en.wikipedia.org/wiki/Tony_Hoare
https://en.wikipedia.org/wiki/Lois_Haibt
https://en.wikipedia.org/wiki/Mary_Jean_Harrold
https://en.wikipedia.org/wiki/Grace_Hopper
https://en.wikipedia.org/wiki/Watts_Humphrey
https://en.wikipedia.org/wiki/Michael_A._Jackson
https://en.wikipedia.org/wiki/Ivar_Jacobson
https://en.wikipedia.org/wiki/Alan_Kay
https://en.wikipedia.org/wiki/Nancy_Leveson
https://en.wikipedia.org/wiki/Stephen_J._Mellor
https://en.wikipedia.org/wiki/Bertrand_Meyer
https://en.wikipedia.org/wiki/David_Parnas
https://en.wikipedia.org/wiki/Trygve_Reenskaug
https://en.wikipedia.org/wiki/Winston_W._Royce
https://en.wikipedia.org/wiki/James_Rumbaugh
https://en.wikipedia.org/wiki/Mary_Shaw_(computer_scientist)
https://en.wikipedia.org/wiki/Peri_Tarr
https://en.wikipedia.org/wiki/Elaine_Weyuker
https://en.wikipedia.org/wiki/Niklaus_Wirth
https://en.wikipedia.org/wiki/Edward_Yourdon
https://en.wikipedia.org/wiki/Computer_science
https://en.wikipedia.org/wiki/Computer_engineering
https://en.wikipedia.org/wiki/Project_management
https://en.wikipedia.org/wiki/Risk_management
https://en.wikipedia.org/wiki/Systems_engineering
https://en.wikipedia.org/wiki/Category:Software_engineering
https://commons.wikimedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Template:Computer_science
https://en.wikipedia.org/wiki/Template_talk:Computer_science
https://en.wikipedia.org/w/index.php?title=Template:Computer_science&action=edit
https://en.wikipedia.org/wiki/Computer_science
https://en.wikipedia.org/wiki/ACM_Computing_Classification_System
https://en.wikipedia.org/wiki/Computer_hardware
https://en.wikipedia.org/wiki/Printed_circuit_board
https://en.wikipedia.org/wiki/Peripheral
https://en.wikipedia.org/wiki/Integrated_circuit
https://en.wikipedia.org/wiki/Very-large-scale_integration
https://en.wikipedia.org/wiki/Green_computing
https://en.wikipedia.org/wiki/Electronic_design_automation
https://en.wikipedia.org/wiki/Computer_architecture
https://en.wikipedia.org/wiki/Embedded_system
https://en.wikipedia.org/wiki/Real-time_computing
https://en.wikipedia.org/wiki/Dependability
https://en.wikipedia.org/wiki/Computer_network
https://en.wikipedia.org/wiki/Network_architecture
https://en.wikipedia.org/wiki/Network_protocol
https://en.wikipedia.org/wiki/Networking_hardware
https://en.wikipedia.org/wiki/Network_scheduler
https://en.wikipedia.org/wiki/Network_performance
https://en.wikipedia.org/wiki/Network_service
https://en.wikipedia.org/wiki/Interpreter_(computing)
https://en.wikipedia.org/wiki/Middleware
https://en.wikipedia.org/wiki/Virtual_machine
https://en.wikipedia.org/wiki/Operating_system
https://en.wikipedia.org/wiki/Software_quality
https://en.wikipedia.org/wiki/Programming_language_theory
https://en.wikipedia.org/wiki/Programming_tool
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Compiler_construction
https://en.wikipedia.org/wiki/Domain-specific_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Software_framework
https://en.wikipedia.org/wiki/Integrated_development_environment
https://en.wikipedia.org/wiki/Software_configuration_management
https://en.wikipedia.org/wiki/Library_(computing)
https://en.wikipedia.org/wiki/Software_repository
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Requirements_analysis
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_construction
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Programming_team
https://en.wikipedia.org/wiki/Open-source_software
https://en.wikipedia.org/wiki/Theory_of_computation
https://en.wikipedia.org/wiki/Model_of_computation
https://en.wikipedia.org/wiki/Formal_language
https://en.wikipedia.org/wiki/Automata_theory
https://en.wikipedia.org/wiki/Computational_complexity_theory
https://en.wikipedia.org/wiki/Logic_in_computer_science
https://en.wikipedia.org/wiki/Semantics_(computer_science)
https://en.wikipedia.org/wiki/Algorithm
https://en.wikipedia.org/wiki/Algorithm_design
https://en.wikipedia.org/wiki/Analysis_of_algorithms
https://en.wikipedia.org/wiki/Randomized_algorithm
https://en.wikipedia.org/wiki/Computational_geometry
https://en.wikipedia.org/wiki/Discrete_mathematics
https://en.wikipedia.org/wiki/Probability
https://en.wikipedia.org/wiki/Statistics
https://en.wikipedia.org/wiki/Mathematical_software
https://en.wikipedia.org/wiki/Information_theory
https://en.wikipedia.org/wiki/Mathematical_analysis
https://en.wikipedia.org/wiki/Numerical_analysis
https://en.wikipedia.org/wiki/Information_system
https://en.wikipedia.org/wiki/Database_management_system
https://en.wikipedia.org/wiki/Computer_data_storage
https://en.wikipedia.org/wiki/Enterprise_information_system
https://en.wikipedia.org/wiki/Social_software
https://en.wikipedia.org/wiki/Geographic_information_system
https://en.wikipedia.org/wiki/Decision_support_system
https://en.wikipedia.org/wiki/Process_control
https://en.wikipedia.org/wiki/Multimedia_database
https://en.wikipedia.org/wiki/Data_mining
https://en.wikipedia.org/wiki/Digital_library
https://en.wikipedia.org/wiki/Computing_platform
https://en.wikipedia.org/wiki/Digital_marketing
https://en.wikipedia.org/wiki/World_Wide_Web
https://en.wikipedia.org/wiki/Information_retrieval
https://en.wikipedia.org/wiki/Computer_security
https://en.wikipedia.org/wiki/Cryptography
https://en.wikipedia.org/wiki/Formal_methods
https://en.wikipedia.org/wiki/Security_service_(telecommunication)
https://en.wikipedia.org/wiki/Intrusion_detection_system
https://en.wikipedia.org/wiki/Computer_security_compromised_by_hardware_failure
https://en.wikipedia.org/wiki/Network_security
https://en.wikipedia.org/wiki/Information_security
https://en.wikipedia.org/wiki/Application_security
https://en.wikipedia.org/wiki/Human–computer_interaction
https://en.wikipedia.org/wiki/Interaction_design
https://en.wikipedia.org/wiki/Social_computing
https://en.wikipedia.org/wiki/Ubiquitous_computing
https://en.wikipedia.org/wiki/Visualization_(computer_graphics)
https://en.wikipedia.org/wiki/Computer_accessibility
https://en.wikipedia.org/wiki/Concurrency_(computer_science)
https://en.wikipedia.org/wiki/Concurrent_computing
https://en.wikipedia.org/wiki/Parallel_computing
https://en.wikipedia.org/wiki/Distributed_computing
https://en.wikipedia.org/wiki/Multithreading_(computer_architecture)
https://en.wikipedia.org/wiki/Multiprocessing
https://en.wikipedia.org/wiki/Artificial_intelligence
https://en.wikipedia.org/wiki/Natural_language_processing
https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning
https://en.wikipedia.org/wiki/Computer_vision
https://en.wikipedia.org/wiki/Automated_planning_and_scheduling
https://en.wikipedia.org/wiki/Mathematical_optimization
https://en.wikipedia.org/wiki/Control_theory
https://en.wikipedia.org/wiki/Philosophy_of_artificial_intelligence
https://en.wikipedia.org/wiki/Distributed_artificial_intelligence
https://en.wikipedia.org/wiki/Machine_learning
https://en.wikipedia.org/wiki/Supervised_learning
https://en.wikipedia.org/wiki/Unsupervised_learning
https://en.wikipedia.org/wiki/Reinforcement_learning
https://en.wikipedia.org/wiki/Multi-task_learning
https://en.wikipedia.org/wiki/Cross-validation_(statistics)
https://en.wikipedia.org/wiki/Computer_graphics
https://en.wikipedia.org/wiki/Computer_animation
https://en.wikipedia.org/wiki/Rendering_(computer_graphics)
https://en.wikipedia.org/wiki/Photo_manipulation
https://en.wikipedia.org/wiki/Graphics_processing_unit
https://en.wikipedia.org/wiki/Mixed_reality
https://en.wikipedia.org/wiki/Virtual_reality
https://en.wikipedia.org/wiki/Image_compression
https://en.wikipedia.org/wiki/Solid_modeling
https://en.wikipedia.org/wiki/E-commerce
https://en.wikipedia.org/wiki/Enterprise_software
https://en.wikipedia.org/wiki/Computational_mathematics
https://en.wikipedia.org/wiki/Computational_physics
https://en.wikipedia.org/wiki/Computational_chemistry
https://en.wikipedia.org/wiki/Computational_biology
https://en.wikipedia.org/wiki/Computational_social_science
https://en.wikipedia.org/wiki/Computational_engineering
https://en.wikipedia.org/wiki/Health_informatics
https://en.wikipedia.org/wiki/Digital_art
https://en.wikipedia.org/wiki/Electronic_publishing
https://en.wikipedia.org/wiki/Cyberwarfare
https://en.wikipedia.org/wiki/Electronic_voting
https://en.wikipedia.org/wiki/Video_game
https://en.wikipedia.org/wiki/Word_processor
https://en.wikipedia.org/wiki/Operations_research
https://en.wikipedia.org/wiki/Educational_technology
https://en.wikipedia.org/wiki/Document_management_system
https://en.wikipedia.org/wiki/Book:Computer_science
https://en.wikipedia.org/wiki/Category:Computer_science
https://en.wikipedia.org/wiki/Portal:Computer_science
https://en.wikipedia.org/wiki/Wikipedia:WikiProject_Computer_science
https://commons.wikimedia.org/wiki/Category:Computer_science
https://en.wikipedia.org/wiki/Template:Programming_language_generations
https://en.wikipedia.org/wiki/Template_talk:Programming_language_generations
https://en.wikipedia.org/w/index.php?title=Template:Programming_language_generations&action=edit
https://en.wikipedia.org/wiki/Programming_language_generations
https://en.wikipedia.org/wiki/First-generation_programming_language
https://en.wikipedia.org/wiki/Second-generation_programming_language
https://en.wikipedia.org/wiki/Third-generation_programming_language
https://en.wikipedia.org/wiki/Fourth-generation_programming_language
https://en.wikipedia.org/wiki/Fifth-generation_programming_language
https://en.wikipedia.org/wiki/Template:Programming_languages
https://en.wikipedia.org/wiki/Template_talk:Programming_languages
https://en.wikipedia.org/w/index.php?title=Template:Programming_languages&action=edit
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Comparison_of_programming_languages
https://en.wikipedia.org/wiki/Timeline_of_programming_languages
https://en.wikipedia.org/wiki/History_of_programming_languages
https://en.wikipedia.org/wiki/Assembly_language
https://en.wikipedia.org/wiki/BASIC
https://en.wikipedia.org/wiki/C_(programming_language)
https://en.wikipedia.org/wiki/C++
https://en.wikipedia.org/wiki/C_Sharp_(programming_language)
https://en.wikipedia.org/wiki/COBOL
https://en.wikipedia.org/wiki/Fortran
https://en.wikipedia.org/wiki/Go_(programming_language)
https://en.wikipedia.org/wiki/Groovy_(programming_language)
https://en.wikipedia.org/wiki/Haskell_(programming_language)
https://en.wikipedia.org/wiki/Java_(programming_language)
https://en.wikipedia.org/wiki/JavaScript
https://en.wikipedia.org/wiki/Kotlin_(programming_language)
https://en.wikipedia.org/wiki/Lisp_(programming_language)
https://en.wikipedia.org/wiki/Lua_(programming_language)
https://en.wikipedia.org/wiki/Objective-C
https://en.wikipedia.org/wiki/Pascal_(programming_language)
https://en.wikipedia.org/wiki/Perl
https://en.wikipedia.org/wiki/PHP
https://en.wikipedia.org/wiki/Python_(programming_language)
https://en.wikipedia.org/wiki/Ruby_(programming_language)
https://en.wikipedia.org/wiki/Shell_script
https://en.wikipedia.org/wiki/Smalltalk
https://en.wikipedia.org/wiki/Swift_(programming_language)
https://en.wikipedia.org/wiki/Visual_Basic_.NET
https://en.wikipedia.org/wiki/List_of_programming_languages
https://en.wikipedia.org/wiki/Category:Programming_languages
https://en.wikipedia.org/wiki/List_of_programming_languages
https://en.wikipedia.org/wiki/List_of_programming_languages_by_type
https://en.wikipedia.org/wiki/Generational_list_of_programming_languages
https://en.wikipedia.org/wiki/Non-English-based_programming_languages
https://en.wikipedia.org/wiki/Template:Types_of_programming_languages
https://en.wikipedia.org/wiki/Template_talk:Types_of_programming_languages
https://en.wikipedia.org/w/index.php?title=Template:Types_of_programming_languages&action=edit
https://en.wikipedia.org/wiki/Actor_model
https://en.wikipedia.org/wiki/Array_programming
https://en.wikipedia.org/wiki/Aspect-oriented_programming
https://en.wikipedia.org/wiki/Class-based_programming
https://en.wikipedia.org/wiki/Concatenative_programming_language
https://en.wikipedia.org/wiki/Concurrent_computing
https://en.wikipedia.org/wiki/Data-structured_language
https://en.wikipedia.org/wiki/Dataflow_programming
https://en.wikipedia.org/wiki/Declarative_programming
https://en.wikipedia.org/wiki/Domain-specific_language
https://en.wikipedia.org/wiki/Dynamic_programming_language
https://en.wikipedia.org/wiki/Esoteric_programming_language
https://en.wikipedia.org/wiki/Event-driven_programming
https://en.wikipedia.org/wiki/Extensible_programming
https://en.wikipedia.org/wiki/Functional_programming
https://en.wikipedia.org/wiki/Imperative_programming
https://en.wikipedia.org/wiki/Logic_programming
https://en.wikipedia.org/wiki/Macro_(computer_science)
https://en.wikipedia.org/wiki/Metaprogramming
https://en.wikipedia.org/wiki/Multi-paradigm_programming_language
https://en.wikipedia.org/wiki/Object-based_language
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Pipeline_programming
https://en.wikipedia.org/wiki/Procedural_programming
https://en.wikipedia.org/wiki/Prototype-based_programming
https://en.wikipedia.org/wiki/Reflection_(computer_programming)
https://en.wikipedia.org/wiki/Rule-based_system
https://en.wikipedia.org/wiki/Scripting_language
https://en.wikipedia.org/wiki/Synchronous_programming_language
https://en.wikipedia.org/wiki/Templating_language
https://en.wikipedia.org/wiki/Assembly_language
https://en.wikipedia.org/wiki/Compiled_language
https://en.wikipedia.org/wiki/Interpreted_language
https://en.wikipedia.org/wiki/Machine_code
https://en.wikipedia.org/wiki/Low-level_programming_language
https://en.wikipedia.org/wiki/High-level_programming_language
https://en.wikipedia.org/wiki/Very_high-level_programming_language
https://en.wikipedia.org/wiki/First-generation_programming_language
https://en.wikipedia.org/wiki/Second-generation_programming_language
https://en.wikipedia.org/wiki/Third-generation_programming_language
https://en.wikipedia.org/wiki/Fourth-generation_programming_language
https://en.wikipedia.org/wiki/Fifth-generation_programming_language
https://en.wikipedia.org/wiki/Non-English-based_programming_languages
https://en.wikipedia.org/wiki/Visual_programming_language
https://en.wikipedia.org/wiki/Template:Computer_science
https://en.wikipedia.org/wiki/Template_talk:Computer_science
https://en.wikipedia.org/w/index.php?title=Template:Computer_science&action=edit
https://en.wikipedia.org/wiki/Computer_science
https://en.wikipedia.org/wiki/ACM_Computing_Classification_System
https://en.wikipedia.org/wiki/Computer_hardware
https://en.wikipedia.org/wiki/Printed_circuit_board
https://en.wikipedia.org/wiki/Peripheral
https://en.wikipedia.org/wiki/Integrated_circuit
https://en.wikipedia.org/wiki/Very-large-scale_integration
https://en.wikipedia.org/wiki/Green_computing
https://en.wikipedia.org/wiki/Electronic_design_automation
https://en.wikipedia.org/wiki/Computer_architecture
https://en.wikipedia.org/wiki/Embedded_system
https://en.wikipedia.org/wiki/Real-time_computing
https://en.wikipedia.org/wiki/Dependability
https://en.wikipedia.org/wiki/Computer_network
https://en.wikipedia.org/wiki/Network_architecture
https://en.wikipedia.org/wiki/Network_protocol
https://en.wikipedia.org/wiki/Networking_hardware
https://en.wikipedia.org/wiki/Network_scheduler
https://en.wikipedia.org/wiki/Network_performance
https://en.wikipedia.org/wiki/Network_service
https://en.wikipedia.org/wiki/Interpreter_(computing)
https://en.wikipedia.org/wiki/Middleware
https://en.wikipedia.org/wiki/Virtual_machine
https://en.wikipedia.org/wiki/Operating_system
https://en.wikipedia.org/wiki/Software_quality
https://en.wikipedia.org/wiki/Programming_language_theory
https://en.wikipedia.org/wiki/Programming_tool
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Compiler_construction
https://en.wikipedia.org/wiki/Domain-specific_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Software_framework
https://en.wikipedia.org/wiki/Integrated_development_environment
https://en.wikipedia.org/wiki/Software_configuration_management
https://en.wikipedia.org/wiki/Library_(computing)
https://en.wikipedia.org/wiki/Software_repository
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Requirements_analysis
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_construction
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Programming_team
https://en.wikipedia.org/wiki/Open-source_software
https://en.wikipedia.org/wiki/Theory_of_computation
https://en.wikipedia.org/wiki/Model_of_computation
https://en.wikipedia.org/wiki/Formal_language
https://en.wikipedia.org/wiki/Automata_theory
https://en.wikipedia.org/wiki/Computational_complexity_theory
https://en.wikipedia.org/wiki/Logic_in_computer_science
https://en.wikipedia.org/wiki/Semantics_(computer_science)
https://en.wikipedia.org/wiki/Algorithm
https://en.wikipedia.org/wiki/Algorithm_design
https://en.wikipedia.org/wiki/Analysis_of_algorithms
https://en.wikipedia.org/wiki/Randomized_algorithm
https://en.wikipedia.org/wiki/Computational_geometry
https://en.wikipedia.org/wiki/Discrete_mathematics
https://en.wikipedia.org/wiki/Probability
https://en.wikipedia.org/wiki/Statistics
https://en.wikipedia.org/wiki/Mathematical_software
https://en.wikipedia.org/wiki/Information_theory
https://en.wikipedia.org/wiki/Mathematical_analysis
https://en.wikipedia.org/wiki/Numerical_analysis
https://en.wikipedia.org/wiki/Information_system
https://en.wikipedia.org/wiki/Database_management_system
https://en.wikipedia.org/wiki/Computer_data_storage
https://en.wikipedia.org/wiki/Enterprise_information_system
https://en.wikipedia.org/wiki/Social_software
https://en.wikipedia.org/wiki/Geographic_information_system
https://en.wikipedia.org/wiki/Decision_support_system
https://en.wikipedia.org/wiki/Process_control
https://en.wikipedia.org/wiki/Multimedia_database
https://en.wikipedia.org/wiki/Data_mining
https://en.wikipedia.org/wiki/Digital_library
https://en.wikipedia.org/wiki/Computing_platform
https://en.wikipedia.org/wiki/Digital_marketing
https://en.wikipedia.org/wiki/World_Wide_Web
https://en.wikipedia.org/wiki/Information_retrieval
https://en.wikipedia.org/wiki/Computer_security
https://en.wikipedia.org/wiki/Cryptography
https://en.wikipedia.org/wiki/Formal_methods
https://en.wikipedia.org/wiki/Security_service_(telecommunication)
https://en.wikipedia.org/wiki/Intrusion_detection_system
https://en.wikipedia.org/wiki/Computer_security_compromised_by_hardware_failure
https://en.wikipedia.org/wiki/Network_security
https://en.wikipedia.org/wiki/Information_security
https://en.wikipedia.org/wiki/Application_security
https://en.wikipedia.org/wiki/Human–computer_interaction
https://en.wikipedia.org/wiki/Interaction_design
https://en.wikipedia.org/wiki/Social_computing
https://en.wikipedia.org/wiki/Ubiquitous_computing
https://en.wikipedia.org/wiki/Visualization_(computer_graphics)
https://en.wikipedia.org/wiki/Computer_accessibility
https://en.wikipedia.org/wiki/Concurrency_(computer_science)
https://en.wikipedia.org/wiki/Concurrent_computing
https://en.wikipedia.org/wiki/Parallel_computing
https://en.wikipedia.org/wiki/Distributed_computing
https://en.wikipedia.org/wiki/Multithreading_(computer_architecture)
https://en.wikipedia.org/wiki/Multiprocessing
https://en.wikipedia.org/wiki/Artificial_intelligence
https://en.wikipedia.org/wiki/Natural_language_processing
https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning
https://en.wikipedia.org/wiki/Computer_vision
https://en.wikipedia.org/wiki/Automated_planning_and_scheduling
https://en.wikipedia.org/wiki/Mathematical_optimization
https://en.wikipedia.org/wiki/Control_theory
https://en.wikipedia.org/wiki/Philosophy_of_artificial_intelligence
https://en.wikipedia.org/wiki/Distributed_artificial_intelligence
https://en.wikipedia.org/wiki/Machine_learning
https://en.wikipedia.org/wiki/Supervised_learning
https://en.wikipedia.org/wiki/Unsupervised_learning
https://en.wikipedia.org/wiki/Reinforcement_learning
https://en.wikipedia.org/wiki/Multi-task_learning
https://en.wikipedia.org/wiki/Cross-validation_(statistics)
https://en.wikipedia.org/wiki/Computer_graphics
https://en.wikipedia.org/wiki/Computer_animation
https://en.wikipedia.org/wiki/Rendering_(computer_graphics)
https://en.wikipedia.org/wiki/Photo_manipulation
https://en.wikipedia.org/wiki/Graphics_processing_unit
https://en.wikipedia.org/wiki/Mixed_reality
https://en.wikipedia.org/wiki/Virtual_reality
https://en.wikipedia.org/wiki/Image_compression
https://en.wikipedia.org/wiki/Solid_modeling
https://en.wikipedia.org/wiki/E-commerce
https://en.wikipedia.org/wiki/Enterprise_software
https://en.wikipedia.org/wiki/Computational_mathematics
https://en.wikipedia.org/wiki/Computational_physics
https://en.wikipedia.org/wiki/Computational_chemistry
https://en.wikipedia.org/wiki/Computational_biology
https://en.wikipedia.org/wiki/Computational_social_science
https://en.wikipedia.org/wiki/Computational_engineering
https://en.wikipedia.org/wiki/Health_informatics
https://en.wikipedia.org/wiki/Digital_art
https://en.wikipedia.org/wiki/Electronic_publishing
https://en.wikipedia.org/wiki/Cyberwarfare
https://en.wikipedia.org/wiki/Electronic_voting
https://en.wikipedia.org/wiki/Video_game
https://en.wikipedia.org/wiki/Word_processor
https://en.wikipedia.org/wiki/Operations_research
https://en.wikipedia.org/wiki/Educational_technology
https://en.wikipedia.org/wiki/Document_management_system
https://en.wikipedia.org/wiki/Book:Computer_science
https://en.wikipedia.org/wiki/Category:Computer_science
https://en.wikipedia.org/wiki/Portal:Computer_science
https://en.wikipedia.org/wiki/Wikipedia:WikiProject_Computer_science
https://commons.wikimedia.org/wiki/Category:Computer_science
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&oldid=806334219
https://en.wikipedia.org/wiki/Help:Category
https://en.wikipedia.org/wiki/Category:Programming_paradigms
https://en.wikipedia.org/wiki/Category:Programming_language_classification
https://en.wikipedia.org/wiki/Category:Programming_language_topics
https://en.wikipedia.org/wiki/Category:Articles_needing_additional_references_from_February_2011
https://en.wikipedia.org/wiki/Category:All_articles_needing_additional_references
https://en.wikipedia.org/wiki/Special:MyTalk
https://en.wikipedia.org/wiki/Special:MyContributions
https://en.wikipedia.org/w/index.php?title=Special:CreateAccount&returnto=Programming+paradigm
https://en.wikipedia.org/w/index.php?title=Special:UserLogin&returnto=Programming+paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Talk:Programming_paradigm
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=edit
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=history
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Portal:Contents
https://en.wikipedia.org/wiki/Portal:Featured_content
https://en.wikipedia.org/wiki/Portal:Current_events
https://en.wikipedia.org/wiki/Special:Random
https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&utm_medium=sidebar&utm_campaign=C13_en.wikipedia.org&uselang=en
https://shop.wikimedia.org
https://en.wikipedia.org/wiki/Help:Contents
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:Community_portal
https://en.wikipedia.org/wiki/Special:RecentChanges
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://en.wikipedia.org/wiki/Special:WhatLinksHere/Programming_paradigm
https://en.wikipedia.org/wiki/Special:RecentChangesLinked/Programming_paradigm
https://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard
https://en.wikipedia.org/wiki/Special:SpecialPages
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&oldid=806334219
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&action=info
https://www.wikidata.org/wiki/Special:EntityPage/Q188267
https://en.wikipedia.org/w/index.php?title=Special:CiteThisPage&page=Programming_paradigm&id=806334219
https://en.wikipedia.org/w/index.php?title=Special:Book&bookcmd=book_creator&referer=Programming+paradigm
https://en.wikipedia.org/w/index.php?title=Special:ElectronPdf&page=Programming+paradigm&action=show-download-screen
https://en.wikipedia.org/w/index.php?title=Programming_paradigm&printable=yes
https://ar.wikipedia.org/wiki/نمط_برمجة
https://bg.wikipedia.org/wiki/Парадигма_на_програмиране
https://bs.wikipedia.org/wiki/Programska_paradigma
https://ca.wikipedia.org/wiki/Paradigma_de_programació
https://cs.wikipedia.org/wiki/Programovací_paradigma
https://da.wikipedia.org/wiki/Programmeringsparadigme
https://de.wikipedia.org/wiki/Programmierparadigma
https://et.wikipedia.org/wiki/Programmeerimise_paradigma
https://el.wikipedia.org/wiki/Προγραμματιστικό_παράδειγμα
https://es.wikipedia.org/wiki/Paradigma_de_programación
https://eo.wikipedia.org/wiki/Programada_paradigmo
https://eu.wikipedia.org/wiki/Programazio_paradigma
https://fa.wikipedia.org/wiki/پارادایم_برنامه‌نویسی
https://fr.wikipedia.org/wiki/Paradigme_(programmation)
https://gl.wikipedia.org/wiki/Paradigma_de_programación
https://ko.wikipedia.org/wiki/프로그래밍_패러다임
https://id.wikipedia.org/wiki/Paradigma_pemrograman
https://it.wikipedia.org/wiki/Paradigma_di_programmazione
https://he.wikipedia.org/wiki/פרדיגמת_תכנות
https://sw.wikipedia.org/wiki/Programming_paradigm
https://la.wikipedia.org/wiki/Paradigma_programmandi
https://lv.wikipedia.org/wiki/Programmēšanas_paradigma
https://hu.wikipedia.org/wiki/Programozási_paradigma
https://mk.wikipedia.org/wiki/Програмерска_парадигма
https://ms.wikipedia.org/wiki/Paradigma_pengaturcaraan
https://mwl.wikipedia.org/wiki/Paradigma_de_porgramaçon
https://nl.wikipedia.org/wiki/Programmeerparadigma
https://ja.wikipedia.org/wiki/プログラミングパラダイム
https://no.wikipedia.org/wiki/Programmeringsparadigme
https://pl.wikipedia.org/wiki/Paradygmat_programowania
https://pt.wikipedia.org/wiki/Paradigma_de_programação
https://ro.wikipedia.org/wiki/Paradigmă_de_programare
https://ru.wikipedia.org/wiki/Парадигма_программирования
https://sco.wikipedia.org/wiki/Programmin_paradigm
https://sq.wikipedia.org/wiki/Paradigma_programore
https://simple.wikipedia.org/wiki/Programming_paradigm
https://sr.wikipedia.org/wiki/Парадигме_програмирања
https://sh.wikipedia.org/wiki/Programska_paradigma
https://fi.wikipedia.org/wiki/Ohjelmointiparadigma
https://sv.wikipedia.org/wiki/Programmeringsparadigm
https://th.wikipedia.org/wiki/กระบวนทัศน์การเขียนโปรแกรม
https://tr.wikipedia.org/wiki/Programlama_paradigması
https://uk.wikipedia.org/wiki/Парадигма_програмування
https://ur.wikipedia.org/wiki/پروگرامنگ_پیراڈائم
https://vi.wikipedia.org/wiki/Mẫu_hình_lập_trình
https://zh.wikipedia.org/wiki/编程范型
https://www.wikidata.org/wiki/Special:EntityPage/Q188267
https://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License
https://creativecommons.org/licenses/by-sa/3.0/
https://wikimediafoundation.org/wiki/Terms_of_Use
https://wikimediafoundation.org/wiki/Privacy_policy
https://www.wikimediafoundation.org/
https://wikimediafoundation.org/wiki/Privacy_policy
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:General_disclaimer
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute
https://wikimediafoundation.org/wiki/Cookie_statement
https://en.m.wikipedia.org/w/index.php?title=Programming_paradigm&mobileaction=toggle_view_mobile
https://wikimediafoundation.org/
https://www.mediawiki.org/
