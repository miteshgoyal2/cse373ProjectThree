https://en.wikipedia.org/wiki/Software_development
Software development - Wikipedia
For other uses, see Software development (disambiguation). Software development is the process of computer programming, documenting, testing, and bug fixing involved in creating and maintaining applications...
software development from wikipedia the free encyclopedia jump to navigation search for other uses see software development disambiguation software development core activities processes requirements design engineering construction testing debugging deployment maintenance paradigms and models agile cleanroom incremental prototyping spiral waterfall methodologies and frameworks devops dsdm fdd iid kanban lean sd mdd msf psp rad safe scrum semat tsp up vmodel xp supporting disciplines configuration management documentation software quality assurance sqa project management user experience practices atdd bdd cco ci cd ddd pp standup tdd tools compiler debugger profiler gui designer modeling ide build automation release automation infrastructure as code testing standards and boks cmmi ieee standards iso 9001 isoiec standards swebok pmbok babok v t e software development is the process of computer programming documenting testing and bug fixing involved in creating and maintaining applications and frameworks resulting in a software product software development is a process of writing and maintaining the source code but in a broader sense it includes all that is involved between the conception of the desired software through to the final manifestation of the software sometimes in a planned and structured process1 therefore software development may include research new development prototyping modification reuse reengineering maintenance or any other activities that result in software products2 software can be developed for a variety of purposes the three most common being to meet specific needs of a specific clientbusiness the case with custom software to meet a perceived need of some set of potential users the case with commercial and open source software or for personal use eg a scientist may write software to automate a mundane task embedded software development that is the development of embedded software such as used for controlling consumer products requires the development process to be integrated with the development of the controlled physical product system software underlies applications and the programming process itself and is often developed separately the need for better quality control of the software development process has given rise to the discipline of software engineering which aims to apply the systematic approach exemplified in the engineering paradigm to the process of software development there are many approaches to software project management known as software development life cycle models methodologies processes or models the waterfall model is a traditional version contrasted with the more recent innovation of agile software development contents 1 methodologies 2 software development activities 21 identification of need 22 planning 23 designing 24 implementation testing and documenting 25 deployment and maintenance 3 subtopics 31 view model 32 business process and data modelling 33 computeraided software engineering 34 integrated development environment 35 modeling language 36 programming paradigm 37 reuse of solutions 4 see also 41 roles and industry 42 specific applications 5 references 6 further reading methodologiesedit this section does not cite any sources please help improve this section by adding citations to reliable sources unsourced material may be challenged and removed august 2010 learn how and when to remove this template message a software development process also known as a software development methodology model or life cycle is a framework that is used to structure plan and control the process of developing information systems a wide variety of such frameworks has evolved over the years each with its own recognized strengths and weaknesses there are several different approaches to software development some take a more structured engineeringbased approach to developing business solutions whereas others may take a more incremental approach where software evolves as it is developed piecebypiece one system development methodology is not necessarily suitable for use by all projects each of the available methodologies is best suited to specific kinds of projects based on various technical organizational project and team considerations most methodologies share some combination of the following stages of software development analyzing the problem market research gathering requirements for the proposed business solution devising a plan or design for the softwarebased solution implementation coding of the software testing the software deployment maintenance and bug fixing these stages are often referred to collectively as the software development lifecycle or sdlc different approaches to software development may carry out these stages in different orders or devote more or less time to different stages the level of detail of the documentation produced at each stage of software development may also vary these stages may also be carried out in turn a “waterfall” based approach or they may be repeated over various cycles or iterations a more extreme approach the more extreme approach usually involves less time spent on planning and documentation and more time spent on coding and development of automated tests more “extreme” approaches also promote continuous testing throughout the development lifecycle as well as having a working or bugfree product at all times more structured or “waterfall” based approaches attempt to assess the majority of risks and develop a detailed plan for the software before implementation coding begins and avoid significant design changes and recoding in later stages of the software development lifecycle planning there are significant advantages and disadvantages to the various methodologies and the best approach to solving a problem using software will often depend on the type of problem if the problem is well understood and a solution can be effectively planned out ahead of time the more waterfall based approach may work the best if on the other hand the problem is unique at least to the development team and the structure of the software solution cannot be easily envisioned then a more extreme incremental approach may work best software development activitiesedit identification of neededit the sources of ideas for software products are plenteous these ideas can come from market research including the demographics of potential new customers existing customers sales prospects who rejected the product other internal software development staff or a creative third party ideas for software products are usually first evaluated by marketing personnel for economic feasibility for fit with existing channels distribution for possible effects on existing product lines required features and for fit with the companys marketing objectives in a marketing evaluation phase the cost and time assumptions become evaluated a decision is reached early in the first phase as to whether based on the more detailed information generated by the marketing and development staff the project should be pursued further3 in the book great software debates alan m davis states in the chapter requirements subchapter the missing piece of software development students of engineering learn engineering and are rarely exposed to finance or marketing students of marketing learn marketing and are rarely exposed to finance or engineering most of us become specialists in just one area to complicate matters few of us meet interdisciplinary people in the workforce so there are few roles to mimic yet software product planning is critical to the development success and absolutely requires knowledge of multiple disciplines4 because software development may involve compromising or going beyond what is required by the client a software development project may stray into less technical concerns such as human resources risk management intellectual property budgeting crisis management etc these processes may also cause the role of business development to overlap with software development planningedit planning is an objective of each and every activity where we want to discover things that belong to the project an important task in creating a software program is extracting the requirements or requirements analysis5 customers typically have an abstract idea of what they want as an end result but do not know what software should do skilled and experienced software engineers recognize incomplete ambiguous or even contradictory requirements at this point frequently demonstrating live code may help reduce the risk that the requirements are incorrect although much effort is put in the requirements phase to ensure that requirements are complete and consistent rarely that is the case leaving the software design phase as the most influential one when it comes to minimizing the effects of new or changing requirements requirements volatility is challenging because they impact future or already going development efforts6 once the general requirements are gathered from the client an analysis of the scope of the development should be determined and clearly stated this is often called a scope document certain functionality may be out of scope of the project as a function of cost or as a result of unclear requirements at the start of development if the development is done externally this document can be considered a legal document so that if there are ever disputes any ambiguity of what was promised to the client can be clarified designingedit main articles software design and systems design once the requirements are established the design of the software can be established in a software design document this involves a preliminary or highlevel design of the main modules with an overall picture such as a block diagram of how the parts fit together the language operating system and hardware components should all be known at this time then a detailed or lowlevel design is created perhaps with prototyping as proofofconcept or to firm up requirements implementation testing and documentingedit implementation is the part of the process where software engineers actually program the code for the project software testing is an integral and important phase of the software development process this part of the process ensures that defects are recognized as soon as possible in some processes generally known as testdriven development tests may be developed just before implementation and serve as a guide for the implementations correctness documenting the internal design of software for the purpose of future maintenance and enhancement is done throughout development this may also include the writing of an api be it external or internal the software engineering process chosen by the developing team will determine how much internal documentation if any is necessary plandriven models eg waterfall generally produce more documentation than agile models deployment and maintenanceedit deployment starts directly after the code is appropriately tested approved for release and sold or otherwise distributed into a production environment this may involve installation customization such as by setting parameters to the customers values testing and possibly an extended period of evaluationcitation needed software training and support is important as software is only effective if it is used correctly7 maintaining and enhancing software to cope with newly discovered faults or requirements can take substantial time and effort as missed requirements may force redesign of the softwarecitation needed subtopicsedit view modeledit the teaf matrix of views and perspectives a view model is a framework that provides the viewpoints on the system and its environment to be used in the software development process it is a graphical representation of the underlying semantics of a view the purpose of viewpoints and views is to enable human engineers to comprehend very complex systems and to organize the elements of the problem and the solution around domains of expertise in the engineering of physically intensive systems viewpoints often correspond to capabilities and responsibilities within the engineering organization8 most complex system specifications are so extensive that no one individual can fully comprehend all aspects of the specifications furthermore we all have different interests in a given system and different reasons for examining the systems specifications a business executive will ask different questions of a system makeup than would a system implementer the concept of viewpoints framework therefore is to provide separate viewpoints into the specification of a given complex system these viewpoints each satisfy an audience with interest in some set of aspects of the system associated with each viewpoint is a viewpoint language that optimizes the vocabulary and presentation for the audience of that viewpoint business process and data modellingedit graphical representation of the current state of information provides a very effective means for presenting information to both users and system developers example of the interaction between business process and data models9 a business model illustrates the functions associated with the business process being modeled and the organizations that perform these functions by depicting activities and information flows a foundation is created to visualize define understand and validate the nature of a process a data model provides the details of information to be stored and is of primary use when the final product is the generation of computer software code for an application or the preparation of a functional specification to aid a computer software makeorbuy decision see the figure on the right for an example of the interaction between business process and data models9 usually a model is created after conducting an interview referred to as business analysis the interview consists of a facilitator asking a series of questions designed to extract required information that describes a process the interviewer is called a facilitator to emphasize that it is the participants who provide the information the facilitator should have some knowledge of the process of interest but this is not as important as having a structured methodology by which the questions are asked of the process expert the methodology is important because usually a team of facilitators is collecting information across the facility and the results of the information from all the interviewers must fit together once completed9 the models are developed as defining either the current state of the process in which case the final product is called the asis snapshot model or a collection of ideas of what the process should contain resulting in a whatcanbe model generation of process and data models can be used to determine if the existing processes and information systems are sound and only need minor modifications or enhancements or if reengineering is required as a corrective action the creation of business models is more than a way to view or automate your information process analysis can be used to fundamentally reshape the way your business or organization conducts its operations9 computeraided software engineeringedit computeraided software engineering case in the field software engineering is the scientific application of a set of software tools and methods to the development of software which results in highquality defectfree and maintainable software products10 it also refers to methods for the development of information systems together with automated tools that can be used in the software development process11 the term computeraided software engineering case can refer to the software used for the automated development of systems software ie computer code the case functions include analysis design and programming case tools automate methods for designing documenting and producing structured computer code in the desired programming language12 two key ideas of computeraided software system engineering case are13 foster computer assistance in software development and or software maintenance processes and an engineering approach to software development and or maintenance typical case tools exist for configuration management data modeling model transformation refactoring source code generation integrated development environmentedit anjuta a c and c ide for the gnome environment an integrated development environment ide also known as integrated design environment or integrated debugging environment is a software application that provides comprehensive facilities to computer programmers for software development an ide normally consists of a source code editor compiler or interpreter build automation tools and debugger usually ides are designed to maximize programmer productivity by providing tightknit components with similar user interfaces typically an ide is dedicated to a specific programming language so as to provide a feature set which most closely matches the programming paradigms of the language modeling languageedit a modeling language is any artificial language that can be used to express information or knowledge or systems in a structure that is defined by a consistent set of rules the rules are used for interpretation of the meaning of components in the structure a modeling language can be graphical or textual14 graphical modeling languages use a diagram techniques with named symbols that represent concepts and lines that connect the symbols and that represent relationships and various other graphical annotation to represent constraints textual modeling languages typically use standardised keywords accompanied by parameters to make computerinterpretable expressions examples of graphical modelling languages in the field of software engineering are business process modeling notation bpmn and the xml form bpml is an example of a process modeling language express and expressg iso 1030311 is an international standard generalpurpose data modeling language extended enterprise modeling language eeml is commonly used for business process modeling across layers flowchart is a schematic representation of an algorithm or a stepwise process fundamental modeling concepts fmc modeling language for softwareintensive systems idef is a family of modeling languages the most notable of which include idef0 for functional modeling idef1x for information modeling and idef5 for modeling ontologies lepus3 is an objectoriented visual design description language and a formal specification language that is suitable primarily for modelling large objectoriented java c c programs and design patterns specification and description languagesdl is a specification language targeted at the unambiguous specification and description of the behaviour of reactive and distributed systems unified modeling language uml is a generalpurpose modeling language that is an industry standard for specifying softwareintensive systems uml 20 the current version supports thirteen different diagram techniques and has widespread tool support not all modeling languages are executable and for those that are using them doesnt necessarily mean that programmers are no longer needed on the contrary executable modeling languages are intended to amplify the productivity of skilled programmers so that they can address more difficult problems such as parallel computing and distributed systems programming paradigmedit a programming paradigm is a fundamental style of computer programming which is not generally dictated by the project management methodology such as waterfall or agile paradigms differ in the concepts and abstractions used to represent the elements of a program such as objects functions variables constraints and the steps that comprise a computation such as assignations evaluation continuations data flows sometimes the concepts asserted by the paradigm are utilized cooperatively in highlevel system architecture design in other cases the programming paradigms scope is limited to the internal structure of a particular program or module a programming language can support multiple paradigms for example programs written in c or object pascal can be purely procedural or purely objectoriented or contain elements of both paradigms software designers and programmers decide how to use those paradigm elements in objectoriented programming programmers can think of a program as a collection of interacting objects while in functional programming a program can be thought of as a sequence of stateless function evaluations when programming computers or systems with many processors processoriented programming allows programmers to think about applications as sets of concurrent processes acting upon logically shared data structures just as different groups in software engineering advocate different methodologies different programming languages advocate different programming paradigms some languages are designed to support one paradigm smalltalk supports objectoriented programming haskell supports functional programming while other programming languages support multiple paradigms such as object pascal c c visual basic common lisp scheme python ruby and oz many programming paradigms are as well known for what methods they forbid as for what they enable for instance pure functional programming forbids using sideeffects structured programming forbids using goto statements partly for this reason new paradigms are often regarded as doctrinaire or overly rigid by those accustomed to earlier stylescitation needed avoiding certain methods can make it easier to prove theorems about a programs correctness or simply to understand its behavior examples of highlevel paradigms include aspectoriented software development domainspecific modeling modeldriven engineering objectoriented programming methodologies grady boochs objectoriented design ood also known as objectoriented analysis and design ooad the booch model includes six diagrams class object state transition interaction module and process15 searchbased software engineering serviceoriented modeling structured programming topdown and bottomup design topdown programming evolved in the 1970s by ibm researcher harlan mills and niklaus wirth in developed structured programming reuse of solutionsedit this section may need to be rewritten entirely to comply with wikipedias quality standards you can help the discussion page may contain suggestions may 2016 a software framework is a reusable design or implementation for a software system or subsystem existing components componentbased software engineering can be reused assembled together to create a larger application api application programming interface web service establish a set of subroutine definitions protocols and tools for building application software which can be utilized in future builds open source documentions via libraries such as github provide free code for software developers to reuse and implement into new applications or designs see alsoedit continuous integration custom software devops functional specification programming productivity software blueprint software design software development effort estimation software development process software project management specification and description language user experience software industry roles and industryedit bachelor of science in information technology computer programmer consulting software engineer offshore software development software developer software engineer software publisher specific applicationsedit video game development web application development web engineering mobile application development referencesedit application development appdev defined and explained bestpricecomputerscouk 20070813 retrieved 20120805  drm associates 2002 new product development glossary retrieved 20061029  joseph m morris 2001 software industry accounting p110 alan m davis great software debates october 8 2004 pp125128 wileyieee computer society press ralph p and wand y a proposal for a formal definition of the design concept in lyytinen k loucopoulos p mylopoulos j and robinson w eds design requirements engineering a tenyear perspective springerverlag 2009 pp 103136 otero carlos software design challenges it performance improvement taylor francis llc retrieved 19 october 2017  software development hayathisolutionscom retrieved 20160607  edward j barkmeyer ea 2003 concepts for automating systems integration nist 2003 a b c d paul r smith richard sarfaty 1993 creating a strategic plan for configuration management using computer aided software engineering case tools paper for 1993 national doecontractors and facilities cadcae users group kuhn dl 1989 selecting and effectively using a computer aided software engineering tool annual westinghouse computer symposium 67 nov 1989 pittsburgh pa usa doe project p loucopoulos and v karakostas 1995 system requirements engineering mcgrawhill case definition in telecom glossary 2000 retrieved 26 oct 2008 k robinson 1992 putting the software engineering into case new york  john wiley and sons inc xiao he 2007 a metamodel for the notation of graphical modeling languages in computer software and applications conference 2007 compsac 2007 – vol 1 31st annual international volume 1 issue 24–27 july 2007 pp 219224 georges gauthier merx ronald j norman 2006 unified software engineering with java p201 further readingedit wikimedia commons has media related to software development edward kit 1992 software testing in the real world jim mccarthy 1995 dynamics of software development dan conde 2002 software product management managing software development from idea to product to marketing to sales am davis 2005 just enough requirements management where software development meets marketing edward hasted 2005 software that sells a practical guide to developing and marketing your software project luke hohmann 2003 beyond software architecture creating and sustaining winning solutions john w horch 2005 two orientations on how to work with objects in ieee software vol 12 no 2 pp 117–118 mar 1995 john rittinghouse 2003 managing software deliverables a software development management methodology karl e wiegers 2005 more about software requirements thorny issues and practical advice robert k wysocki 2006 effective software project management v t e software engineering fields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification and validation structured analysis orientations agile aspectoriented object orientation ontology service orientation sdlc models developmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model vmodel waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml usl sysml software engineers victor basili kent beck grady booch fred brooks barry boehm peter chen danese cooper ward cunningham tom demarco edsger w dijkstra delores m etter martin fowler adele goldstine margaret hamilton c a r hoare lois haibt mary jean harrold grace hopper watts humphrey michael a jackson ivar jacobson alan kay nancy leveson stephen j mellor bertrand meyer david parnas trygve reenskaug winston w royce james rumbaugh mary shaw peri tarr elaine weyuker niklaus wirth edward yourdon related fields computer science computer engineering project management risk management systems engineering category commons v t e major fields of computer science note this template roughly follows the 2012 acm computing classification system hardware printed circuit board peripheral integrated circuit verylargescale integration energy consumption electronic design automation computer systems organization computer architecture embedded system realtime computing dependability networks network architecture network protocol network components network scheduler network performance evaluation network service software organization interpreter middleware virtual machine operating system software quality software notations and tools programming paradigm programming language compiler domainspecific language modeling language software framework integrated development environment software configuration management software library software repository software development software development process requirements analysis software design software construction software deployment software maintenance programming team opensource model theory of computation model of computation formal language automata theory computational complexity theory logic semantics algorithms algorithm design analysis of algorithms randomized algorithm computational geometry mathematics of computing discrete mathematics probability statistics mathematical software information theory mathematical analysis numerical analysis information systems database management system information storage systems enterprise information system social information systems geographic information system decision support system process control system multimedia information system data mining digital library computing platform digital marketing world wide web information retrieval security cryptography formal methods security services intrusion detection system hardware security network security information security application security human–computer interaction interaction design social computing ubiquitous computing visualization accessibility concurrency concurrent computing parallel computing distributed computing multithreading multiprocessing artificial intelligence natural language processing knowledge representation and reasoning computer vision automated planning and scheduling search methodology control method philosophy of artificial intelligence distributed artificial intelligence machine learning supervised learning unsupervised learning reinforcement learning multitask learning crossvalidation graphics animation rendering image manipulation graphics processing unit mixed reality virtual reality image compression solid modeling applied computing ecommerce enterprise software computational mathematics computational physics computational chemistry computational biology computational social science computational engineering computational healthcare digital art electronic publishing cyberwarfare electronic voting video game word processing operations research educational technology document management book category portal wikiproject commons authority control ndl 00679589 retrieved from httpsenwikipediaorgwindexphptitlesoftwaredevelopmentoldid806118076 categories software development software project management project management computer occupations product development hidden categories articles needing additional references from august 2010 all articles needing additional references all articles with unsourced statements articles with unsourced statements from december 2011 articles with unsourced statements from january 2008 wikipedia articles needing rewrite from may 2016 all articles needing rewrite navigation menu personal tools not logged in talk contributions create account log in namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate to wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page printexport create a book download as pdf printable version in other projects wikimedia commons languages العربية български català čeština dansk eesti español فارسی français galego 한국어 हिन्दी bahasa indonesia italiano עברית basa jawa lietuvių magyar മലയാളം bahasa melayu မြန်မာဘာသာ 日本語 norsk polski português русский shqip simple english српски srpski suomi svenska தமிழ் türkçe українська tiếng việt 粵語 中文 edit links this page was last edited on 19 october 2017 at 2031 text is available under the creative commons attributionsharealike license additional terms may apply by using this site you agree to the terms of use and privacy policy wikipedia® is a registered trademark of the wikimedia foundation inc a nonprofit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development_(disambiguation)
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Requirements_analysis
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Software_construction
https://en.wikipedia.org/wiki/Software_testing
https://en.wikipedia.org/wiki/Debugging
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Cleanroom_software_engineering
https://en.wikipedia.org/wiki/Incremental_build_model
https://en.wikipedia.org/wiki/Software_prototyping
https://en.wikipedia.org/wiki/Spiral_model
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Software_development_methodology
https://en.wikipedia.org/wiki/DevOps
https://en.wikipedia.org/wiki/Dynamic_systems_development_method
https://en.wikipedia.org/wiki/Feature-driven_development
https://en.wikipedia.org/wiki/Iterative_and_incremental_development
https://en.wikipedia.org/wiki/Kanban_(development)
https://en.wikipedia.org/wiki/Lean_software_development
https://en.wikipedia.org/wiki/Model-driven_development
https://en.wikipedia.org/wiki/Microsoft_Solutions_Framework
https://en.wikipedia.org/wiki/Personal_software_process
https://en.wikipedia.org/wiki/Rapid_application_development
https://en.wikipedia.org/wiki/Scaled_Agile_Framework
https://en.wikipedia.org/wiki/Scrum_(software_development)
https://en.wikipedia.org/wiki/SEMAT
https://en.wikipedia.org/wiki/Team_software_process
https://en.wikipedia.org/wiki/Unified_Process
https://en.wikipedia.org/wiki/V-Model_(software_development)
https://en.wikipedia.org/wiki/Extreme_programming
https://en.wikipedia.org/wiki/Software_configuration_management
https://en.wikipedia.org/wiki/Software_documentation
https://en.wikipedia.org/wiki/Software_quality_assurance
https://en.wikipedia.org/wiki/Software_project_management
https://en.wikipedia.org/wiki/User_experience
https://en.wikipedia.org/wiki/Acceptance_test–driven_development
https://en.wikipedia.org/wiki/Behavior-driven_development
https://en.wikipedia.org/wiki/Extreme_programming_practices
https://en.wikipedia.org/wiki/Continuous_Integration
https://en.wikipedia.org/wiki/Continuous_Delivery
https://en.wikipedia.org/wiki/Domain-driven_design
https://en.wikipedia.org/wiki/Pair_Programming
https://en.wikipedia.org/wiki/Stand-up_meeting
https://en.wikipedia.org/wiki/Test-driven_development
https://en.wikipedia.org/wiki/Programming_tool
https://en.wikipedia.org/wiki/Compiler
https://en.wikipedia.org/wiki/Debugger
https://en.wikipedia.org/wiki/Profiling_(computer_programming)
https://en.wikipedia.org/wiki/Graphical_user_interface_builder
https://en.wikipedia.org/wiki/UML_tools
https://en.wikipedia.org/wiki/Integrated_development_environment
https://en.wikipedia.org/wiki/Build_automation
https://en.wikipedia.org/wiki/Application_release_automation
https://en.wikipedia.org/wiki/Infrastructure_as_Code
https://en.wikipedia.org/wiki/Category:Software_testing_tools
https://en.wikipedia.org/wiki/CMMI
https://en.wikipedia.org/wiki/IEEE_Standards_Association
https://en.wikipedia.org/wiki/ISO_9001
https://en.wikipedia.org/wiki/ISO/IEC_JTC_1/SC_7
https://en.wikipedia.org/wiki/SWEBOK
https://en.wikipedia.org/wiki/PMBOK
https://en.wikipedia.org/wiki/BABOK
https://en.wikipedia.org/wiki/Template:Software_development_process
https://en.wikipedia.org/wiki/Template_talk:Software_development_process
https://en.wikipedia.org/w/index.php?title=Template:Software_development_process&action=edit
https://en.wikipedia.org/wiki/Computer_programming
https://en.wikipedia.org/wiki/Software_documentation
https://en.wikipedia.org/wiki/Software_testing
https://en.wikipedia.org/wiki/Software_bugs
https://en.wikipedia.org/wiki/Application_software
https://en.wikipedia.org/wiki/Software_framework
https://en.wikipedia.org/wiki/Software_product
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Source_code
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Custom_software
https://en.wikipedia.org/wiki/User_(computing)
https://en.wikipedia.org/wiki/Commercial_software
https://en.wikipedia.org/wiki/Open_source_software
https://en.wikipedia.org/wiki/Embedded_software
https://en.wikipedia.org/wiki/System_software
https://en.wikipedia.org/wiki/Quality_control
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Engineering
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=1
https://en.wikipedia.org/wiki/File:Question_book-new.svg
https://en.wikipedia.org/wiki/Wikipedia:Citing_sources
https://en.wikipedia.org/wiki/Wikipedia:Verifiability
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit
https://en.wikipedia.org/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1
https://en.wikipedia.org/wiki/Wikipedia:Verifiability
https://en.wikipedia.org/wiki/Help:Maintenance_template_removal
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Structure
https://en.wikipedia.org/wiki/Plan
https://en.wikipedia.org/wiki/Information_system
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Software_bugs
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Implementation
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=2
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=3
https://en.wikipedia.org/wiki/Market_research
https://en.wikipedia.org/wiki/Demographics
https://en.wikipedia.org/wiki/Marketing
https://en.wikipedia.org/wiki/Software_feature
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Alan_M._Davis
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Human_resources
https://en.wikipedia.org/wiki/Risk_management
https://en.wikipedia.org/wiki/Intellectual_property
https://en.wikipedia.org/wiki/Budgeting
https://en.wikipedia.org/wiki/Crisis_management
https://en.wikipedia.org/wiki/Business_development
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=4
https://en.wikipedia.org/wiki/Requirement
https://en.wikipedia.org/wiki/Requirements_analysis
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=5
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Systems_design
https://en.wikipedia.org/wiki/Software_design_document
https://en.wikipedia.org/wiki/High-level_design
https://en.wikipedia.org/wiki/Block_diagram
https://en.wikipedia.org/wiki/Software_prototyping
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=6
https://en.wikipedia.org/wiki/Implementation
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Computer_programming
https://en.wikipedia.org/wiki/Software_testing
https://en.wikipedia.org/wiki/Software_bug
https://en.wikipedia.org/wiki/Test-driven_development
https://en.wikipedia.org/wiki/Software_documentation
https://en.wikipedia.org/wiki/API
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=7
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Software_release
https://en.wikipedia.org/wiki/Wikipedia:Citation_needed
https://en.wikipedia.org/wiki/Technical_support
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Software_bug
https://en.wikipedia.org/wiki/Wikipedia:Citation_needed
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=8
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=9
https://en.wikipedia.org/wiki/File:TEAF_Matrix_of_Views_and_Perspectives.svg
https://en.wikipedia.org/wiki/File:TEAF_Matrix_of_Views_and_Perspectives.svg
https://en.wikipedia.org/wiki/TEAF
https://en.wikipedia.org/wiki/View_model
https://en.wikipedia.org/wiki/View_model
https://en.wikipedia.org/wiki/System
https://en.wikipedia.org/wiki/Environment_(systems)
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Complex_system
https://en.wikipedia.org/wiki/Expertise
https://en.wikipedia.org/wiki/Engineering
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/System
https://en.wikipedia.org/wiki/Specification
https://en.wikipedia.org/wiki/Business
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=10
https://en.wikipedia.org/wiki/Information_visualisation
https://en.wikipedia.org/wiki/Software_developer
https://en.wikipedia.org/wiki/File:Process_and_data_modeling.svg
https://en.wikipedia.org/wiki/File:Process_and_data_modeling.svg
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Business_model
https://en.wikipedia.org/wiki/Data_model
https://en.wikipedia.org/wiki/Software_code
https://en.wikipedia.org/w/index.php?title=Make-buy_decision&action=edit&redlink=1
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Business_analysis
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=11
https://en.wikipedia.org/wiki/Computer-aided_software_engineering
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Software
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Information_system
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software
https://en.wikipedia.org/wiki/Systems_software
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Configuration_management
https://en.wikipedia.org/wiki/Data_modeling
https://en.wikipedia.org/wiki/Model_transformation
https://en.wikipedia.org/wiki/Refactoring
https://en.wikipedia.org/wiki/Source_code_generation
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=12
https://en.wikipedia.org/wiki/File:Anjuta-2.0.0-2.png
https://en.wikipedia.org/wiki/File:Anjuta-2.0.0-2.png
https://en.wikipedia.org/wiki/Anjuta
https://en.wikipedia.org/wiki/Integrated_development_environment
https://en.wikipedia.org/wiki/Software_application
https://en.wikipedia.org/wiki/Computer_programmer
https://en.wikipedia.org/wiki/Source_code_editor
https://en.wikipedia.org/wiki/Compiler
https://en.wikipedia.org/wiki/Interpreter_(computing)
https://en.wikipedia.org/wiki/Build_automation
https://en.wikipedia.org/wiki/Debugger
https://en.wikipedia.org/wiki/User_interface
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=13
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Artificial_language
https://en.wikipedia.org/wiki/Information
https://en.wikipedia.org/wiki/Knowledge
https://en.wikipedia.org/wiki/System
https://en.wikipedia.org/wiki/Structure
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Diagramming_technique
https://en.wikipedia.org/wiki/Business_Process_Modeling_Notation
https://en.wikipedia.org/wiki/XML
https://en.wikipedia.org/wiki/Process_modeling
https://en.wikipedia.org/wiki/EXPRESS_(data_modeling_language)
https://en.wikipedia.org/wiki/Data_modeling
https://en.wikipedia.org/wiki/Extended_Enterprise_Modeling_Language
https://en.wikipedia.org/wiki/Flowchart
https://en.wikipedia.org/wiki/Fundamental_Modeling_Concepts
https://en.wikipedia.org/wiki/IDEF
https://en.wikipedia.org/wiki/IDEF0
https://en.wikipedia.org/wiki/IDEF1X
https://en.wikipedia.org/wiki/Information_model
https://en.wikipedia.org/wiki/IDEF5
https://en.wikipedia.org/wiki/LePUS3
https://en.wikipedia.org/wiki/Object-oriented
https://en.wikipedia.org/wiki/Formal_specification
https://en.wikipedia.org/wiki/Java_(programming_language)
https://en.wikipedia.org/wiki/C++
https://en.wikipedia.org/wiki/C_Sharp_(programming_language)
https://en.wikipedia.org/wiki/Design_patterns
https://en.wikipedia.org/wiki/Specification_and_Description_Language
https://en.wikipedia.org/wiki/Unified_Modeling_Language
https://en.wikipedia.org/wiki/General-purpose_modeling
https://en.wikipedia.org/wiki/Parallel_computing
https://en.wikipedia.org/wiki/Distributed_system
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=14
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Computer_programming
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Multi-paradigm_programming_language
https://en.wikipedia.org/wiki/C++
https://en.wikipedia.org/wiki/Object_Pascal
https://en.wikipedia.org/wiki/Procedural_programming
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Functional_programming
https://en.wikipedia.org/wiki/Process-oriented_programming
https://en.wikipedia.org/wiki/Data_structures
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Smalltalk
https://en.wikipedia.org/wiki/Haskell_(programming_language)
https://en.wikipedia.org/wiki/Object_Pascal
https://en.wikipedia.org/wiki/C++
https://en.wikipedia.org/wiki/C_Sharp_(programming_language)
https://en.wikipedia.org/wiki/Visual_Basic
https://en.wikipedia.org/wiki/Common_Lisp
https://en.wikipedia.org/wiki/Scheme_(programming_language)
https://en.wikipedia.org/wiki/Python_(programming_language)
https://en.wikipedia.org/wiki/Ruby_(programming_language)
https://en.wikipedia.org/wiki/Oz_(programming_language)
https://en.wikipedia.org/wiki/Side-effect_(computer_science)
https://en.wikipedia.org/wiki/Structured_programming
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Wikipedia:Citation_needed
https://en.wikipedia.org/wiki/Aspect-oriented_software_development
https://en.wikipedia.org/wiki/Domain-specific_modeling
https://en.wikipedia.org/wiki/Model-driven_engineering
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Grady_Booch
https://en.wikipedia.org/wiki/Object-oriented_design
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Search-based_software_engineering
https://en.wikipedia.org/wiki/Service-oriented_modeling
https://en.wikipedia.org/wiki/Structured_programming
https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design
https://en.wikipedia.org/wiki/Top-down_programming
https://en.wikipedia.org/wiki/Harlan_Mills
https://en.wikipedia.org/wiki/Niklaus_Wirth
https://en.wikipedia.org/wiki/Structured_programming
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=15
https://en.wikipedia.org/wiki/File:Crystal_Clear_app_kedit.svg
https://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit
https://en.wikipedia.org/wiki/Talk:Software_development
https://en.wikipedia.org/wiki/Software_framework
https://en.wikipedia.org/wiki/Component-based_software_engineering
https://en.wikipedia.org/wiki/Application_programming_interface
https://en.wikipedia.org/wiki/Web_service
https://en.wikipedia.org/wiki/Application_programming_interface
https://en.wikipedia.org/wiki/GitHub
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=16
https://en.wikipedia.org/wiki/Continuous_integration
https://en.wikipedia.org/wiki/Custom_software
https://en.wikipedia.org/wiki/DevOps
https://en.wikipedia.org/wiki/Functional_specification
https://en.wikipedia.org/wiki/Programming_productivity
https://en.wikipedia.org/wiki/Software_blueprint
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_development_effort_estimation
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_project_management
https://en.wikipedia.org/wiki/Specification_and_Description_Language
https://en.wikipedia.org/wiki/User_experience
https://en.wikipedia.org/wiki/Software_industry
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=17
https://en.wikipedia.org/wiki/Bachelor_of_Science_in_Information_Technology
https://en.wikipedia.org/wiki/Computer_programmer
https://en.wikipedia.org/wiki/Consulting_software_engineer
https://en.wikipedia.org/wiki/Offshore_software_development
https://en.wikipedia.org/wiki/Software_developer
https://en.wikipedia.org/wiki/Software_engineer
https://en.wikipedia.org/wiki/Software_publisher
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=18
https://en.wikipedia.org/wiki/Video_game_development
https://en.wikipedia.org/wiki/Web_application_development
https://en.wikipedia.org/wiki/Web_engineering
https://en.wikipedia.org/wiki/Mobile_Application_Development
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=19
https://en.wikipedia.org/wiki/Software_development
http://www.bestpricecomputers.co.uk/glossary/application-development.htm
https://en.wikipedia.org/wiki/Software_development
http://www.npd-solutions.com/glossary.html
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/John_Mylopoulos
https://en.wikipedia.org/wiki/Software_development
http://www.ittoday.info/ITPerformanceImprovement/Articles/2012-06Otero.html
https://en.wikipedia.org/wiki/Software_development
http://hayathisolutions.com/software-development.aspx
https://en.wikipedia.org/wiki/Software_development
http://www.mel.nist.gov/msidlibrary/doc/AMIS-Concepts.pdf
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
http://www.osti.gov/energycitations/servlets/purl/10160331-YhIRrY/
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
http://www.its.bldrdoc.gov/projects/devglossary/_case.html
http://www.its.bldrdoc.gov/projects/devglossary/
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit&section=20
https://commons.wikimedia.org/wiki/Category:Software_development
https://en.wikipedia.org/wiki/Template:Software_engineering
https://en.wikipedia.org/wiki/Template_talk:Software_engineering
https://en.wikipedia.org/w/index.php?title=Template:Software_engineering&action=edit
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Computer_programming
https://en.wikipedia.org/wiki/Requirements_engineering
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Software_testing
https://en.wikipedia.org/wiki/Systems_analysis
https://en.wikipedia.org/wiki/Formal_methods
https://en.wikipedia.org/wiki/Data_modeling
https://en.wikipedia.org/wiki/Enterprise_architecture
https://en.wikipedia.org/wiki/Functional_specification
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Orthogonality_(programming)
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Software
https://en.wikipedia.org/wiki/Software_archaeology
https://en.wikipedia.org/wiki/Software_architecture
https://en.wikipedia.org/wiki/Software_configuration_management
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_quality
https://en.wikipedia.org/wiki/Software_quality_assurance
https://en.wikipedia.org/wiki/Software_verification_and_validation
https://en.wikipedia.org/wiki/Structured_analysis
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Aspect-oriented_software_development
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Ontology_(information_science)
https://en.wikipedia.org/wiki/Service-oriented_architecture
https://en.wikipedia.org/wiki/Systems_development_life_cycle
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Enterprise_Unified_Process
https://en.wikipedia.org/wiki/Executable_UML
https://en.wikipedia.org/wiki/Incremental_build_model
https://en.wikipedia.org/wiki/Iterative_and_incremental_development
https://en.wikipedia.org/wiki/Software_prototyping
https://en.wikipedia.org/wiki/Rapid_application_development
https://en.wikipedia.org/wiki/Unified_Process
https://en.wikipedia.org/wiki/Scrum_(software_development)
https://en.wikipedia.org/wiki/Spiral_model
https://en.wikipedia.org/wiki/V-Model_(software_development)
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Extreme_programming
https://en.wikipedia.org/wiki/ISO/IEC_15504
https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration
https://en.wikipedia.org/wiki/Data_model
https://en.wikipedia.org/wiki/Entity–relationship_model
https://en.wikipedia.org/wiki/Function_model
https://en.wikipedia.org/wiki/Information_model
https://en.wikipedia.org/wiki/Metamodeling
https://en.wikipedia.org/wiki/Object_model
https://en.wikipedia.org/wiki/Systems_modeling
https://en.wikipedia.org/wiki/View_model
https://en.wikipedia.org/wiki/IDEF
https://en.wikipedia.org/wiki/Unified_Modeling_Language
https://en.wikipedia.org/wiki/Universal_Systems_Language
https://en.wikipedia.org/wiki/Systems_Modeling_Language
https://en.wikipedia.org/wiki/Victor_Basili
https://en.wikipedia.org/wiki/Kent_Beck
https://en.wikipedia.org/wiki/Grady_Booch
https://en.wikipedia.org/wiki/Fred_Brooks
https://en.wikipedia.org/wiki/Barry_Boehm
https://en.wikipedia.org/wiki/Peter_Chen
https://en.wikipedia.org/wiki/Danese_Cooper
https://en.wikipedia.org/wiki/Ward_Cunningham
https://en.wikipedia.org/wiki/Tom_DeMarco
https://en.wikipedia.org/wiki/Edsger_W._Dijkstra
https://en.wikipedia.org/wiki/Delores_M._Etter
https://en.wikipedia.org/wiki/Martin_Fowler
https://en.wikipedia.org/wiki/Adele_Goldstine
https://en.wikipedia.org/wiki/Margaret_Hamilton_(scientist)
https://en.wikipedia.org/wiki/Tony_Hoare
https://en.wikipedia.org/wiki/Lois_Haibt
https://en.wikipedia.org/wiki/Mary_Jean_Harrold
https://en.wikipedia.org/wiki/Grace_Hopper
https://en.wikipedia.org/wiki/Watts_Humphrey
https://en.wikipedia.org/wiki/Michael_A._Jackson
https://en.wikipedia.org/wiki/Ivar_Jacobson
https://en.wikipedia.org/wiki/Alan_Kay
https://en.wikipedia.org/wiki/Nancy_Leveson
https://en.wikipedia.org/wiki/Stephen_J._Mellor
https://en.wikipedia.org/wiki/Bertrand_Meyer
https://en.wikipedia.org/wiki/David_Parnas
https://en.wikipedia.org/wiki/Trygve_Reenskaug
https://en.wikipedia.org/wiki/Winston_W._Royce
https://en.wikipedia.org/wiki/James_Rumbaugh
https://en.wikipedia.org/wiki/Mary_Shaw_(computer_scientist)
https://en.wikipedia.org/wiki/Peri_Tarr
https://en.wikipedia.org/wiki/Elaine_Weyuker
https://en.wikipedia.org/wiki/Niklaus_Wirth
https://en.wikipedia.org/wiki/Edward_Yourdon
https://en.wikipedia.org/wiki/Computer_science
https://en.wikipedia.org/wiki/Computer_engineering
https://en.wikipedia.org/wiki/Project_management
https://en.wikipedia.org/wiki/Risk_management
https://en.wikipedia.org/wiki/Systems_engineering
https://en.wikipedia.org/wiki/Category:Software_engineering
https://commons.wikimedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Template:Computer_science
https://en.wikipedia.org/wiki/Template_talk:Computer_science
https://en.wikipedia.org/w/index.php?title=Template:Computer_science&action=edit
https://en.wikipedia.org/wiki/Computer_science
https://en.wikipedia.org/wiki/ACM_Computing_Classification_System
https://en.wikipedia.org/wiki/Computer_hardware
https://en.wikipedia.org/wiki/Printed_circuit_board
https://en.wikipedia.org/wiki/Peripheral
https://en.wikipedia.org/wiki/Integrated_circuit
https://en.wikipedia.org/wiki/Very-large-scale_integration
https://en.wikipedia.org/wiki/Green_computing
https://en.wikipedia.org/wiki/Electronic_design_automation
https://en.wikipedia.org/wiki/Computer_architecture
https://en.wikipedia.org/wiki/Embedded_system
https://en.wikipedia.org/wiki/Real-time_computing
https://en.wikipedia.org/wiki/Dependability
https://en.wikipedia.org/wiki/Computer_network
https://en.wikipedia.org/wiki/Network_architecture
https://en.wikipedia.org/wiki/Network_protocol
https://en.wikipedia.org/wiki/Networking_hardware
https://en.wikipedia.org/wiki/Network_scheduler
https://en.wikipedia.org/wiki/Network_performance
https://en.wikipedia.org/wiki/Network_service
https://en.wikipedia.org/wiki/Interpreter_(computing)
https://en.wikipedia.org/wiki/Middleware
https://en.wikipedia.org/wiki/Virtual_machine
https://en.wikipedia.org/wiki/Operating_system
https://en.wikipedia.org/wiki/Software_quality
https://en.wikipedia.org/wiki/Programming_language_theory
https://en.wikipedia.org/wiki/Programming_tool
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Compiler_construction
https://en.wikipedia.org/wiki/Domain-specific_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Software_framework
https://en.wikipedia.org/wiki/Integrated_development_environment
https://en.wikipedia.org/wiki/Software_configuration_management
https://en.wikipedia.org/wiki/Library_(computing)
https://en.wikipedia.org/wiki/Software_repository
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Requirements_analysis
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_construction
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Programming_team
https://en.wikipedia.org/wiki/Open-source_software
https://en.wikipedia.org/wiki/Theory_of_computation
https://en.wikipedia.org/wiki/Model_of_computation
https://en.wikipedia.org/wiki/Formal_language
https://en.wikipedia.org/wiki/Automata_theory
https://en.wikipedia.org/wiki/Computational_complexity_theory
https://en.wikipedia.org/wiki/Logic_in_computer_science
https://en.wikipedia.org/wiki/Semantics_(computer_science)
https://en.wikipedia.org/wiki/Algorithm
https://en.wikipedia.org/wiki/Algorithm_design
https://en.wikipedia.org/wiki/Analysis_of_algorithms
https://en.wikipedia.org/wiki/Randomized_algorithm
https://en.wikipedia.org/wiki/Computational_geometry
https://en.wikipedia.org/wiki/Discrete_mathematics
https://en.wikipedia.org/wiki/Probability
https://en.wikipedia.org/wiki/Statistics
https://en.wikipedia.org/wiki/Mathematical_software
https://en.wikipedia.org/wiki/Information_theory
https://en.wikipedia.org/wiki/Mathematical_analysis
https://en.wikipedia.org/wiki/Numerical_analysis
https://en.wikipedia.org/wiki/Information_system
https://en.wikipedia.org/wiki/Database_management_system
https://en.wikipedia.org/wiki/Computer_data_storage
https://en.wikipedia.org/wiki/Enterprise_information_system
https://en.wikipedia.org/wiki/Social_software
https://en.wikipedia.org/wiki/Geographic_information_system
https://en.wikipedia.org/wiki/Decision_support_system
https://en.wikipedia.org/wiki/Process_control
https://en.wikipedia.org/wiki/Multimedia_database
https://en.wikipedia.org/wiki/Data_mining
https://en.wikipedia.org/wiki/Digital_library
https://en.wikipedia.org/wiki/Computing_platform
https://en.wikipedia.org/wiki/Digital_marketing
https://en.wikipedia.org/wiki/World_Wide_Web
https://en.wikipedia.org/wiki/Information_retrieval
https://en.wikipedia.org/wiki/Computer_security
https://en.wikipedia.org/wiki/Cryptography
https://en.wikipedia.org/wiki/Formal_methods
https://en.wikipedia.org/wiki/Security_service_(telecommunication)
https://en.wikipedia.org/wiki/Intrusion_detection_system
https://en.wikipedia.org/wiki/Computer_security_compromised_by_hardware_failure
https://en.wikipedia.org/wiki/Network_security
https://en.wikipedia.org/wiki/Information_security
https://en.wikipedia.org/wiki/Application_security
https://en.wikipedia.org/wiki/Human–computer_interaction
https://en.wikipedia.org/wiki/Interaction_design
https://en.wikipedia.org/wiki/Social_computing
https://en.wikipedia.org/wiki/Ubiquitous_computing
https://en.wikipedia.org/wiki/Visualization_(computer_graphics)
https://en.wikipedia.org/wiki/Computer_accessibility
https://en.wikipedia.org/wiki/Concurrency_(computer_science)
https://en.wikipedia.org/wiki/Concurrent_computing
https://en.wikipedia.org/wiki/Parallel_computing
https://en.wikipedia.org/wiki/Distributed_computing
https://en.wikipedia.org/wiki/Multithreading_(computer_architecture)
https://en.wikipedia.org/wiki/Multiprocessing
https://en.wikipedia.org/wiki/Artificial_intelligence
https://en.wikipedia.org/wiki/Natural_language_processing
https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning
https://en.wikipedia.org/wiki/Computer_vision
https://en.wikipedia.org/wiki/Automated_planning_and_scheduling
https://en.wikipedia.org/wiki/Mathematical_optimization
https://en.wikipedia.org/wiki/Control_theory
https://en.wikipedia.org/wiki/Philosophy_of_artificial_intelligence
https://en.wikipedia.org/wiki/Distributed_artificial_intelligence
https://en.wikipedia.org/wiki/Machine_learning
https://en.wikipedia.org/wiki/Supervised_learning
https://en.wikipedia.org/wiki/Unsupervised_learning
https://en.wikipedia.org/wiki/Reinforcement_learning
https://en.wikipedia.org/wiki/Multi-task_learning
https://en.wikipedia.org/wiki/Cross-validation_(statistics)
https://en.wikipedia.org/wiki/Computer_graphics
https://en.wikipedia.org/wiki/Computer_animation
https://en.wikipedia.org/wiki/Rendering_(computer_graphics)
https://en.wikipedia.org/wiki/Photo_manipulation
https://en.wikipedia.org/wiki/Graphics_processing_unit
https://en.wikipedia.org/wiki/Mixed_reality
https://en.wikipedia.org/wiki/Virtual_reality
https://en.wikipedia.org/wiki/Image_compression
https://en.wikipedia.org/wiki/Solid_modeling
https://en.wikipedia.org/wiki/E-commerce
https://en.wikipedia.org/wiki/Enterprise_software
https://en.wikipedia.org/wiki/Computational_mathematics
https://en.wikipedia.org/wiki/Computational_physics
https://en.wikipedia.org/wiki/Computational_chemistry
https://en.wikipedia.org/wiki/Computational_biology
https://en.wikipedia.org/wiki/Computational_social_science
https://en.wikipedia.org/wiki/Computational_engineering
https://en.wikipedia.org/wiki/Health_informatics
https://en.wikipedia.org/wiki/Digital_art
https://en.wikipedia.org/wiki/Electronic_publishing
https://en.wikipedia.org/wiki/Cyberwarfare
https://en.wikipedia.org/wiki/Electronic_voting
https://en.wikipedia.org/wiki/Video_game
https://en.wikipedia.org/wiki/Word_processor
https://en.wikipedia.org/wiki/Operations_research
https://en.wikipedia.org/wiki/Educational_technology
https://en.wikipedia.org/wiki/Document_management_system
https://en.wikipedia.org/wiki/Book:Computer_science
https://en.wikipedia.org/wiki/Category:Computer_science
https://en.wikipedia.org/wiki/Portal:Computer_science
https://en.wikipedia.org/wiki/Wikipedia:WikiProject_Computer_science
https://commons.wikimedia.org/wiki/Category:Computer_science
https://en.wikipedia.org/wiki/Help:Authority_control
https://en.wikipedia.org/wiki/National_Diet_Library
https://id.ndl.go.jp/auth/ndlna/00679589
https://en.wikipedia.org/w/index.php?title=Software_development&oldid=806118076
https://en.wikipedia.org/wiki/Help:Category
https://en.wikipedia.org/wiki/Category:Software_development
https://en.wikipedia.org/wiki/Category:Software_project_management
https://en.wikipedia.org/wiki/Category:Project_management
https://en.wikipedia.org/wiki/Category:Computer_occupations
https://en.wikipedia.org/wiki/Category:Product_development
https://en.wikipedia.org/wiki/Category:Articles_needing_additional_references_from_August_2010
https://en.wikipedia.org/wiki/Category:All_articles_needing_additional_references
https://en.wikipedia.org/wiki/Category:All_articles_with_unsourced_statements
https://en.wikipedia.org/wiki/Category:Articles_with_unsourced_statements_from_December_2011
https://en.wikipedia.org/wiki/Category:Articles_with_unsourced_statements_from_January_2008
https://en.wikipedia.org/wiki/Category:Wikipedia_articles_needing_rewrite_from_May_2016
https://en.wikipedia.org/wiki/Category:All_articles_needing_rewrite
https://en.wikipedia.org/wiki/Special:MyTalk
https://en.wikipedia.org/wiki/Special:MyContributions
https://en.wikipedia.org/w/index.php?title=Special:CreateAccount&returnto=Software+development
https://en.wikipedia.org/w/index.php?title=Special:UserLogin&returnto=Software+development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Talk:Software_development
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/w/index.php?title=Software_development&action=edit
https://en.wikipedia.org/w/index.php?title=Software_development&action=history
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Portal:Contents
https://en.wikipedia.org/wiki/Portal:Featured_content
https://en.wikipedia.org/wiki/Portal:Current_events
https://en.wikipedia.org/wiki/Special:Random
https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&utm_medium=sidebar&utm_campaign=C13_en.wikipedia.org&uselang=en
https://shop.wikimedia.org
https://en.wikipedia.org/wiki/Help:Contents
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:Community_portal
https://en.wikipedia.org/wiki/Special:RecentChanges
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://en.wikipedia.org/wiki/Special:WhatLinksHere/Software_development
https://en.wikipedia.org/wiki/Special:RecentChangesLinked/Software_development
https://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard
https://en.wikipedia.org/wiki/Special:SpecialPages
https://en.wikipedia.org/w/index.php?title=Software_development&oldid=806118076
https://en.wikipedia.org/w/index.php?title=Software_development&action=info
https://www.wikidata.org/wiki/Special:EntityPage/Q638608
https://en.wikipedia.org/w/index.php?title=Special:CiteThisPage&page=Software_development&id=806118076
https://en.wikipedia.org/w/index.php?title=Special:Book&bookcmd=book_creator&referer=Software+development
https://en.wikipedia.org/w/index.php?title=Special:ElectronPdf&page=Software+development&action=show-download-screen
https://en.wikipedia.org/w/index.php?title=Software_development&printable=yes
https://commons.wikimedia.org/wiki/Category:Software_development
https://ar.wikipedia.org/wiki/تطوير_برمجيات
https://bg.wikipedia.org/wiki/Разработка_на_софтуер
https://ca.wikipedia.org/wiki/Desenvolupament_de_programari
https://cs.wikipedia.org/wiki/Proces_vývoje_softwaru
https://da.wikipedia.org/wiki/Softwareudviklingsproces
https://et.wikipedia.org/wiki/Tarkvaraarendus
https://es.wikipedia.org/wiki/Proceso_para_el_desarrollo_de_software
https://fa.wikipedia.org/wiki/توسعه_نرم‌افزار
https://fr.wikipedia.org/wiki/Développement_de_logiciel
https://gl.wikipedia.org/wiki/Ciclo_de_desenvolvemento
https://ko.wikipedia.org/wiki/소프트웨어_개발
https://hi.wikipedia.org/wiki/सॉफ्टवेयर_डेवलपमेण्ट
https://id.wikipedia.org/wiki/Proses_pengembangan_perangkat_lunak
https://it.wikipedia.org/wiki/Ciclo_di_vita_del_software
https://he.wikipedia.org/wiki/פיתוח_תוכנה
https://jv.wikipedia.org/wiki/Prosès_pangembangan_piranti_alus_komputer
https://lt.wikipedia.org/wiki/Programų_kūrimo_gyvavimo_ciklo_modelis
https://hu.wikipedia.org/wiki/Szoftverfejlesztés
https://ml.wikipedia.org/wiki/സോഫ്റ്റ്വെയർ_ഉത്പാദനം
https://ms.wikipedia.org/wiki/Pembangunan_perisian
https://my.wikipedia.org/wiki/ဆော့ဖ်ဝဲ_ဖွံ့ဖြိုးရေး
https://ja.wikipedia.org/wiki/ソフトウェア開発
https://no.wikipedia.org/wiki/Programvareutviklingsprosess
https://pl.wikipedia.org/wiki/Proces_wytwórczy_oprogramowania
https://pt.wikipedia.org/wiki/Desenvolvimento_de_software
https://ru.wikipedia.org/wiki/Разработка_программного_обеспечения
https://sq.wikipedia.org/wiki/Zhvillimi_i_softuerit
https://simple.wikipedia.org/wiki/Software_development
https://sr.wikipedia.org/wiki/Развој_софтвера
https://fi.wikipedia.org/wiki/Ohjelmistokehitys
https://sv.wikipedia.org/wiki/Programutvecklingsmetodik
https://ta.wikipedia.org/wiki/மென்பொருள்_மேம்பாடு
https://tr.wikipedia.org/wiki/Yazılım_geliştirme_süreci
https://uk.wikipedia.org/wiki/Розробка_програмного_забезпечення
https://vi.wikipedia.org/wiki/Phát_triển_phần_mềm
https://zh-yue.wikipedia.org/wiki/軟件開發
https://zh.wikipedia.org/wiki/软件开发
https://www.wikidata.org/wiki/Special:EntityPage/Q638608
https://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License
https://creativecommons.org/licenses/by-sa/3.0/
https://wikimediafoundation.org/wiki/Terms_of_Use
https://wikimediafoundation.org/wiki/Privacy_policy
https://www.wikimediafoundation.org/
https://wikimediafoundation.org/wiki/Privacy_policy
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:General_disclaimer
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute
https://wikimediafoundation.org/wiki/Cookie_statement
https://en.m.wikipedia.org/w/index.php?title=Software_development&mobileaction=toggle_view_mobile
https://wikimediafoundation.org/
https://www.mediawiki.org/
