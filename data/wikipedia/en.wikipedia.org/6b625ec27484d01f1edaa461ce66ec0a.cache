https://en.wikipedia.org/wiki/Software_development_process
Software development process - Wikipedia
In software engineering, a software development process is the process of dividing software development work into distinct phases to improve design, product management, and project management. It is also...
software development process from wikipedia the free encyclopedia jump to navigation search this article has multiple issues please help improve it or discuss these issues on the talk page learn how and when to remove these template messages this article may require cleanup to meet wikipedias quality standards the specific problem is section restructuring in progress suggestions welcome please help improve this article if you can july 2017 learn how and when to remove this template message this article needs additional citations for verification please help improve this article by adding citations to reliable sources unsourced material may be challenged and removed december 2010 learn how and when to remove this template message learn how and when to remove this template message software development core activities processes requirements design engineering construction testing debugging deployment maintenance paradigms and models agile cleanroom incremental prototyping spiral waterfall methodologies and frameworks devops dsdm fdd iid kanban lean sd mdd msf psp rad safe scrum semat tsp up vmodel xp supporting disciplines configuration management documentation software quality assurance sqa project management user experience practices atdd bdd cco ci cd ddd pp standup tdd tools compiler debugger profiler gui designer modeling ide build automation release automation infrastructure as code testing standards and boks cmmi ieee standards iso 9001 isoiec standards swebok pmbok babok v t e in software engineering a software development process is the process of dividing software development work into distinct phases to improve design product management and project management it is also known as a software development life cycle the methodology may include the predefinition of specific deliverables and artifacts that are created and completed by a project team to develop or maintain an application1 most modern development processes can be vaguely described as agile other methodologies include waterfall prototyping iterative and incremental development spiral development rapid application development and extreme programming some people consider a lifecycle model a more general term for a category of methodologies and a software development process a more specific term to refer to a specific process chosen by a specific organization for example there are many specific software development processes that fit the spiral lifecycle model the field is often considered a subset of the systems development life cycle contents 1 history 2 practices 21 continuous integration 22 prototyping 23 incremental development 24 rapid application development 3 methodologies 31 agile development 32 waterfall development 33 spiral development 34 other 4 process metamodels 5 in practice 6 see also 7 references 8 external links historyedit the software development methodology also known as sdm framework didnt emerge until the 1960s according to elliott 2004 the systems development life cycle sdlc can be considered to be the oldest formalized methodology framework for building information systems the main idea of the sdlc has been to pursue the development of information systems in a very deliberate structured and methodical way requiring each stage of the life cycle––from inception of the idea to delivery of the final system––to be carried out rigidly and sequentially2 within the context of the framework being applied the main target of this methodology framework in the 1960s was to develop large scale functional business systems in an age of large scale business conglomerates information systems activities revolved around heavy data processing and number crunching routines2 methodologies processes and frameworks range from specific proscriptive steps that can be used directly by an organization in daytoday work to flexible frameworks that an organization uses to generate a custom set of steps tailored to the needs of a specific project or group in some cases a sponsor or maintenance organization distributes an official set of documents that describe the process specific examples include 1970s structured programming since 1969 cap gemini sdm originally from pandata the first english translation was published in 1974 sdm stands for system development methodology 1980s structured systems analysis and design method ssadm from 1980 onwards information requirement analysissoft systems methodology 1990s objectoriented programming oop developed in the early 1960s and became a dominant programming approach during the mid1990s rapid application development rad since 1991 dynamic systems development method dsdm since 1994 scrum since 1995 team software process since 1998 rational unified process rup maintained by ibm since 1998 extreme programming since 1999 2000s agile unified process aup maintained since 2005 by scott ambler disciplined agile delivery dad supersedes aup 2010s scaled agile framework safe largescale scrum less it is notable that since dsdm in 1994 all of the methodologies on the above list except rup have been agile methodologies yet many organisations especially governments still use preagile processes often waterfall or similar software process and software quality are closely interrelated some unexpected facets and effects have been observed in practice 3 since the early 2000s scaling agile delivery processes has become the biggest challenge for teams using agile processes4 among these another software development process has been established in open source the adoption of these best practices known and established processes within the confines of a company is called inner source practicesedit several software development approaches have been used since the origin of information technology in two main categoriescitation needed typically an approach or a combination of approaches is chosen by management or a development teamcitation needed traditional methodologies such as waterfall that have distinct phases are sometimes known as software development life cycle sdlc methodologiescitation needed though this term could also be used more generally to refer to any methodology a life cycle approach with distinct phases is in contrast to agile approaches which define a process of iteration but where design construction and deployment of different pieces can occur simultaneouslycitation needed continuous integrationedit main article continuous integration continuous integration is the practice of merging all developer working copies to a shared mainline several times a day5 grady booch first named and proposed ci in his 1991 method6 although he did not advocate integrating several times a day extreme programming xp adopted the concept of ci and did advocate integrating more than once per day – perhaps as many as tens of times per day prototypingedit software prototyping is about creating prototypes ie incomplete versions of the software program being developed the basic principles are1 prototyping is not a standalone complete development methodology but rather an approach to try out particular features in the context of a full methodology such as incremental spiral or rapid application development rad attempts to reduce inherent project risk by breaking a project into smaller segments and providing more easeofchange during the development process the client is involved throughout the development process which increases the likelihood of client acceptance of the final implementation while some prototypes are developed with the expectation that they will be discarded it is possible in some cases to evolve from prototype to working system a basic understanding of the fundamental business problem is necessary to avoid solving the wrong problems but this is true for all software methodologies incremental developmentedit main article iterative and incremental development various methods are acceptable for combining linear and iterative systems development methodologies with the primary objective of each being to reduce inherent project risk by breaking a project into smaller segments and providing more easeofchange during the development process there are three main variants of incremental development1 a series of miniwaterfalls are performed where all phases of the waterfall are completed for a small part of a system before proceeding to the next increment or overall requirements are defined before proceeding to evolutionary miniwaterfall development of individual increments of a system or the initial software concept requirements analysis and design of architecture and system core are defined via waterfall followed by incremental implementation which culminates in installing the final version a working system rapid application developmentedit rapid application development rad model rapid application development rad is a software development methodology which favors iterative development and the rapid construction of prototypes instead of large amounts of upfront planning the planning of software developed using rad is interleaved with writing the software itself the lack of extensive preplanning generally allows software to be written much faster and makes it easier to change requirements the rapid development process starts with the development of preliminary data models and business process models using structured techniques in the next stage requirements are verified using prototyping eventually to refine the data and process models these stages are repeated iteratively further development results in a combined business requirements and technical design statement to be used for constructing new systems7 the term was first used to describe a software development process introduced by james martin in 1991 according to whitten 2003 it is a merger of various structured techniques especially datadriven information engineering with prototyping techniques to accelerate software systems development7 the basic principles of rapid application development are1 key objective is for fast development and delivery of a high quality system at a relatively low investment cost attempts to reduce inherent project risk by breaking a project into smaller segments and providing more easeofchange during the development process aims to produce high quality systems quickly primarily via iterative prototyping at any stage of development active user involvement and computerized development tools these tools may include graphical user interface gui builders computer aided software engineering case tools database management systems dbms fourthgeneration programming languages code generators and objectoriented techniques key emphasis is on fulfilling the business need while technological or engineering excellence is of lesser importance project control involves prioritizing development and defining delivery deadlines or “timeboxes” if the project starts to slip emphasis is on reducing requirements to fit the timebox not in increasing the deadline generally includes joint application design jad where users are intensely involved in system design via consensus building in either structured workshops or electronically facilitated interaction active user involvement is imperative iteratively produces production software as opposed to a throwaway prototype produces documentation necessary to facilitate future development and maintenance standard systems analysis and design methods can be fitted into this framework methodologiesedit agile developmentedit main article agile software development agile software development refers to a group of software development methodologies based on iterative development where requirements and solutions evolve via collaboration between selforganizing crossfunctional teams the term was coined in the year 2001 when the agile manifesto was formulated agile software development uses iterative development as a basis but advocates a lighter and more peoplecentric viewpoint than traditional approaches agile processes fundamentally incorporate iteration and the continuous feedback that it provides to successively refine and deliver a software system there are many agile methodologies including dynamic systems development method dsdm kanban scrum waterfall developmentedit main article waterfall model the activities of the software development process represented in the waterfall model there are several other models to represent this process the waterfall model is a sequential development approach in which development is seen as flowing steadily downwards like a waterfall through several phases typically requirements analysis resulting in a software requirements specification software design implementation testing integration if there are multiple subsystems deployment or installation maintenance the first formal description of the method is often cited as an article published by winston w royce8 in 1970 although royce did not use the term waterfall in this article royce presented this model as an example of a flawed nonworking model9 the basic principles are1 project is divided into sequential phases with some overlap and splashback acceptable between phases emphasis is on planning time schedules target dates budgets and implementation of an entire system at one time tight control is maintained over the life of the project via extensive written documentation formal reviews and approvalsignoff by the user and information technology management occurring at the end of most phases before beginning the next phase written documentation is an explicit deliverable of each phase the waterfall model is a traditional engineering approach applied to software engineering a strict waterfall approach discourages revisiting and revising any prior phase once it is complete this inflexibility in a pure waterfall model has been a source of criticism by supporters of other more flexible models it has been widely blamed for several largescale government projects running over budget over time and sometimes failing to deliver on requirements due to the big design up front approach except when contractually required the waterfall model has been largely superseded by more flexible and versatile methodologies developed specifically for software development see criticism of waterfall model spiral developmentedit spiral model boehm 1988 main article spiral model in 1988 barry boehm published a formal software system development spiral model which combines some key aspect of the waterfall model and rapid prototyping methodologies in an effort to combine advantages of topdown and bottomup concepts it provided emphasis in a key area many felt had been neglected by other methodologies deliberate iterative risk analysis particularly suited to largescale complex systems the basic principles are1 focus is on risk assessment and on minimizing project risk by breaking a project into smaller segments and providing more easeofchange during the development process as well as providing the opportunity to evaluate risks and weigh consideration of project continuation throughout the life cycle each cycle involves a progression through the same sequence of steps for each part of the product and for each of its levels of elaboration from an overall conceptofoperation document down to the coding of each individual program10 each trip around the spiral traverses four basic quadrants 1 determine objectives alternatives and constraints of the iteration 2 evaluate alternatives identify and resolve risks 3 develop and verify deliverables from the iteration and 4 plan the next iteration11 begin each cycle with an identification of stakeholders and their win conditions and end each cycle with review and commitment12 otheredit other highlevel software project methodologies include behaviordriven development and business process management13 chaos model the main rule is always resolve the most important issue first incremental funding methodology an iterative approach lightweight methodology a general term for methods that only have a few rules and practices structured systems analysis and design method a specific version of waterfall slow programming as part of the larger slow movement emphasizes careful and gradual work without or minimal time pressures slow programming aims to avoid bugs and overly quick release schedules vmodel software development an extension of the waterfall model unified process up is an iterative software development methodology framework based on unified modeling language uml up organizes the development of software into four phases each consisting of one or more executable iterations of the software at that stage of development inception elaboration construction and guidelines many tools and products exist to facilitate up implementation one of the more popular versions of up is the rational unified process rup process metamodelsedit some process models are abstract descriptions for evaluating comparing and improving the specific process adopted by an organization isoiec 12207 is the international standard describing the method to select implement and monitor the life cycle for software the capability maturity model integration cmmi is one of the leading models and based on best practice independent assessments grade organizations on how well they follow their defined processes not on the quality of those processes or the software produced cmmi has replaced cmm iso 9000 describes standards for a formally organized process to manufacture a product and the methods of managing and monitoring progress although the standard was originally created for the manufacturing sector iso 9000 standards have been applied to software development as well like cmmi certification with iso 9000 does not guarantee the quality of the end result only that formalized business processes have been followed isoiec 15504 information technology — process assessment also known as software process improvement capability determination spice is a framework for the assessment of software processes this standard is aimed at setting out a clear model for process comparison spice is used much like cmmi it models processes to manage control guide and monitor software development this model is then used to measure what a development organization or project team actually does during software development this information is analyzed to identify weaknesses and drive improvement it also identifies strengths that can be continued or integrated into common practice for that organization or team spem 20 by the object management group soft systems methodology a general method for improving management processes method engineering a general method for improving information system processes in practiceedit the three basic approaches applied to software development methodology frameworks a variety of such frameworks have evolved over the years each with its own recognized strengths and weaknesses one software development methodology framework is not necessarily suitable for use by all projects each of the available methodology frameworks are best suited to specific kinds of projects based on various technical organizational project and team considerations1 software development organizations implement process methodologies to ease the process of development sometimes contractors may require methodologies employed an example is the us defense industry which requires a rating based on process models to obtain contracts the international standard for describing the method of selecting implementing and monitoring the life cycle for software is isoiec 12207 a decadeslong goal has been to find repeatable predictable processes that improve productivity and quality some try to systematize or formalize the seemingly unruly task of designing software others apply project management techniques to designing software large numbers of software projects do not meet their expectations in terms of functionality cost or delivery schedule see list of failed and overbudget custom software projects for some notable examples organizations may create a software engineering process group sepg which is the focal point for process improvement composed of line practitioners who have varied skills the group is at the center of the collaborative effort of everyone in the organization who is involved with software engineering process improvement a particular development team may also agree to programming environment details such as which integrated development environment is used and one or more dominant programming paradigms programming style rules or choice of specific software libraries or software frameworks these details are generally not dictated by the choice of model or general methodology see alsoedit computeraided software engineering some of these tools support specific methodologies list of software development philosophies outline of software engineering openup project management software development software development effort estimation software release life cycle topdown and bottomup designcomputer science referencesedit a b c d e f g centers for medicare medicaid services cms office of information service 2008 selecting a development approach webarticle united states department of health and human services hhs revalidated march 27 2008 retrieved 27 oct 2008 a b geoffrey elliott 2004 global business information technology an integrated systems approach pearson education p87 suryanarayana girish 2015 software process versus design quality tug of war ieee software 32 4 7–11 doi101109ms201587  saeeda hina khalid hannan ahmed mukhtar sameer abu arif fahim 20150901 systematic literature review of agile scalability for large scale projects researchgate 6 9 issn 21565570 doi1014569ijacsa2015060908  continuous integration  booch grady 1991 object oriented design with applications benjamin cummings p 209 isbn 9780805300918 retrieved 18 august 2014  a b whitten jeffrey l lonnie d bentley kevin c dittman 2003 systems analysis and design methods 6th edition isbn 025619906x wasserfallmodell entstehungskontext markus rerych institut für gestaltungs und wirkungsforschung tuwien accessed on line november 28 2007 conrad weisert waterfall methodology theres no such thing barry boehm 1996 a spiral model of software development and enhancement in acm sigsoft software engineering notes acm 1141424 august 1986 richard h thayer barry w boehm 1986 tutorial software engineering project management computer society press of the ieee p130 barry w boehm 2000 software cost estimation with cocomo ii volume 1 lübke daniel van lessen tammo 2016 modeling test cases in bpmn for behaviordriven development ieee software 33 5 15–21 doi101109ms2016117  external linksedit wikimedia commons has media related to software development methodology selecting a development approach at cmshhsgov gerhard fischer the software technology of the 21st century from software reuse to collaborative software design 2001 subway map of agile practices at agile alliance v t e software engineering fields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification and validation structured analysis orientations agile aspectoriented object orientation ontology service orientation sdlc models developmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model vmodel waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml usl sysml software engineers victor basili kent beck grady booch fred brooks barry boehm peter chen danese cooper ward cunningham tom demarco edsger w dijkstra delores m etter martin fowler adele goldstine margaret hamilton c a r hoare lois haibt mary jean harrold grace hopper watts humphrey michael a jackson ivar jacobson alan kay nancy leveson stephen j mellor bertrand meyer david parnas trygve reenskaug winston w royce james rumbaugh mary shaw peri tarr elaine weyuker niklaus wirth edward yourdon related fields computer science computer engineering project management risk management systems engineering category commons retrieved from httpsenwikipediaorgwindexphptitlesoftwaredevelopmentprocessoldid807639363 categories software development process methodology software engineering hidden categories articles needing cleanup from july 2017 all pages needing cleanup cleanup tagged articles with a reason field from july 2017 wikipedia pages needing cleanup from july 2017 articles needing additional references from december 2010 all articles needing additional references all articles with unsourced statements articles with unsourced statements from february 2017 navigation menu personal tools not logged in talk contributions create account log in namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate to wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page printexport create a book download as pdf printable version in other projects wikimedia commons languages العربية català čeština dansk deutsch ελληνικά español فارسی galego 한국어 हिन्दी bahasa indonesia italiano עברית basa jawa lietuvių nederlands 日本語 norsk oʻzbekchaўзбекча polski português русский shqip کوردی српски srpski svenska தமிழ் ไทย türkçe українська tiếng việt 中文 edit links this page was last edited on 29 october 2017 at 0628 text is available under the creative commons attributionsharealike license additional terms may apply by using this site you agree to the terms of use and privacy policy wikipedia® is a registered trademark of the wikimedia foundation inc a nonprofit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit
https://en.wikipedia.org/wiki/Talk:Software_development_process
https://en.wikipedia.org/wiki/Help:Maintenance_template_removal
https://en.wikipedia.org/wiki/Wikipedia:Cleanup
https://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit
https://en.wikipedia.org/wiki/Help:Maintenance_template_removal
https://en.wikipedia.org/wiki/File:Question_book-new.svg
https://en.wikipedia.org/wiki/Wikipedia:Verifiability
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit
https://en.wikipedia.org/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1
https://en.wikipedia.org/wiki/Help:Maintenance_template_removal
https://en.wikipedia.org/wiki/Help:Maintenance_template_removal
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Requirements_analysis
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Software_construction
https://en.wikipedia.org/wiki/Software_testing
https://en.wikipedia.org/wiki/Debugging
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Cleanroom_software_engineering
https://en.wikipedia.org/wiki/Incremental_build_model
https://en.wikipedia.org/wiki/Software_prototyping
https://en.wikipedia.org/wiki/Spiral_model
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Software_development_methodology
https://en.wikipedia.org/wiki/DevOps
https://en.wikipedia.org/wiki/Dynamic_systems_development_method
https://en.wikipedia.org/wiki/Feature-driven_development
https://en.wikipedia.org/wiki/Iterative_and_incremental_development
https://en.wikipedia.org/wiki/Kanban_(development)
https://en.wikipedia.org/wiki/Lean_software_development
https://en.wikipedia.org/wiki/Model-driven_development
https://en.wikipedia.org/wiki/Microsoft_Solutions_Framework
https://en.wikipedia.org/wiki/Personal_software_process
https://en.wikipedia.org/wiki/Rapid_application_development
https://en.wikipedia.org/wiki/Scaled_Agile_Framework
https://en.wikipedia.org/wiki/Scrum_(software_development)
https://en.wikipedia.org/wiki/SEMAT
https://en.wikipedia.org/wiki/Team_software_process
https://en.wikipedia.org/wiki/Unified_Process
https://en.wikipedia.org/wiki/V-Model_(software_development)
https://en.wikipedia.org/wiki/Extreme_programming
https://en.wikipedia.org/wiki/Software_configuration_management
https://en.wikipedia.org/wiki/Software_documentation
https://en.wikipedia.org/wiki/Software_quality_assurance
https://en.wikipedia.org/wiki/Software_project_management
https://en.wikipedia.org/wiki/User_experience
https://en.wikipedia.org/wiki/Acceptance_test–driven_development
https://en.wikipedia.org/wiki/Behavior-driven_development
https://en.wikipedia.org/wiki/Extreme_programming_practices
https://en.wikipedia.org/wiki/Continuous_Integration
https://en.wikipedia.org/wiki/Continuous_Delivery
https://en.wikipedia.org/wiki/Domain-driven_design
https://en.wikipedia.org/wiki/Pair_Programming
https://en.wikipedia.org/wiki/Stand-up_meeting
https://en.wikipedia.org/wiki/Test-driven_development
https://en.wikipedia.org/wiki/Programming_tool
https://en.wikipedia.org/wiki/Compiler
https://en.wikipedia.org/wiki/Debugger
https://en.wikipedia.org/wiki/Profiling_(computer_programming)
https://en.wikipedia.org/wiki/Graphical_user_interface_builder
https://en.wikipedia.org/wiki/UML_tools
https://en.wikipedia.org/wiki/Integrated_development_environment
https://en.wikipedia.org/wiki/Build_automation
https://en.wikipedia.org/wiki/Application_release_automation
https://en.wikipedia.org/wiki/Infrastructure_as_Code
https://en.wikipedia.org/wiki/Category:Software_testing_tools
https://en.wikipedia.org/wiki/CMMI
https://en.wikipedia.org/wiki/IEEE_Standards_Association
https://en.wikipedia.org/wiki/ISO_9001
https://en.wikipedia.org/wiki/ISO/IEC_JTC_1/SC_7
https://en.wikipedia.org/wiki/SWEBOK
https://en.wikipedia.org/wiki/PMBOK
https://en.wikipedia.org/wiki/BABOK
https://en.wikipedia.org/wiki/Template:Software_development_process
https://en.wikipedia.org/wiki/Template_talk:Software_development_process
https://en.wikipedia.org/w/index.php?title=Template:Software_development_process&action=edit
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_product_management
https://en.wikipedia.org/wiki/Software_project_management
https://en.wikipedia.org/wiki/Deliverable
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Software_prototyping
https://en.wikipedia.org/wiki/Iterative_and_incremental_development
https://en.wikipedia.org/wiki/Spiral_development
https://en.wikipedia.org/wiki/Rapid_application_development
https://en.wikipedia.org/wiki/Extreme_programming
https://en.wikipedia.org/wiki/Systems_development_life_cycle
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=1
https://en.wikipedia.org/wiki/Systems_development_life_cycle
https://en.wikipedia.org/wiki/Information_system
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Business_system
https://en.wikipedia.org/wiki/Data_processing
https://en.wikipedia.org/wiki/Number_crunching
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Structured_programming
https://en.wikipedia.org/wiki/Cap_Gemini_SDM
https://en.wikipedia.org/wiki/Structured_systems_analysis_and_design_method
https://en.wikipedia.org/wiki/Soft_systems_methodology
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Rapid_application_development
https://en.wikipedia.org/wiki/Dynamic_systems_development_method
https://en.wikipedia.org/wiki/Scrum_(development)
https://en.wikipedia.org/wiki/Team_software_process
https://en.wikipedia.org/wiki/Rational_Unified_Process
https://en.wikipedia.org/wiki/Extreme_programming
https://en.wikipedia.org/wiki/Agile_Unified_Process
https://en.wikipedia.org/wiki/Scott_Ambler
https://en.wikipedia.org/wiki/Disciplined_agile_delivery
https://en.wikipedia.org/wiki/Scaled_Agile_Framework
https://en.wikipedia.org/wiki/Large-Scale_Scrum
https://en.wikipedia.org/wiki/Software_quality
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Open_source
https://en.wikipedia.org/wiki/Inner_source
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=2
https://en.wikipedia.org/wiki/Wikipedia:Citation_needed
https://en.wikipedia.org/wiki/Wikipedia:Citation_needed
https://en.wikipedia.org/wiki/Wikipedia:Citation_needed
https://en.wikipedia.org/wiki/Wikipedia:Citation_needed
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=3
https://en.wikipedia.org/wiki/Continuous_integration
https://en.wikipedia.org/wiki/Continuous_integration
https://en.wikipedia.org/wiki/Trunk_(software)
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Grady_Booch
https://en.wikipedia.org/wiki/Booch_method
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Extreme_programming
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=4
https://en.wikipedia.org/wiki/Software_prototyping
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=5
https://en.wikipedia.org/wiki/Iterative_and_incremental_development
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=6
https://en.wikipedia.org/wiki/File:RADModel.JPG
https://en.wikipedia.org/wiki/File:RADModel.JPG
https://en.wikipedia.org/wiki/Rapid_application_development
https://en.wikipedia.org/wiki/Iterative_development
https://en.wikipedia.org/wiki/Prototype
https://en.wikipedia.org/wiki/Data_model
https://en.wikipedia.org/wiki/Business_process_model
https://en.wikipedia.org/wiki/Structured_technique
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/James_Martin_(author)
https://en.wikipedia.org/wiki/Structured_Analysis_and_Design_Technique
https://en.wikipedia.org/wiki/Information_Engineering
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Graphical_User_Interface
https://en.wikipedia.org/wiki/Computer_Aided_Software_Engineering
https://en.wikipedia.org/wiki/Database_Management_System
https://en.wikipedia.org/wiki/Fourth-generation_programming_language
https://en.wikipedia.org/wiki/Joint_application_design
https://en.wikipedia.org/wiki/System_design
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=7
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=8
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Agile_Manifesto
https://en.wikipedia.org/wiki/Dynamic_systems_development_method
https://en.wikipedia.org/wiki/Kanban_(development)
https://en.wikipedia.org/wiki/Scrum_(development)
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=9
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/File:Waterfall_model.svg
https://en.wikipedia.org/wiki/File:Waterfall_model.svg
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Requirements_analysis
https://en.wikipedia.org/wiki/Software_requirements_specification
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Computer_programming
https://en.wikipedia.org/wiki/Software_testing
https://en.wikipedia.org/wiki/System_integration
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Installation_(computer_programs)
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Winston_W._Royce
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Big_Design_Up_Front
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=10
https://en.wikipedia.org/wiki/File:Spiral_model_(Boehm,_1988).svg
https://en.wikipedia.org/wiki/File:Spiral_model_(Boehm,_1988).svg
https://en.wikipedia.org/wiki/Spiral_model
https://en.wikipedia.org/wiki/Barry_Boehm
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Rapid_application_development
https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=11
https://en.wikipedia.org/wiki/Behavior-driven_development
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Chaos_model
https://en.wikipedia.org/wiki/Incremental_funding_methodology
https://en.wikipedia.org/wiki/Lightweight_methodology
https://en.wikipedia.org/wiki/Structured_systems_analysis_and_design_method
https://en.wikipedia.org/wiki/Slow_movement_(culture)
https://en.wikipedia.org/wiki/V-Model_(software_development)
https://en.wikipedia.org/wiki/Unified_Process
https://en.wikipedia.org/wiki/Unified_Modeling_Language
https://en.wikipedia.org/wiki/Rational_Unified_Process
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=12
https://en.wikipedia.org/wiki/Process_model
https://en.wikipedia.org/wiki/ISO/IEC_12207
https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration
https://en.wikipedia.org/wiki/Capability_Maturity_Model
https://en.wikipedia.org/wiki/ISO_9000
https://en.wikipedia.org/wiki/ISO/IEC_15504
https://en.wikipedia.org/wiki/Soft_systems_methodology
https://en.wikipedia.org/wiki/Method_engineering
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=13
https://en.wikipedia.org/wiki/File:Three_software_development_patterns_mashed_together.svg
https://en.wikipedia.org/wiki/File:Three_software_development_patterns_mashed_together.svg
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Arms_industry
https://en.wikipedia.org/wiki/Process_model
https://en.wikipedia.org/wiki/ISO/IEC_12207
https://en.wikipedia.org/wiki/Project_management
https://en.wikipedia.org/wiki/List_of_failed_and_overbudget_custom_software_projects
https://en.wikipedia.org/wiki/Software_Engineering_Process_Group
https://en.wikipedia.org/wiki/Integrated_development_environment
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Programming_style
https://en.wikipedia.org/wiki/Software_libraries
https://en.wikipedia.org/wiki/Software_framework
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=14
https://en.wikipedia.org/wiki/Computer-aided_software_engineering
https://en.wikipedia.org/wiki/List_of_software_development_philosophies
https://en.wikipedia.org/wiki/Outline_of_software_engineering
https://en.wikipedia.org/wiki/OpenUP
https://en.wikipedia.org/wiki/Project_management
https://en.wikipedia.org/wiki/Software_development
https://en.wikipedia.org/wiki/Software_development_effort_estimation
https://en.wikipedia.org/wiki/Software_release_life_cycle
https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=15
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
http://www.cms.gov/Research-Statistics-Data-and-Systems/CMS-Information-Technology/XLC/Downloads/SelectingDevelopmentApproach.pdf
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
http://ieeexplore.ieee.org/document/7140652/?arnumber=7140652
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.1109/MS.2015.87
https://en.wikipedia.org/wiki/Software_development_process
https://www.researchgate.net/publication/283527859_Systematic_Literature_Review_of_Agile_Scalability_for_Large_Scale_Projects?
https://en.wikipedia.org/wiki/International_Standard_Serial_Number
https://www.worldcat.org/issn/2156-5570
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.14569/IJACSA.2015.060908
https://en.wikipedia.org/wiki/Software_development_process
https://www.thoughtworks.com/continuous-integration
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Grady_Booch
https://books.google.com/books?id=w5VQAAAAMAAJ&q=continuous+integration+inauthor:grady+inauthor:booch&dq=continuous+integration+inauthor:grady+inauthor:booch&hl=en&sa=X&ei=0_TxU6TqIMOZyASJ3ICYCQ&ved=0CEQQ6AEwAg
https://en.wikipedia.org/wiki/Benjamin_Cummings
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/9780805300918
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Whitten,_Jeffrey_L.
https://en.wikipedia.org/wiki/Lonnie_D._Bentley
https://en.wikipedia.org/wiki/Kevin_C._Dittman
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/0-256-19906-X
https://en.wikipedia.org/wiki/Software_development_process
http://cartoon.iguw.tuwien.ac.at/fit/fit01/wasserfall/entstehung.html
https://en.wikipedia.org/wiki/Software_development_process
http://www.idinews.com/waterfall.html
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Barry_Boehm
http://doi.acm.org/10.1145/12944.12948
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
http://ieeexplore.ieee.org/document/7548916/
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.1109/MS.2016.117
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit&section=16
https://commons.wikimedia.org/wiki/Category:Software_development_methodology
http://www.cms.gov/Research-Statistics-Data-and-Systems/CMS-Information-Technology/XLC/Downloads/SelectingDevelopmentApproach.pdf
http://l3d.cs.colorado.edu/~gerhard/papers/isfst2001.pdf
https://www.agilealliance.org/agile101/subway-map-to-agile-practices/
https://en.wikipedia.org/wiki/Template:Software_engineering
https://en.wikipedia.org/wiki/Template_talk:Software_engineering
https://en.wikipedia.org/w/index.php?title=Template:Software_engineering&action=edit
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Computer_programming
https://en.wikipedia.org/wiki/Requirements_engineering
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Software_testing
https://en.wikipedia.org/wiki/Systems_analysis
https://en.wikipedia.org/wiki/Formal_methods
https://en.wikipedia.org/wiki/Data_modeling
https://en.wikipedia.org/wiki/Enterprise_architecture
https://en.wikipedia.org/wiki/Functional_specification
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Orthogonality_(programming)
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Software
https://en.wikipedia.org/wiki/Software_archaeology
https://en.wikipedia.org/wiki/Software_architecture
https://en.wikipedia.org/wiki/Software_configuration_management
https://en.wikipedia.org/wiki/Software_quality
https://en.wikipedia.org/wiki/Software_quality_assurance
https://en.wikipedia.org/wiki/Software_verification_and_validation
https://en.wikipedia.org/wiki/Structured_analysis
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Aspect-oriented_software_development
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Ontology_(information_science)
https://en.wikipedia.org/wiki/Service-oriented_architecture
https://en.wikipedia.org/wiki/Systems_development_life_cycle
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Enterprise_Unified_Process
https://en.wikipedia.org/wiki/Executable_UML
https://en.wikipedia.org/wiki/Incremental_build_model
https://en.wikipedia.org/wiki/Iterative_and_incremental_development
https://en.wikipedia.org/wiki/Software_prototyping
https://en.wikipedia.org/wiki/Rapid_application_development
https://en.wikipedia.org/wiki/Unified_Process
https://en.wikipedia.org/wiki/Scrum_(software_development)
https://en.wikipedia.org/wiki/Spiral_model
https://en.wikipedia.org/wiki/V-Model_(software_development)
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Extreme_programming
https://en.wikipedia.org/wiki/ISO/IEC_15504
https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration
https://en.wikipedia.org/wiki/Data_model
https://en.wikipedia.org/wiki/Entity–relationship_model
https://en.wikipedia.org/wiki/Function_model
https://en.wikipedia.org/wiki/Information_model
https://en.wikipedia.org/wiki/Metamodeling
https://en.wikipedia.org/wiki/Object_model
https://en.wikipedia.org/wiki/Systems_modeling
https://en.wikipedia.org/wiki/View_model
https://en.wikipedia.org/wiki/IDEF
https://en.wikipedia.org/wiki/Unified_Modeling_Language
https://en.wikipedia.org/wiki/Universal_Systems_Language
https://en.wikipedia.org/wiki/Systems_Modeling_Language
https://en.wikipedia.org/wiki/Victor_Basili
https://en.wikipedia.org/wiki/Kent_Beck
https://en.wikipedia.org/wiki/Grady_Booch
https://en.wikipedia.org/wiki/Fred_Brooks
https://en.wikipedia.org/wiki/Barry_Boehm
https://en.wikipedia.org/wiki/Peter_Chen
https://en.wikipedia.org/wiki/Danese_Cooper
https://en.wikipedia.org/wiki/Ward_Cunningham
https://en.wikipedia.org/wiki/Tom_DeMarco
https://en.wikipedia.org/wiki/Edsger_W._Dijkstra
https://en.wikipedia.org/wiki/Delores_M._Etter
https://en.wikipedia.org/wiki/Martin_Fowler
https://en.wikipedia.org/wiki/Adele_Goldstine
https://en.wikipedia.org/wiki/Margaret_Hamilton_(scientist)
https://en.wikipedia.org/wiki/Tony_Hoare
https://en.wikipedia.org/wiki/Lois_Haibt
https://en.wikipedia.org/wiki/Mary_Jean_Harrold
https://en.wikipedia.org/wiki/Grace_Hopper
https://en.wikipedia.org/wiki/Watts_Humphrey
https://en.wikipedia.org/wiki/Michael_A._Jackson
https://en.wikipedia.org/wiki/Ivar_Jacobson
https://en.wikipedia.org/wiki/Alan_Kay
https://en.wikipedia.org/wiki/Nancy_Leveson
https://en.wikipedia.org/wiki/Stephen_J._Mellor
https://en.wikipedia.org/wiki/Bertrand_Meyer
https://en.wikipedia.org/wiki/David_Parnas
https://en.wikipedia.org/wiki/Trygve_Reenskaug
https://en.wikipedia.org/wiki/Winston_W._Royce
https://en.wikipedia.org/wiki/James_Rumbaugh
https://en.wikipedia.org/wiki/Mary_Shaw_(computer_scientist)
https://en.wikipedia.org/wiki/Peri_Tarr
https://en.wikipedia.org/wiki/Elaine_Weyuker
https://en.wikipedia.org/wiki/Niklaus_Wirth
https://en.wikipedia.org/wiki/Edward_Yourdon
https://en.wikipedia.org/wiki/Computer_science
https://en.wikipedia.org/wiki/Computer_engineering
https://en.wikipedia.org/wiki/Project_management
https://en.wikipedia.org/wiki/Risk_management
https://en.wikipedia.org/wiki/Systems_engineering
https://en.wikipedia.org/wiki/Category:Software_engineering
https://commons.wikimedia.org/wiki/Software_engineering
https://en.wikipedia.org/w/index.php?title=Software_development_process&oldid=807639363
https://en.wikipedia.org/wiki/Help:Category
https://en.wikipedia.org/wiki/Category:Software_development_process
https://en.wikipedia.org/wiki/Category:Methodology
https://en.wikipedia.org/wiki/Category:Software_engineering
https://en.wikipedia.org/wiki/Category:Articles_needing_cleanup_from_July_2017
https://en.wikipedia.org/wiki/Category:All_pages_needing_cleanup
https://en.wikipedia.org/wiki/Category:Cleanup_tagged_articles_with_a_reason_field_from_July_2017
https://en.wikipedia.org/wiki/Category:Wikipedia_pages_needing_cleanup_from_July_2017
https://en.wikipedia.org/wiki/Category:Articles_needing_additional_references_from_December_2010
https://en.wikipedia.org/wiki/Category:All_articles_needing_additional_references
https://en.wikipedia.org/wiki/Category:All_articles_with_unsourced_statements
https://en.wikipedia.org/wiki/Category:Articles_with_unsourced_statements_from_February_2017
https://en.wikipedia.org/wiki/Special:MyTalk
https://en.wikipedia.org/wiki/Special:MyContributions
https://en.wikipedia.org/w/index.php?title=Special:CreateAccount&returnto=Software+development+process
https://en.wikipedia.org/w/index.php?title=Special:UserLogin&returnto=Software+development+process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Talk:Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=edit
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=history
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Portal:Contents
https://en.wikipedia.org/wiki/Portal:Featured_content
https://en.wikipedia.org/wiki/Portal:Current_events
https://en.wikipedia.org/wiki/Special:Random
https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&utm_medium=sidebar&utm_campaign=C13_en.wikipedia.org&uselang=en
https://shop.wikimedia.org
https://en.wikipedia.org/wiki/Help:Contents
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:Community_portal
https://en.wikipedia.org/wiki/Special:RecentChanges
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://en.wikipedia.org/wiki/Special:WhatLinksHere/Software_development_process
https://en.wikipedia.org/wiki/Special:RecentChangesLinked/Software_development_process
https://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard
https://en.wikipedia.org/wiki/Special:SpecialPages
https://en.wikipedia.org/w/index.php?title=Software_development_process&oldid=807639363
https://en.wikipedia.org/w/index.php?title=Software_development_process&action=info
https://www.wikidata.org/wiki/Special:EntityPage/Q2904257
https://en.wikipedia.org/w/index.php?title=Special:CiteThisPage&page=Software_development_process&id=807639363
https://en.wikipedia.org/w/index.php?title=Special:Book&bookcmd=book_creator&referer=Software+development+process
https://en.wikipedia.org/w/index.php?title=Special:ElectronPdf&page=Software+development+process&action=show-download-screen
https://en.wikipedia.org/w/index.php?title=Software_development_process&printable=yes
https://commons.wikimedia.org/wiki/Category:Software_development_methodology
https://ar.wikipedia.org/wiki/عملية_تطوير_البرمجيات
https://ca.wikipedia.org/wiki/Procés_de_desenvolupament_de_programari
https://cs.wikipedia.org/wiki/Proces_vývoje_softwaru
https://da.wikipedia.org/wiki/Softwareudviklingsproces
https://de.wikipedia.org/wiki/Vorgehensmodell_zur_Softwareentwicklung
https://el.wikipedia.org/wiki/Διαδικασία_ανάπτυξης_λογισμικού
https://es.wikipedia.org/wiki/Proceso_para_el_desarrollo_de_software
https://fa.wikipedia.org/wiki/فرایند_توسعه_نرم‌افزار
https://gl.wikipedia.org/wiki/Ciclo_de_desenvolvemento
https://ko.wikipedia.org/wiki/소프트웨어_개발_프로세스
https://hi.wikipedia.org/wiki/सॉफ्टवेयर_डेवलपमेंट_प्रक्रिया_डेवेलपमेंट
https://id.wikipedia.org/wiki/Proses_pengembangan_perangkat_lunak
https://it.wikipedia.org/wiki/Ciclo_di_vita_del_software
https://he.wikipedia.org/wiki/מתודולוגיית_פיתוח_תוכנה
https://jv.wikipedia.org/wiki/Prosès_pangembangan_piranti_alus_komputer
https://lt.wikipedia.org/wiki/Programų_kūrimo_gyvavimo_ciklo_modelis
https://nl.wikipedia.org/wiki/Softwareontwikkelmethode
https://ja.wikipedia.org/wiki/ソフトウェア開発工程
https://no.wikipedia.org/wiki/Programvareutviklingsprosess
https://uz.wikipedia.org/wiki/Dasturiy_taʼminot_ishlab_chiqish_jarayoni
https://pl.wikipedia.org/wiki/Proces_wytwórczy_oprogramowania
https://pt.wikipedia.org/wiki/Processo_de_desenvolvimento_de_software
https://ru.wikipedia.org/wiki/Процесс_разработки_программного_обеспечения
https://sq.wikipedia.org/wiki/Procesi_i_zhvillimit_të_softuerit
https://ckb.wikipedia.org/wiki/پرۆسەی_داھێنانی_نەرمامێر
https://sr.wikipedia.org/wiki/Развојни_циклус_софтвера
https://sv.wikipedia.org/wiki/Programutvecklingsmetodik
https://ta.wikipedia.org/wiki/மென்பொருள்_உருவாக்க_செயல்முறை
https://th.wikipedia.org/wiki/การพัฒนาซอฟต์แวร์
https://tr.wikipedia.org/wiki/Yazılım_geliştirme_süreci
https://uk.wikipedia.org/wiki/Процес_розробки_програмного_забезпечення
https://vi.wikipedia.org/wiki/Quy_trình_phát_triển_phần_mềm
https://zh.wikipedia.org/wiki/软件开发过程
https://www.wikidata.org/wiki/Special:EntityPage/Q2904257
https://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License
https://creativecommons.org/licenses/by-sa/3.0/
https://wikimediafoundation.org/wiki/Terms_of_Use
https://wikimediafoundation.org/wiki/Privacy_policy
https://www.wikimediafoundation.org/
https://wikimediafoundation.org/wiki/Privacy_policy
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:General_disclaimer
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute
https://wikimediafoundation.org/wiki/Cookie_statement
https://en.m.wikipedia.org/w/index.php?title=Software_development_process&mobileaction=toggle_view_mobile
https://wikimediafoundation.org/
https://www.mediawiki.org/
