https://en.wikipedia.org/wiki/Modeling_language
Modeling language - Wikipedia
A modeling language is any artificial language that can be used to express information or knowledge or systems in a structure that is defined by a consistent set of rules. The rules are used for interpretation...
modeling language from wikipedia the free encyclopedia jump to navigation search a modeling language is any artificial language that can be used to express information or knowledge or systems in a structure that is defined by a consistent set of rules the rules are used for interpretation of the meaning of components in the structure contents 1 overview 2 type of modeling languages 21 graphical types 22 textual types 23 more specific types 231 algebraic 232 behavioral 233 disciplinespecific 234 domainspecific 235 frameworkspecific 236 information and knowledge modelling 237 objectoriented 238 virtual reality 239 others 3 applications 4 quality 41 framework for evaluation 411 domain appropriateness 412 participant appropriateness 413 modeller appropriateness 414 comprehensibility appropriateness 415 tool appropriateness 416 organizational appropriateness 5 see also 6 references 7 external links 8 further reading overviewedit a modeling language can be graphical or textual1 graphical modeling languages use a diagram technique with named symbols that represent concepts and lines that connect the symbols and represent relationships and various other graphical notation to represent constraints textual modeling languages may use standardized keywords accompanied by parameters or natural language terms and phrases to make computerinterpretable expressions an example of a graphical modeling language and a corresponding textual modeling language is express not all modeling languages are executable and for those that are the use of them doesnt necessarily mean that programmers are no longer required on the contrary executable modeling languages are intended to amplify the productivity of skilled programmers so that they can address more challenging problems such as parallel computing and distributed systems a large number of modeling languages appear in the literature type of modeling languagesedit graphical typesedit example of graphical modeling languages in the field of computer science project management and systems engineering behavior trees are a formal graphical modeling language used primarily in systems and software engineering commonly used to unambiguously represent the hundreds or even thousands of natural language requirements that are typically used to express the stakeholder needs for a largescale softwareintegrated system business process modeling notation bpmn and the xml form bpml is an example of a process modeling language ck theory consists of a modeling language for design processes drakon is a generalpurpose algorithmic modeling language for specifying softwareintensive systems a schematic representation of an algorithm or a stepwise process and a family of programming languages express and expressg iso 1030311 is an international standard generalpurpose data modeling language extended enterprise modeling language eeml is commonly used for business process modeling across a number of layers flowchart is a schematic representation of an algorithm or a stepwise process fundamental modeling concepts fmc modeling language for softwareintensive systems idef is a family of modeling languages which include idef0 for functional modeling idef1x for information modeling idef3 for business process modeling idef4 for objectoriented design and idef5 for modeling ontologies jackson structured programming jsp is a method for structured programming based on correspondences between data stream structure and program structure lepus3 is an objectoriented visual design description language and a formal specification language that is suitable primarily for modeling large objectoriented java c c programs and design patterns objectrole modeling orm in the field of software engineering is a method for conceptual modeling and can be used as a tool for information and rules analysis petri nets use variations on exactly one diagramming technique and topology namely the bipartite graph the simplicity of its basic user interface easily enabled extensive tool support over the years particularly in the areas of model checking graphically oriented simulation and software verification southbeach notation is a visual modeling language used to describe situations in terms of agents that are considered useful or harmful from the modelers perspective the notation shows how the agents interact with each other and whether this interaction improves or worsens the situation specification and description language sdl is a specification language targeted at the unambiguous specification and description of the behavior of reactive and distributed systems sysml is a domainspecific modeling language for systems engineering that is defined as a uml profile customization unified modeling language uml is a generalpurpose modeling language that is an industry standard for specifying softwareintensive systems uml 20 the current version supports thirteen different diagram techniques and has widespread tool support serviceoriented modeling framework somf is a holistic language for designing enterprise and application level architecture models in the space of enterprise architecture virtualization serviceoriented architecture soa cloud computing and more2 architecture description language adl is a language used to describe and represent the systems architecture of a system aadl aadl is a modeling language that supports early and repeated analyses of a systems architecture with respect to performancecritical properties through an exetendable notation a tool framework and precisely defined semantics examples of graphical modeling languages in other fields of science eastadl is a domainspecific modeling language dedicated to automotive system design energy systems language esl a language that aims to model ecological energetics global economics textual typesedit information models can also be expressed in formalized natural languages such as gellish3 gellish has natural language variants such as gellish formal english and gellish formal dutch gellish formeel nederlands etc gellish formal english is an information representation language or semantic modeling language that is defined in the gellish english dictionarytaxonomy which has the form of a taxonomyontology similarly for dutch gellish formal english is not only suitable to express knowledge requirements and dictionaries taxonomies and ontologies but also information about individual things all that information is expressed in one language and therefore it can all be integrated independent of the question whether it is stored in central or distributed or in federated databases information models in gellish formal english consists of collections of gellish formal english expressions that use natural language terms and formalized phrases for example a geographic information model might consist of a number of gellish formal english expressions such as the eiffel tower is located in paris paris is classified as a city whereas information requirements and knowledge can be expressed for example as follows tower shall be located in a geographical area city is a kind of geographical area such gellish formal english expressions use names of concepts such as city and phrases that represent relation types such as is located in and is classified as a that should be selected from the gellish english dictionarytaxonomy or of your own domain dictionary the gellish english dictionarytaxonomy enables the creation of semantically rich information models because the dictionary contains more than 600 standard relation types and contains definitions of more than 40000 concepts an information model in gellish can express facts or make statements queries and answers more specific typesedit in the field of computer science recently more specific types of modeling languages have emerged algebraicedit algebraic modeling languages aml are highlevel programming languages for describing and solving high complexity problems for large scale mathematical computation ie large scale optimization type problems one particular advantage of amls like aimms ampl gams lpl mpl opl and optimj is the similarity of its syntax to the mathematical notation of optimization problems this allows for a very concise and readable definition of problems in the domain of optimization which is supported by certain language elements like sets indices algebraic expressions powerful sparse index and data handling variables constraints with arbitrary names the algebraic formulation of a model does not contain any hints how to process it behavioraledit behavioral languages are designed to describe the observable behavior of complex systems consisting of components that execute concurrently these languages focus on the description of key concepts such as concurrency nondeterminism synchronization and communication the semantic foundations of behavioral languages are process calculus or process algebra disciplinespecificedit a disciplinespecific modeling dspm language is focused on deliverables affiliated with a specific software development life cycle stage therefore such language offers a distinct vocabulary syntax and notation for each stage such as discovery analysis design architecture contraction etc for example for the analysis phase of a project the modeler employs specific analysis notation to deliver an analysis proposition diagram during the design phase however logical design notation is used to depict relationship between software entities in addition the disciplinespecific modeling language best practices does not preclude practitioners from combining the various notations in a single diagram domainspecificedit domainspecific modeling dsm is a software engineering methodology for designing and developing systems most often it systems such as computer software it involves systematic use of a graphical domainspecific language dsl to represent the various facets of a system dsm languages tend to support higherlevel abstractions than generalpurpose modeling languages so they require less effort and fewer lowlevel details to specify a given system frameworkspecificedit a frameworkspecific modeling language fsml is a kind of domainspecific modeling language which is designed for an objectoriented application framework fsmls define frameworkprovided abstractions as fsml concepts and decompose the abstractions into features the features represent implementation steps or choices a fsml concept can be configured by selecting features and providing values for features such a concept configuration represents how the concept should be implemented in the code in other words concept configuration describes how the framework should be completed in order to create the implementation of the concept information and knowledge modellingedit linked data and ontology engineering require host languages to represent entities and the relations between them constraints between the properties of entities and relations and metadata attributes jsonld and rdf are two major and semantically almost equivalent languages in this context primarily because they support statement reification and contextualisation which are essential properties to support the higherorder logic needed to reason about models model transformation is a common example of such reasoning objectorientededit object modeling language are modeling languages based on a standardized set of symbols and ways of arranging them to model part of an object oriented software design or system design some organizations use them extensively in combination with a software development methodology to progress from initial specification to an implementation plan and to communicate that plan to an entire team of developers and stakeholders because a modeling language is visual and at a higherlevel of abstraction than code using models encourages the generation of a shared vision that may prevent problems of differing interpretation later in development often software modeling tools are used to construct these models which may then be capable of automatic translation to code virtual realityedit virtual reality modeling language vrml before 1995 known as the virtual reality markup language is a standard file format for representing 3dimensional 3d interactive vector graphics designed particularly with the world wide web in mind othersedit architecture description language face modeling language generative modelling language java modeling language promela rebeca modeling language service modeling language web services modeling language x3d applicationsedit various kinds of modeling languages are applied in different disciplines including computer science information management business process modeling software engineering and systems engineering modeling languages can be used to specify system requirements structures and behaviors modeling languages are intended to be used to precisely specify systems so that stakeholders eg customers operators analysts designers can better understand the system being modeled the more mature modeling languages are precise consistent and executable informal diagramming techniques applied with drawing tools are expected to produce useful pictorial representations of system requirements structures and behaviors but not much else executable modeling languages applied with proper tool support however are expected to automate system verification and validation simulation and code generation from the same representations qualityedit a review of modelling languages is essential to be able to assign which languages are appropriate for different modelling settings in the term settings we include stakeholders domain and the knowledge connected assessing the language quality is a means that aims to achieve better models framework for evaluationedit here language quality is stated in accordance with the sequal framework for quality of models developed by krogstie sindre and lindland 2003 since this is a framework that connects the language quality to a framework for general model quality five areas are used in this framework to describe language quality and these are supposed to express both the conceptual as well as the visual notation of the language we will not go into a thoroughly explanation of the underlying quality framework of models but concentrate on the areas used to explain the language quality framework domain appropriatenessedit the framework states the ability to represent the domain as domain appropriateness the statement appropriateness can be a bit vague but in this particular context it means able to express you should ideally only be able to express things that are in the domain but be powerful enough to include everything that is in the domain this requirement might seem a bit strict but the aim is to get a visually expressed model which includes everything relevant to the domain and excludes everything not appropriate for the domain to achieve this the language has to have a good distinction of which notations and syntaxes that are advantageous to present participant appropriatenessedit to evaluate the participant appropriateness we try to identify how well the language expresses the knowledge held by the stakeholders this involves challenges since a stakeholders knowledge is subjective the knowledge of the stakeholder is both tacit and explicit both types of knowledge are of dynamic character in this framework only the explicit type of knowledge is taken into account the language should to a large extent express all the explicit knowledge of the stakeholders relevant to the domain modeller appropriatenessedit last paragraph stated that knowledge of the stakeholders should be presented in a good way in addition it is imperative that the language should be able to express all possible explicit knowledge of the stakeholders no knowledge should be left unexpressed due to lacks in the language comprehensibility appropriatenessedit comprehensibility appropriateness makes sure that the social actors understand the model due to a consistent use of the language to achieve this the framework includes a set of criteria the general importance that these express is that the language should be flexible easy to organize and easy to distinguish different parts of the language internally as well as from other languages in addition to this the goal should be as simple as possible and that each symbol in the language has a unique representation tool appropriatenessedit to ensure that the domain actually modelled is usable for analyzing and further processing the language has to ensure that it is possible to reason in an automatic way to achieve this it has to include formal syntax and semantics another advantage by formalizing is the ability to discover errors in an early stage it is not always that the language best fitted for the technical actors is the same as for the social actors organizational appropriatenessedit the language used is appropriate for the organizational context eg that the language is standardized within the organization or that it is supported by tools that are chosen as standard in the organization see alsoedit analogical models anthropomorphism metamodeling modelbased testing mbt modeldriven architecture modeldriven engineering mde modeling perspective ontology language scientific modelling serviceoriented modeling visual modeling visual programming language referencesedit xiao he 2007 a metamodel for the notation of graphical modeling languages in computer software and applications conference 2007 compsac 2007 vol 1 31st annual international volume 1 issue 24–27 july 2007 pp 219224 bell michael 2008 introduction to serviceoriented modeling serviceoriented modeling service analysis design and architecture wiley sons isbn 9780470141113  andries van renssen gellish a generic extensible ontological language delft university of technology 2005 external linksedit wikimedia commons has media related to modeling languages fundamental modeling concepts software modeling languages portal bip incremental componentbased construction of realtime systems gellish formal english further readingedit john krogstie 2003 evaluating uml using a generic quality framework sintef telecom andinformatics and idi ntnu norway krogstie and sølvsberg 2003 information systems engineering conceptual modeling in a quality perspective institute of computer and information sciences anna gunhild nysetvold and john krogstie 2005 assessing business processing modeling languages using a generic quality framework institute of computer and information sciences v t e software engineering fields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification and validation structured analysis orientations agile aspectoriented object orientation ontology service orientation sdlc models developmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model vmodel waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml usl sysml software engineers victor basili kent beck grady booch fred brooks barry boehm peter chen danese cooper ward cunningham tom demarco edsger w dijkstra delores m etter martin fowler adele goldstine margaret hamilton c a r hoare lois haibt mary jean harrold grace hopper watts humphrey michael a jackson ivar jacobson alan kay nancy leveson stephen j mellor bertrand meyer david parnas trygve reenskaug winston w royce james rumbaugh mary shaw peri tarr elaine weyuker niklaus wirth edward yourdon related fields computer science computer engineering project management risk management systems engineering category commons v t e types of сomputer languages types architecture description hardware description knowledge representation markup modeling programming language query specification stylesheet transformation see also categorylists of computer languages categorylists of programming languages list of programming languages by type retrieved from httpsenwikipediaorgwindexphptitlemodelinglanguageoldid798021686 categories scientific modeling specific models specification languages navigation menu personal tools not logged in talk contributions create account log in namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate to wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page printexport create a book download as pdf printable version in other projects wikimedia commons languages العربية deutsch français italiano nederlands 日本語 українська edit links this page was last edited on 30 august 2017 at 1431 text is available under the creative commons attributionsharealike license additional terms may apply by using this site you agree to the terms of use and privacy policy wikipedia® is a registered trademark of the wikimedia foundation inc a nonprofit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Artificial_language
https://en.wikipedia.org/wiki/Information
https://en.wikipedia.org/wiki/Knowledge
https://en.wikipedia.org/wiki/System
https://en.wikipedia.org/wiki/Structure
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=1
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Diagramming_technique
https://en.wikipedia.org/wiki/EXPRESS_(data_modeling_language)
https://en.wikipedia.org/wiki/Parallel_computing
https://en.wikipedia.org/wiki/Distributed_system
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=2
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=3
https://en.wikipedia.org/wiki/Behavior_Trees
https://en.wikipedia.org/wiki/Systems_engineering
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Natural_language
https://en.wikipedia.org/wiki/Project_stakeholder
https://en.wikipedia.org/wiki/Business_Process_Modeling_Notation
https://en.wikipedia.org/wiki/XML
https://en.wikipedia.org/wiki/Process_Modeling
https://en.wikipedia.org/wiki/C-K_theory
https://en.wikipedia.org/wiki/DRAKON
https://en.wikipedia.org/wiki/General-purpose_modeling
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/EXPRESS_(data_modeling_language)
https://en.wikipedia.org/wiki/Data_modeling
https://en.wikipedia.org/wiki/Extended_Enterprise_Modeling_Language
https://en.wikipedia.org/wiki/Flowchart
https://en.wikipedia.org/wiki/Fundamental_Modeling_Concepts
https://en.wikipedia.org/wiki/IDEF
https://en.wikipedia.org/wiki/IDEF0
https://en.wikipedia.org/wiki/IDEF1X
https://en.wikipedia.org/wiki/IDEF3
https://en.wikipedia.org/wiki/IDEF4
https://en.wikipedia.org/wiki/IDEF5
https://en.wikipedia.org/wiki/Jackson_Structured_Programming
https://en.wikipedia.org/wiki/Lepus3
https://en.wikipedia.org/wiki/Object-oriented
https://en.wikipedia.org/wiki/Formal_specification
https://en.wikipedia.org/wiki/Java_(programming_language)
https://en.wikipedia.org/wiki/C++
https://en.wikipedia.org/wiki/C_Sharp_(programming_language)
https://en.wikipedia.org/wiki/Design_patterns
https://en.wikipedia.org/wiki/Object-Role_Modeling
https://en.wikipedia.org/wiki/Petri_net
https://en.wikipedia.org/wiki/Bipartite_graph
https://en.wikipedia.org/w/index.php?title=Southbeach_Notation&action=edit&redlink=1
https://en.wikipedia.org/wiki/Specification_and_Description_Language
https://en.wikipedia.org/wiki/SysML
https://en.wikipedia.org/wiki/Domain-Specific_Modeling
https://en.wikipedia.org/wiki/Systems_engineering
https://en.wikipedia.org/wiki/Unified_Modeling_Language
https://en.wikipedia.org/wiki/General-purpose_modeling
https://en.wikipedia.org/wiki/Service-oriented_modeling
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Architecture_description_language
https://en.wikipedia.org/wiki/Systems_architecture
https://en.wikipedia.org/wiki/System
https://en.wikipedia.org/wiki/AADL
https://en.wikipedia.org/wiki/EAST-ADL
https://en.wikipedia.org/wiki/Domain-Specific_Modeling
https://en.wikipedia.org/wiki/Energy_Systems_Language
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=4
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Gellish_English
https://nl.wikipedia.org/wiki/Gellish_Nederlands
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=5
https://en.wikipedia.org/wiki/Computer_science
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=6
https://en.wikipedia.org/wiki/Algebraic_modeling_language
https://en.wikipedia.org/wiki/AIMMS
https://en.wikipedia.org/wiki/AMPL
https://en.wikipedia.org/wiki/General_Algebraic_Modeling_System
https://en.wikipedia.org/w/index.php?title=Linear_Programming_Language&action=edit&redlink=1
https://en.wikipedia.org/wiki/OPL_Development_Studio
https://en.wikipedia.org/wiki/OptimJ
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=7
https://en.wikipedia.org/wiki/Process_calculus
https://en.wikipedia.org/wiki/Process_algebra
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=8
https://en.wikipedia.org/wiki/Service-oriented_modeling
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=9
https://en.wikipedia.org/wiki/Domain-specific_modeling
https://en.wikipedia.org/wiki/Domain-specific_language
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=10
https://en.wikipedia.org/wiki/Framework-specific_modeling_language
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=11
https://en.wikipedia.org/wiki/Linked_data
https://en.wikipedia.org/wiki/Ontology_engineering
https://en.wikipedia.org/wiki/Entity–relationship_model
https://en.wikipedia.org/wiki/Constraint_(mathematics)
https://en.wikipedia.org/wiki/Metadata
https://en.wikipedia.org/wiki/Attribute_(computing)
https://en.wikipedia.org/wiki/JSON-LD
https://en.wikipedia.org/wiki/Resource_Description_Framework
https://en.wikipedia.org/wiki/Resource_Description_Framework
https://en.wikipedia.org/wiki/Higher-order_logic
https://en.wikipedia.org/wiki/Model_transformation
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=12
https://en.wikipedia.org/wiki/Object_modeling_language
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=13
https://en.wikipedia.org/wiki/VRML
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=14
https://en.wikipedia.org/wiki/Architecture_Description_Language
https://en.wikipedia.org/wiki/Face_Modeling_Language
https://en.wikipedia.org/wiki/Generative_Modelling_Language
https://en.wikipedia.org/wiki/Java_Modeling_Language
https://en.wikipedia.org/wiki/Promela
https://en.wikipedia.org/wiki/Rebeca_Modeling_Language
https://en.wikipedia.org/wiki/Service_Modeling_Language
https://en.wikipedia.org/wiki/Web_Services_Modeling_Language
https://en.wikipedia.org/wiki/X3D
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=15
https://en.wikipedia.org/wiki/Computer_science
https://en.wikipedia.org/wiki/Information_management
https://en.wikipedia.org/wiki/Business_process_modeling
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Systems_engineering
https://en.wikipedia.org/wiki/Verification_and_validation
https://en.wikipedia.org/wiki/Simulation
https://en.wikipedia.org/wiki/Automatic_programming
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=16
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=17
https://en.wikipedia.org/wiki/SEQUAL_framework
https://en.wiktionary.org/wiki/conceptual
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=18
https://en.wikipedia.org/wiki/Syntax
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=19
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=20
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=21
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=22
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=23
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=24
https://en.wikipedia.org/wiki/Analogical_models
https://en.wikipedia.org/wiki/Anthropomorphism
https://en.wikipedia.org/wiki/Metamodeling
https://en.wikipedia.org/wiki/Model-based_testing
https://en.wikipedia.org/wiki/Model-driven_architecture
https://en.wikipedia.org/wiki/Model-driven_engineering
https://en.wikipedia.org/wiki/Modeling_perspective
https://en.wikipedia.org/wiki/Ontology_language
https://en.wikipedia.org/wiki/Scientific_modelling
https://en.wikipedia.org/wiki/Service-oriented_modeling
https://en.wikipedia.org/wiki/Visual_modeling
https://en.wikipedia.org/wiki/Visual_programming_language
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=25
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-0-470-14111-3
https://en.wikipedia.org/wiki/Modeling_language
http://www.gellish.net/downloads/file/10-phd-gellish-a-generic-extensible-ontological-language.html
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=26
https://commons.wikimedia.org/wiki/Category:Modeling_languages
http://www.fmc-modeling.org/
http://modeling-languages.com/
http://www-verimag.imag.fr/~async/bip.php
http://www.gellish.net/
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit&section=27
https://en.wikipedia.org/wiki/John_Krogstie
http://www.igi-global.com/chapter/evaluating-uml-using-generic-quality/30534
https://en.wikipedia.org/wiki/John_Krogstie
http://ftp.informatik.rwth-aachen.de/Publications/CEUR-WS/Vol-363/paper15.pdf
https://en.wikipedia.org/wiki/Template:Software_engineering
https://en.wikipedia.org/wiki/Template_talk:Software_engineering
https://en.wikipedia.org/w/index.php?title=Template:Software_engineering&action=edit
https://en.wikipedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Computer_programming
https://en.wikipedia.org/wiki/Requirements_engineering
https://en.wikipedia.org/wiki/Software_deployment
https://en.wikipedia.org/wiki/Software_design
https://en.wikipedia.org/wiki/Software_maintenance
https://en.wikipedia.org/wiki/Software_testing
https://en.wikipedia.org/wiki/Systems_analysis
https://en.wikipedia.org/wiki/Formal_methods
https://en.wikipedia.org/wiki/Data_modeling
https://en.wikipedia.org/wiki/Enterprise_architecture
https://en.wikipedia.org/wiki/Functional_specification
https://en.wikipedia.org/wiki/Orthogonality_(programming)
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Software
https://en.wikipedia.org/wiki/Software_archaeology
https://en.wikipedia.org/wiki/Software_architecture
https://en.wikipedia.org/wiki/Software_configuration_management
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_development_process
https://en.wikipedia.org/wiki/Software_quality
https://en.wikipedia.org/wiki/Software_quality_assurance
https://en.wikipedia.org/wiki/Software_verification_and_validation
https://en.wikipedia.org/wiki/Structured_analysis
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Aspect-oriented_software_development
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/wiki/Ontology_(information_science)
https://en.wikipedia.org/wiki/Service-oriented_architecture
https://en.wikipedia.org/wiki/Systems_development_life_cycle
https://en.wikipedia.org/wiki/Agile_software_development
https://en.wikipedia.org/wiki/Enterprise_Unified_Process
https://en.wikipedia.org/wiki/Executable_UML
https://en.wikipedia.org/wiki/Incremental_build_model
https://en.wikipedia.org/wiki/Iterative_and_incremental_development
https://en.wikipedia.org/wiki/Software_prototyping
https://en.wikipedia.org/wiki/Rapid_application_development
https://en.wikipedia.org/wiki/Unified_Process
https://en.wikipedia.org/wiki/Scrum_(software_development)
https://en.wikipedia.org/wiki/Spiral_model
https://en.wikipedia.org/wiki/V-Model_(software_development)
https://en.wikipedia.org/wiki/Waterfall_model
https://en.wikipedia.org/wiki/Extreme_programming
https://en.wikipedia.org/wiki/ISO/IEC_15504
https://en.wikipedia.org/wiki/Capability_Maturity_Model_Integration
https://en.wikipedia.org/wiki/Data_model
https://en.wikipedia.org/wiki/Entity–relationship_model
https://en.wikipedia.org/wiki/Function_model
https://en.wikipedia.org/wiki/Information_model
https://en.wikipedia.org/wiki/Metamodeling
https://en.wikipedia.org/wiki/Object_model
https://en.wikipedia.org/wiki/Systems_modeling
https://en.wikipedia.org/wiki/View_model
https://en.wikipedia.org/wiki/IDEF
https://en.wikipedia.org/wiki/Unified_Modeling_Language
https://en.wikipedia.org/wiki/Universal_Systems_Language
https://en.wikipedia.org/wiki/Systems_Modeling_Language
https://en.wikipedia.org/wiki/Victor_Basili
https://en.wikipedia.org/wiki/Kent_Beck
https://en.wikipedia.org/wiki/Grady_Booch
https://en.wikipedia.org/wiki/Fred_Brooks
https://en.wikipedia.org/wiki/Barry_Boehm
https://en.wikipedia.org/wiki/Peter_Chen
https://en.wikipedia.org/wiki/Danese_Cooper
https://en.wikipedia.org/wiki/Ward_Cunningham
https://en.wikipedia.org/wiki/Tom_DeMarco
https://en.wikipedia.org/wiki/Edsger_W._Dijkstra
https://en.wikipedia.org/wiki/Delores_M._Etter
https://en.wikipedia.org/wiki/Martin_Fowler
https://en.wikipedia.org/wiki/Adele_Goldstine
https://en.wikipedia.org/wiki/Margaret_Hamilton_(scientist)
https://en.wikipedia.org/wiki/Tony_Hoare
https://en.wikipedia.org/wiki/Lois_Haibt
https://en.wikipedia.org/wiki/Mary_Jean_Harrold
https://en.wikipedia.org/wiki/Grace_Hopper
https://en.wikipedia.org/wiki/Watts_Humphrey
https://en.wikipedia.org/wiki/Michael_A._Jackson
https://en.wikipedia.org/wiki/Ivar_Jacobson
https://en.wikipedia.org/wiki/Alan_Kay
https://en.wikipedia.org/wiki/Nancy_Leveson
https://en.wikipedia.org/wiki/Stephen_J._Mellor
https://en.wikipedia.org/wiki/Bertrand_Meyer
https://en.wikipedia.org/wiki/David_Parnas
https://en.wikipedia.org/wiki/Trygve_Reenskaug
https://en.wikipedia.org/wiki/Winston_W._Royce
https://en.wikipedia.org/wiki/James_Rumbaugh
https://en.wikipedia.org/wiki/Mary_Shaw_(computer_scientist)
https://en.wikipedia.org/wiki/Peri_Tarr
https://en.wikipedia.org/wiki/Elaine_Weyuker
https://en.wikipedia.org/wiki/Niklaus_Wirth
https://en.wikipedia.org/wiki/Edward_Yourdon
https://en.wikipedia.org/wiki/Computer_science
https://en.wikipedia.org/wiki/Computer_engineering
https://en.wikipedia.org/wiki/Project_management
https://en.wikipedia.org/wiki/Risk_management
https://en.wikipedia.org/wiki/Systems_engineering
https://en.wikipedia.org/wiki/Category:Software_engineering
https://commons.wikimedia.org/wiki/Software_engineering
https://en.wikipedia.org/wiki/Template:Computer_language
https://en.wikipedia.org/wiki/Template_talk:Computer_language
https://en.wikipedia.org/w/index.php?title=Template:Computer_language&action=edit
https://en.wikipedia.org/wiki/Computer_language
https://en.wikipedia.org/wiki/Architecture_description_language
https://en.wikipedia.org/wiki/Hardware_description_language
https://en.wikipedia.org/wiki/Knowledge_representation_language
https://en.wikipedia.org/wiki/Markup_language
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Query_language
https://en.wikipedia.org/wiki/Specification_language
https://en.wikipedia.org/wiki/Style_sheet_language
https://en.wikipedia.org/wiki/Transformation_language
https://en.wikipedia.org/wiki/Category:Lists_of_computer_languages
https://en.wikipedia.org/wiki/Category:Lists_of_programming_languages
https://en.wikipedia.org/wiki/List_of_programming_languages_by_type
https://en.wikipedia.org/w/index.php?title=Modeling_language&oldid=798021686
https://en.wikipedia.org/wiki/Help:Category
https://en.wikipedia.org/wiki/Category:Scientific_modeling
https://en.wikipedia.org/wiki/Category:Specific_models
https://en.wikipedia.org/wiki/Category:Specification_languages
https://en.wikipedia.org/wiki/Special:MyTalk
https://en.wikipedia.org/wiki/Special:MyContributions
https://en.wikipedia.org/w/index.php?title=Special:CreateAccount&returnto=Modeling+language
https://en.wikipedia.org/w/index.php?title=Special:UserLogin&returnto=Modeling+language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/wiki/Talk:Modeling_language
https://en.wikipedia.org/wiki/Modeling_language
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=edit
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=history
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Portal:Contents
https://en.wikipedia.org/wiki/Portal:Featured_content
https://en.wikipedia.org/wiki/Portal:Current_events
https://en.wikipedia.org/wiki/Special:Random
https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&utm_medium=sidebar&utm_campaign=C13_en.wikipedia.org&uselang=en
https://shop.wikimedia.org
https://en.wikipedia.org/wiki/Help:Contents
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:Community_portal
https://en.wikipedia.org/wiki/Special:RecentChanges
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://en.wikipedia.org/wiki/Special:WhatLinksHere/Modeling_language
https://en.wikipedia.org/wiki/Special:RecentChangesLinked/Modeling_language
https://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard
https://en.wikipedia.org/wiki/Special:SpecialPages
https://en.wikipedia.org/w/index.php?title=Modeling_language&oldid=798021686
https://en.wikipedia.org/w/index.php?title=Modeling_language&action=info
https://www.wikidata.org/wiki/Special:EntityPage/Q1941921
https://en.wikipedia.org/w/index.php?title=Special:CiteThisPage&page=Modeling_language&id=798021686
https://en.wikipedia.org/w/index.php?title=Special:Book&bookcmd=book_creator&referer=Modeling+language
https://en.wikipedia.org/w/index.php?title=Special:ElectronPdf&page=Modeling+language&action=show-download-screen
https://en.wikipedia.org/w/index.php?title=Modeling_language&printable=yes
https://commons.wikimedia.org/wiki/Category:Modeling_languages
https://ar.wikipedia.org/wiki/لغة_نمذجة
https://de.wikipedia.org/wiki/Modellierungssprache
https://fr.wikipedia.org/wiki/Langage_de_modélisation
https://it.wikipedia.org/wiki/Linguaggio_di_modellazione
https://nl.wikipedia.org/wiki/Modelleertaal
https://ja.wikipedia.org/wiki/モデリング言語
https://uk.wikipedia.org/wiki/Мова_моделювання
https://www.wikidata.org/wiki/Special:EntityPage/Q1941921
https://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License
https://creativecommons.org/licenses/by-sa/3.0/
https://wikimediafoundation.org/wiki/Terms_of_Use
https://wikimediafoundation.org/wiki/Privacy_policy
https://www.wikimediafoundation.org/
https://wikimediafoundation.org/wiki/Privacy_policy
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:General_disclaimer
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute
https://wikimediafoundation.org/wiki/Cookie_statement
https://en.m.wikipedia.org/w/index.php?title=Modeling_language&mobileaction=toggle_view_mobile
https://wikimediafoundation.org/
https://www.mediawiki.org/
