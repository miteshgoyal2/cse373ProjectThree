https://en.wikipedia.org/wiki/Goto
Goto - Wikipedia
This article is about the programming statement in high-level languages. For other uses, see Goto (disambiguation). GoTo (goto, GOTO, GO TO or other case combinations, depending on the programming language)...
goto from wikipedia the free encyclopedia jump to navigation search this article is about the programming statement in highlevel languages for other uses see goto disambiguation goto goto goto go to or other case combinations depending on the programming language is a statement found in many computer programming languages it performs a oneway transfer of control to another line of code in contrast a function call normally returns control the jumpedto locations are usually identified using labels though some languages use line numbers at the machine code level a goto is a form of branch or jump statement many languages support the goto statement and many do not see language support the structured program theorem proved that the goto statement is not necessary to write programs some combination of the three programming constructs of sequence selectionchoice and repetitioniteration are sufficient for any computation that can be performed by a turing machine with the caveat that code duplication and additional variables may need to be introduced1 in the past there was considerable debate in academia and industry on the merits of the use of goto statements use of goto was formerly common but since the advent of structured programming in the 1960s and 1970s its use has declined significantly the primary criticism is that code that uses goto statements is harder to understand than alternative constructions goto remains in use in certain common usage patterns but alternatives are generally used if available debates over its more limited uses continue in academia and software industry circles contents 1 usage 2 criticism 3 common usage patterns of goto 4 alternatives 41 structured programming 42 exceptions 43 tail calls 44 coroutines 45 continuations 46 message passing 5 variations 51 computed goto and assigned goto 52 alter 53 perl goto 54 emulated goto 55 pli label variables 6 language support 7 see also 8 references usageedit goto label the goto statement is often combined with the if statement to cause a conditional transfer of control if condition then goto label programming languages impose different restrictions with respect to the destination of a goto statement for example the c programming language does not permit a jump to a label contained within another function2 however jumps within a single call chain are possible using the setjmplongjmp functions criticismedit at the prealgol meeting held in 1959 heinz zemanek explicitly threw doubt on the necessity for goto statements at the time no one paid attention to his remark including edsger w dijkstra who later became the iconic opponent of goto3 the 1970s and 1980s saw a decline in the use of goto statements in favor of the structured programming paradigm with goto criticized as leading to unmaintainable spaghetti code see below some programming style coding standards for example the gnu pascal coding standards recommend against the use of goto statements4 the böhmjacopini proof 1966 did not settle the question of whether to adopt structured programming for software development partly because the construction was more likely to obscure a program than to improve it because its application requires the introduction of additional local variables5 it did however spark a prominent debate among computer scientists educators language designers and application programmers that saw a slow but steady shift away from the formerly ubiquitous use of the goto probably the most famous criticism of goto is a 1968 letter by edsger dijkstra called go to statement considered harmful3 6 in that letter dijkstra argued that unrestricted goto statements should be abolished from higherlevel languages because they complicated the task of analyzing and verifying the correctness of programs particularly those involving loops the letter itself sparked a debate including a goto considered harmful considered harmful letter7 sent to communications of the acm cacm in march 1987 as well as further replies by other people including dijkstras on a somewhat disappointing correspondence8 an alternative viewpoint is presented in donald knuths structured programming with go to statements which analyzes many common programming tasks and finds that in some of them goto is the optimal language construct to use9 in their quasistandard book on the c programming language dennis ritchie and brian kernighan warn that goto is infinitely abusable but also suggest that it could be used for endoffunction error handlers and for multilevel breaks from loops10 these two patterns can be found in numerous subsequent books on c by other authors11121314 a 2007 introductory textbook notes that the error handling pattern is a way to work around the lack of builtin exception handling within the c language11 other programmers including linux kernel designer and coder linus torvalds or software engineer and book author steve mcconnell also object to dijkstras point of view stating that gotos can be a useful language feature improving program speed size and code clearness but only when used in a sensible way by a comparably sensible programmer1516 according to computer science professor john regehr in 2013 there were about 100000 instances of goto in the linux kernel code17 other academics took the completely opposite viewpoint and argued that even instructions like break and return from the middle of loops are bad practice as they are not needed in the böhmjacopini result and thus advocated that loops should have a single exit point18 for instance bertrand meyer wrote in his 2009 textbook that instructions like break and continue are just the old goto in sheeps clothing19 a slightly modified form of the böhmjacopini result allows however the avoidance of additional variables in structured programming as long as multilevel breaks from loops are allowed20 because some languages like c dont allow multilevel breaks via their break keyword some textbooks advise the programmer to use goto in such circumstances14 the misra c 2004 standard bans goto continue as well as multiple return and break statements21 the 2012 edition of the misra c standard downgraded the prohibition on goto from required to advisory status the 2012 edition has an additional mandatory rule that prohibits only backward but not forward jumps with goto2223 fortran introduced structured programming constructs in 1978 and in successive revisions the relatively loose semantic rules governing the allowable use of goto were tightened the extended range in which a programmer could use a goto to enter and leave a stillexecuting do loop was removed from the language in 197824 and by 1995 several forms of fortran goto including the computed goto and the assigned goto had been deleted25 some widely used modern programming languages such as java and python lack the goto statement – see language support – though most provide some means of breaking out of a selection or either breaking out of or moving on to the next step of an iteration the viewpoint that disturbing the control flow in code is undesirable may be seen in the design of some programming languages for instance ada26 visually emphasizes label definitions using angle brackets entry 1710 in complangc faq list27 addresses the issue of goto use directly stating programming style like writing style is somewhat of an art and cannot be codified by inflexible rules although discussions about style often seem to center exclusively around such rules in the case of the goto statement it has long been observed that unfettered use of gotos quickly leads to unmaintainable spaghetti code however a simple unthinking ban on the goto statement does not necessarily lead immediately to beautiful programming an unstructured programmer is just as capable of constructing a byzantine tangle without using any gotos perhaps substituting oddlynested loops and boolean control variables instead many programmers adopt a moderate stance gotos are usually to be avoided but are acceptable in a few wellconstrained situations if necessary as multilevel break statements to coalesce common actions inside a switch statement or to centralize cleanup tasks in a function with several error returns blindly avoiding certain constructs or following rules without understanding them can lead to just as many problems as the rules were supposed to avert furthermore many opinions on programming style are just that opinions they may be strongly argued and strongly felt they may be backed up by solidseeming evidence and arguments but the opposing opinions may be just as strongly felt supported and argued its usually futile to get dragged into style wars because on certain issues opponents can never seem to agree or agree to disagree or stop arguing common usage patterns of gotoedit while overall usage of gotos has been declining there are still situations in some languages where a goto provides the shortest and most straightforward way to express a programs logic while it is possible to express the same logic without gotos the equivalent code will be longer and often more difficult to understand in other languages there are structured alternatives notably exceptions and tail calls situations in which goto is often useful include to make the code more readable and easier to follow2829 to make smaller programs and get rid of code duplication 2829 implement a finitestate machine using a state transition table and goto to switch between states in absence of tail call elimination particularly in automatically generated c code30 for example goto in the canonical lr parser implementing multilevel break and continue if not directly supported in the language this is a common idiom in c14 although java reserves the goto keyword it doesnt actually implement it instead java implements labelled break and labelled continue statements31 according to the java documentation the use of gotos for multilevel breaks was the most common 90 use of gotos in c32 java was not the first language to take this approach—forbidding goto but providing multilevel breaks— the bliss programming language more precisely the bliss11 version thereof preceded it in this respect33960–965 surrogates for singlelevel break or continue retry statements when the potential introduction of additional loops could incorrectly affect the control flow this practice has been observed in netbsd code34 error handling in absence of exceptions particularly cleanup code such as resource deallocation1114343035 c offers an alternative to goto statement for this use case which is  resource acquisition is initialization raii through using destructors or using try and catch exceptions used in exception handling36 setjmp and longjmp are another alternative and have the advantage of being able to unwind part of the call stack these uses are relatively common in c but much less common in c or other languages with higherlevel features35 however throwing and catching an exception inside a function can be extraordinarily inefficient in some languages a prime example is objectivec where a goto is a much faster alternative37 another use of goto statements is to modify poorly factored legacy code where avoiding a goto would require extensive refactoring or code duplication for example given a large function where only certain code is of interest a goto statement allows one to jump to or from only the relevant code without otherwise modifying the function this usage is considered code smell but finds occasional use alternativesedit structured programmingedit for clarity and efficient optimization languages supporting structured programming like pascal introduced control structures such as subroutines also known as procedures or functions loops using while repeat until or do and for statements switch aka case statements a form of multiway branching these new language mechanism replace equivalent flows which previously would have been written using gotos and ifs multiway branching replaces the computed goto in which the instruction to jump to is determined dynamically conditionally exceptionsedit further information exception handling in practice a strict adherence to the basic threestructure template of structured programming yields highly nested code due to inability to exit a structured unit prematurely and a combinatorial explosion with quite complex program state data to handle all possible conditions two solutions have been generally adopted a way to exit a structured unit prematurely and more generally exceptions – in both cases these go up the structure returning control to enclosing blocks or functions but do not jump to arbitrary code locations these are analogous to the use of a return statement in nonterminal position – not strictly structured due to early exit but a mild relaxation of the strictures of structured programming in c break and continue allow one to terminate a loop or continue to the next iteration without requiring an extra while or if statement in some languages multilevel breaks are also possible for handling exceptional situations specialized exception handling constructs were added such as trycatchfinally in java the throwcatch exception handling mechanisms can also be easily abused to create nontransparent control structures just like goto can be abused38 tail callsedit main article tail call in a paper delivered to the acm conference in seattle in 1977 guy l steele summarized the debate over the goto and structured programming and observed that procedure calls in the tail position of a procedure can be most optimally treated as a direct transfer of control to the called procedure typically eliminating unnecessary stack manipulation operations39 since such tail calls are very common in lisp a language where procedure calls are ubiquitous this form of optimization considerably reduces the cost of a procedure call compared to the goto used in other languages steele argued that poorly implemented procedure calls had led to an artificial perception that the goto was cheap compared to the procedure call steele further argued that in general procedure calls may be usefully thought of as goto statements which also pass parameters and can be uniformly coded as machine code jump instructions with the machine code stack manipulation instructions considered an optimization rather than vice versa39 steele cited evidence that well optimized numerical algorithms in lisp could execute faster than code produced by thenavailable commercial fortran compilers because the cost of a procedure call in lisp was much lower in scheme a lisp dialect developed by steele with gerald jay sussman tail call optimization is mandatory40 although steeles paper did not introduce much that was new to computer science at least as it was practised at mit it brought to light the scope for procedure call optimization which made the modularitypromoting qualities of procedures into a more credible alternative to the thencommon coding habits of large monolithic procedures with complex internal control structures and extensive state data in particular the tail call optimizations discussed by steele turned the procedure into a credible way of implementing iteration through single tail recursion tail recursion calling the same function further tail call optimization allows mutual recursion of unbounded depth assuming tail calls – this allows transfer of control as in finite state machines which otherwise is generally accomplished with goto statements coroutinesedit main article coroutine coroutines are a more radical relaxation of structured programming allowing not only multiple exit points as in returns in nontail position but also multiple entry points similar to goto statements coroutines are more restricted than goto as they can only resume a currently running coroutine at specified points – continuing after a yield – rather than jumping to an arbitrary point in the code a limited form of coroutines are generators which are sufficient for some purposes even more limited are closures – subroutines which maintain state via static variables but not execution position a combination of state variables and structured control notably an overall switch statement can allow a subroutine to resume execution at an arbitrary point on subsequent calls and is a structured alternative to goto statements in the absence of coroutines this is a common idiom in c for example continuationsedit main article continuation a continuation is similar to a goto in that it transfers control from an arbitrary point in the program to a previously marked point a continuation is more flexible than goto in those languages that support it because it can transfer control out of the current function something that a goto cannot do in most structured programming languages in those language implementations that maintain stack frames for storage of local variables and function arguments executing a continuation involves adjusting the programs call stack in addition to a jump the longjmp function of the c programming language is an example of an escape continuation that may be used to escape the current context to a surrounding one the common lisp go operator also has this stack unwinding property despite the construct being lexically scoped as the label to be jumped to can be referenced from a closure in scheme continuations can even move control from an outer context to an inner one if desired this almost limitless control over what code is executed next makes complex control structures such as coroutines and cooperative multitasking relatively easy to write41 message passingedit main article message passing in nonprocedural paradigms goto is less relevant or completely absent one of the main alternatives is message passing which is of particular importance in concurrent computing interprocess communication and object oriented programming in these cases the individual components do not have arbitrary transfer of control but the overall control may be scheduled in complex ways such as via preemption the influential languages simula and smalltalk were among the first to introduce the concepts of messages and objects by encapsulating state data objectoriented programming reduced software complexity to interactions messages between objects variationsedit there are a number of different language constructs under the class of goto statements computed goto and assigned gotoedit see also branch table in fortran a computed goto jumps to one of several labels in a list based on the value of an expression an example is goto 203040 i the equivalent construct in c is the switch statement and in newer fortran a case statement is the recommend syntactical alternative42 basic has the on goto construct that achieves the same goal43 fortran also had an assigned goto variant that transfers control to a statement label line number which is stored in assigned to an integer variable jumping to an integer variable that had not been assigned to was unfortunately possible and was a major source of bugs involving assigned gotos44 the fortran assign statement only allows a constant existing line number to be assigned to the integer variable however it was possible to accidentally treat this variable as an integer thereafter for example increment it resulting in unspecified behavior at goto time the following code demonstrates the behavior of the goto i when line i is unspecified45 assign 200 to i i i1 goto i unspecified behavior 200 write this is valid line number several c compilers implement two nonstandard cc extensions relating to gotos originally introduced by gcc4647 the gnu extension allows the address of a label inside the current function to be obtained as a void using the unary prefix label value operator the goto instruction is also extended to allow jumping to an arbitrary void expression this c extension is referred to as a computed goto in documentation of the c compilers that support it its semantics are a superset of fortrans assigned goto because it allows arbitrary pointer expressions as the goto target while fortrans assigned goto doesnt allow arbitrary expressions as jump target48 as with the standard goto in c the gnu c extension allows the target of the computed goto to reside only in the current function attempting to jump outside the current function results in unspecified behavior48 some variants of basic also support a computed goto in the sense used in gnu c ie in which the target can be any line number not just one from a list for example in mts basic one could write goto i1000 to jump to the line numbered 1000 times the value of a variable i which might represent a selected menu option for example49 pli label variables achieve the effect of computed or assigned gotos alteredit up to the 1985 ansi cobol standard had the alter verb which could be used to change the destination of an existing go to which had to be in a paragraph by itself50 the feature which allowed polymorphism was frequently condemned and seldom used51 perl gotoedit in perl there is a variant of the goto statement that is not a traditional goto statement at all it takes a function name and transfers control by effectively substituting one function call for another a tail call the new function will not return to the goto but instead to the place from which the original function was called52 emulated gotoedit there are several programming languages that do not support goto by default by using goto emulation it is still possible to use goto in these programming languages albeit with some restrictions one can emulate goto in java53 javascript54 and python5556 pli label variablesedit pli has the data type label which can be used to implement both the assigned goto and the computed goto pli allows branches out of the current block a calling procedure can pass a label as an argument to a called procedure which can then exit with a branch this implements the equivalent of the assigned goto declare where label where somewhere goto where somewhere statement this implements the equivalent of the computed goto declare where 5 label declare inx fixed where1 abc where2 xyz goto whereinx abc statement xyz statement language supportedit many languages support the goto statement and many do not in java goto is a reserved word but is unusable although the compiled fileclass generates gotos and labels5758 python does not have support for goto although there are several joke modules that provide it5556 in php there was no native support for goto until version 53 libraries were available to emulate its functionality59 c has goto it also makes case and default statements labels whose scope is the enclosing switch statement goto case or goto default is often used to replace explicit fallthrough which c disallows most languages that have goto statements call it that but in the early days of computing other names were used for example in mad the transfer to statement was used60 c has goto and it is commonly used in various idioms as discussed above functional programming languages such as scheme generally do not have goto instead using continuations see alsoedit comefrom control flow gosub switch statement – a multiway branch or conditional goto unstructured programming considered harmful referencesedit david anthony watt william findlay 2004 programming language design concepts john wiley sons p 228 isbn 9780470853207  c standard section 6861 the goto statement a b dijkstra 1968 gnu pascal coding standards sec 51 assorted pascal programming tips kenneth louden lambert 2011 programming languages principles and practices cengage learning p 422 isbn 1111529418  ewd 215 a case against the go to statement frank rubin march 1987 goto considered harmful considered harmful pdf communications of the acm 30 3 195–196 doi101145214748315722 archived from the original pdf on 20090320  dijkstra edsger w on a somewhat disappointing correspondence ewd1009 pdf ew dijkstra archive center for american history university of texas at austin  transcription may 1987 donald knuth 1974 structured programming with go to statements pdf computing surveys 6 4 261–301 doi101145356635356640  brian w kernighan dennis ritchie 1988 c programming language 2nd ed prentice hall pp 60–61 isbn 9780133086218  a b c michael a vine 2007 c programming for the absolute beginner cengage learning p 262 isbn 1598636340  sandra geisler 2011 c allinone desk reference for dummies john wiley sons pp 217–220 isbn 9781118054246  stephen prata 2013 c primer plus addisonwesley pp 287–289 isbn 9780133432381  a b c d sartaj sahni robert f cmelik bob cmelik 1995 software development in c silicon press p 135 isbn 9780929306162  archived copy archived from the original on 20100214 retrieved 20100130  code complete first edition stevemcconnellcom retrieved 20140722  use of goto in systems code roberts e 1995 “loop exits and structured programming reopening the debate” acm sigcse bulletin 271 268–272 bertrand meyer 2009 touch of class learning to program well with objects and contracts springer science business media p 189 isbn 9783540921448  dexter kozen and weilung dustin tseng 2008 the böhm–jacopini theorem is false propositionally pdf mpc 2008 lecture notes in computer science 5133 177 isbn 9783540705932 doi101007978354070594911  why continue is considered as a c violation in misra c2004 stack overflow 20120611 retrieved 20140722  mark pitchford chris tapp 20130225 misra c2012 plenty of good reasons to change electronic design retrieved 20140722  tom williams march 2013 checking rules for c assuring reliability and safety rtc magazine retrieved 20140722  ansi x391978 american national standard – programming language fortran american national standards institute also known as iso 15391980 informally known as fortran 77 isoiec 153911997 information technology – programming languages – fortran – part 1 base language informally known as fortran 95 there are a further two parts to this standard part 1 has been formally adopted by ansi john barnes 20060630 programming in ada 2005 addison wesley p 114–115 isbn 0321340787  question 1710 cfaqcom retrieved 20140722  a b linux using goto in kernel code a b httpswwwkernelorgdocdocumentationcodingstyle a b good uses of goto simon cozens branching statements the java™ tutorials learning the java language language basics docsoraclecom 20120228 retrieved 20140722  the java language environment oraclecom retrieved 20140722  brender ronald f 2002 the bliss programming language a history pdf software practice and experience 32 10 955–981 doi101002spe470  a b diomidis spinellis 27 may 2003 code reading the open source perspective addisonwesley professional pp 43–44 isbn 9780672333705  a b when to use goto when programming in c alex allain day 1 keynote bjarne stroustrup c11 style goingnative 2012 channel 9 channel9msdncom 20120202 retrieved 20140722  david chisnall 2012 objectivec phrasebook addisonwesley professional p 249 isbn 9780321813756  j siedersleben 2006 errors and exceptions rights and obligations in christophe dony advanced topics in exception handling techniques springer science business media p 277 isbn 9783540374435  a b guy lewis steele jr debunking the expensive procedure call myth or procedure call implementations considered harmful or lambda the ultimate goto mit ai lab ai lab memo aim443 october 1977 r5rs sec 35 richard kelsey william clinger jonathan rees et al august 1998 revised5 report on the algorithmic language scheme higherorder and symbolic computation 3 1 7–105 doi101023a1010051815785  revised5 report on the algorithmic language scheme r5rs section 64 standard procedures callwithcurrentcontinuation computed goto statement obsolescent laheycom archived from the original on 20160526 retrieved 20140722  microsoft quickbasic ongosub ongoto statements quickscreen microsoft 1988 retrieved 20080703  httpwwwpersonalpsuedujhmf90statementsgotoahtml assign label assignment softwareintelcom retrieved 20140722  computed goto ibm xl cc compiler intel® composer xe 2013 sp1 compilers fixes list intel® developer zone softwareintelcom 20130812 retrieved 20140722  a b labels as values using the gnu compiler collection gcc gccgnuorg retrieved 20140722  university of michigan computing center september 1974 mts michigan terminal system um libraries p 226 uom39015034770076  hp cobol iixl reference manual the alter statement is an obsolete feature of the 1985 ansi cobol standard van tassel dennie july 8 2004 history of labels in programming languages retrieved 4 january 2011  goto from the perlsyn perl syntax manual goto for java steik july 6 2009 retrieved april 28 2012  sexton alex the summer of goto official home of gotojs retrieved april 28 2012  a b hindle richie april 1 2004 goto for python entrian solutions hertford uk entrian solutions ltd retrieved april 28 2012 the goto module was an april fools joke published on 1st april 2004 yes it works but its a joke nevertheless please dont use it in real code  a b snoack september 19 2015 snoackpythongoto a function decorator that rewrites the bytecode to enable goto in python retrieved february 24 2017  the java language specification third edition the keywords const and goto are reserved even though they are not currently used this may allow a java compiler to produce better error messages if these c keywords incorrectly appear in programs  the java language specification third edition unlike c and c the java programming language has no goto statement identifier statement labels are used with break §1415 or continue §1416 statements appearing anywhere within the labeled statement  goto manual php retrieved 20140722  bernard a galler the language of computers university of michigan mcgrawhill 1962 pages 2628 197 211 dijkstra edsger w march 1968 letters to the editor go to statement considered harmful pdf communications of the acm 11 3 147–148 doi101145362929362947  ramshaw l 1988 eliminating go tos while preserving program structure journal of the acm 35 4 893 doi1011454801448021  retrieved from httpsenwikipediaorgwindexphptitlegotooldid806371922 categories basic commands control flow edsger w dijkstra navigation menu personal tools not logged in talk contributions create account log in namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate to wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page printexport create a book download as pdf printable version languages azərbaycanca català deutsch español français 한국어 hrvatski italiano עברית magyar nederlands 日本語 polski português русский simple english српски srpski srpskohrvatski српскохрватски svenska türkçe українська 中文 edit links this page was last edited on 21 october 2017 at 1604 text is available under the creative commons attributionsharealike license additional terms may apply by using this site you agree to the terms of use and privacy policy wikipedia® is a registered trademark of the wikimedia foundation inc a nonprofit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto_(disambiguation)
https://en.wikipedia.org/wiki/Statement_(programming)
https://en.wikipedia.org/wiki/Programming_language
https://en.wikipedia.org/wiki/Subroutine
https://en.wikipedia.org/wiki/Label_(programming_language)
https://en.wikipedia.org/wiki/Line_number
https://en.wikipedia.org/wiki/Machine_code
https://en.wikipedia.org/wiki/Branch_(computer_science)
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Structured_program_theorem
https://en.wikipedia.org/wiki/Turing_machine
https://en.wikipedia.org/wiki/Code_duplication
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=1
https://en.wikipedia.org/wiki/Conditional_(programming)
https://en.wikipedia.org/wiki/C_programming_language
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Setjmp
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=2
https://en.wikipedia.org/wiki/Heinz_Zemanek
https://en.wikipedia.org/wiki/Edsger_W._Dijkstra
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Structured_programming
https://en.wikipedia.org/wiki/Programming_paradigm
https://en.wikipedia.org/wiki/Spaghetti_code
https://en.wikipedia.org/wiki/Programming_style
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Structured_program_theorem
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Considered_Harmful
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Association_for_Computing_Machinery
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Donald_Knuth
https://en.wikipedia.org/wiki/Language_construct
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Dennis_Ritchie
https://en.wikipedia.org/wiki/Brian_Kernighan
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Linux
https://en.wikipedia.org/wiki/Linus_Torvalds
https://en.wikipedia.org/wiki/Steve_McConnell
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/John_Regehr
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Bertrand_Meyer
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/MISRA_C
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/FORTRAN
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Java_(programming_language)
https://en.wikipedia.org/wiki/Python_(programming_language)
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Break_statement
https://en.wikipedia.org/wiki/Control_flow
https://en.wikipedia.org/wiki/Ada_(programming_language)
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Bracket
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=3
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Finite-state_machine
https://en.wikipedia.org/wiki/State_transition_table
https://en.wikipedia.org/wiki/Tail_call_elimination
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Canonical_LR_parser
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/BLISS
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Netbsd
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization
https://en.wikipedia.org/wiki/Exception_handling
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Setjmp
https://en.wikipedia.org/wiki/Call_stack
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Objective-C
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Legacy_code
https://en.wikipedia.org/wiki/Refactoring
https://en.wikipedia.org/wiki/Code_duplication
https://en.wikipedia.org/wiki/Code_smell
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=4
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=5
https://en.wikipedia.org/wiki/Structured_programming
https://en.wikipedia.org/wiki/Pascal_(programming_language)
https://en.wikipedia.org/wiki/Control_structures
https://en.wikipedia.org/wiki/Subroutine
https://en.wikipedia.org/wiki/While_loop
https://en.wikipedia.org/wiki/Do_while_loop
https://en.wikipedia.org/wiki/For_loop
https://en.wikipedia.org/wiki/Switch_statement
https://en.wikipedia.org/wiki/Multiway_branch
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=6
https://en.wikipedia.org/wiki/Exception_handling
https://en.wikipedia.org/wiki/Combinatorial_explosion
https://en.wikipedia.org/wiki/Exception_handling
https://en.wikipedia.org/wiki/Break_statement
https://en.wikipedia.org/wiki/Control_flow
https://en.wikipedia.org/wiki/Control_flow
https://en.wikipedia.org/wiki/Exception_handling
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=7
https://en.wikipedia.org/wiki/Tail_call
https://en.wikipedia.org/wiki/Guy_L._Steele
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Lisp_(programming_language)
https://en.wikipedia.org/wiki/Machine_code
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Scheme_(programming_language)
https://en.wikipedia.org/wiki/Gerald_Jay_Sussman
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Tail_recursion
https://en.wikipedia.org/wiki/Mutual_recursion
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=8
https://en.wikipedia.org/wiki/Coroutine
https://en.wikipedia.org/wiki/Coroutine
https://en.wikipedia.org/wiki/Generator_(computer_science)
https://en.wikipedia.org/wiki/Closure_(computer_science)
https://en.wikipedia.org/wiki/Static_variable
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=9
https://en.wikipedia.org/wiki/Continuation
https://en.wikipedia.org/wiki/Continuation
https://en.wikipedia.org/wiki/Call_stack
https://en.wikipedia.org/wiki/Setjmp/longjmp
https://en.wikipedia.org/wiki/C_(programming_language)
https://en.wikipedia.org/wiki/Common_Lisp
https://en.wikipedia.org/wiki/Lexical_scope
https://en.wikipedia.org/wiki/Closure_(computer_science)
https://en.wikipedia.org/wiki/Scheme_(programming_language)
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=10
https://en.wikipedia.org/wiki/Message_passing
https://en.wikipedia.org/wiki/Message_passing
https://en.wikipedia.org/wiki/Concurrent_computing
https://en.wikipedia.org/wiki/Interprocess_communication
https://en.wikipedia.org/wiki/Object_oriented_programming
https://en.wikipedia.org/wiki/Preemption_(computing)
https://en.wikipedia.org/wiki/Simula
https://en.wikipedia.org/wiki/Smalltalk
https://en.wikipedia.org/wiki/Encapsulation_(object-oriented_programming)
https://en.wikipedia.org/wiki/Object-oriented_programming
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=11
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=12
https://en.wikipedia.org/wiki/Branch_table
https://en.wikipedia.org/wiki/FORTRAN
https://en.wikipedia.org/wiki/Switch_statement
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/BASIC
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/GNU_Compiler_Collection
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Michigan_Terminal_System
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/PL/I
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=13
https://en.wikipedia.org/wiki/COBOL
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Polymorphism_(computer_science)
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=14
https://en.wikipedia.org/wiki/Perl
https://en.wikipedia.org/wiki/Tail_call
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=15
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=16
https://en.wikipedia.org/wiki/PL/I
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=17
https://en.wikipedia.org/wiki/Java_(programming_language)
https://en.wikipedia.org/wiki/Reserved_word
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/PHP
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/C_Sharp_(programming_language)
https://en.wikipedia.org/wiki/Switch_statement
https://en.wikipedia.org/wiki/MAD_(programming_language)
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=18
https://en.wikipedia.org/wiki/COMEFROM
https://en.wikipedia.org/wiki/Control_flow
https://en.wikipedia.org/wiki/GOSUB
https://en.wikipedia.org/wiki/Switch_statement
https://en.wikipedia.org/wiki/Multiway_branch
https://en.wikipedia.org/wiki/Unstructured_programming
https://en.wikipedia.org/wiki/Considered_harmful
https://en.wikipedia.org/w/index.php?title=Goto&action=edit&section=19
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-0-470-85320-7
https://en.wikipedia.org/wiki/Goto
http://c0x.coding-guidelines.com/6.8.6.1.html
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
http://www.gnu-pascal.de/h-gpcs-en.html
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/1-111-52941-8
https://en.wikipedia.org/wiki/Goto
http://www.cs.utexas.edu/users/EWD/ewd02xx/EWD215.PDF
https://en.wikipedia.org/wiki/Goto
https://web.archive.org/web/20090320002214/http:/www.ecn.purdue.edu/ParaMount/papers/rubin87goto.pdf
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.1145/214748.315722
http://www.ecn.purdue.edu/ParaMount/papers/rubin87goto.pdf
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Edsger_W._Dijkstra
http://www.cs.utexas.edu/users/EWD/ewd10xx/EWD1009.PDF
https://en.wikipedia.org/wiki/University_of_Texas_at_Austin
http://www.cs.utexas.edu/users/EWD/transcriptions/EWD10xx/EWD1009.html
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Donald_Knuth
https://www.cs.sjsu.edu/~mak/CS185C/KnuthStructuredProgrammingGoTo.pdf
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.1145/356635.356640
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-0-13-308621-8
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/1-59863-634-0
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-1-118-05424-6
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-0-13-343238-1
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://books.google.com/books?id=78hu9aMNMZQC&pg=PA135
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-0-929306-16-2
https://en.wikipedia.org/wiki/Goto
https://web.archive.org/web/20100214095828/http:/kerneltrap.org/node/553
http://kerneltrap.org/node/553
https://en.wikipedia.org/wiki/Goto
http://www.stevemcconnell.com/ccgoto.htm
https://en.wikipedia.org/wiki/Goto
http://blog.regehr.org/archives/894
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-3-540-92144-8
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Dexter_Kozen
http://www.cs.cornell.edu/~kozen/papers/bohmjacopini.pdf
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-3-540-70593-2
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.1007/978-3-540-70594-9_11
https://en.wikipedia.org/wiki/Goto
https://stackoverflow.com/questions/10975722/why-continue-is-considered-as-a-c-violation-in-misra-c2004
https://en.wikipedia.org/wiki/Goto
http://electronicdesign.com/dev-tools/misra-c2012-plenty-good-reasons-change
https://en.wikipedia.org/wiki/Goto
http://www.rtcmagazine.com/articles/print_article/102990
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/John_Barnes_(computer_scientist)
https://en.wikipedia.org/wiki/Addison_Wesley
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/0-321-34078-7
https://en.wikipedia.org/wiki/Goto
http://c-faq.com/style/stylewars.html
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://web.archive.org/web/20051128093253/http:/kerneltrap.org/node/553/2131
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://www.kernel.org/doc/Documentation/CodingStyle
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
http://www.simon-cozens.org/content/good-uses-goto
https://en.wikipedia.org/wiki/Goto
http://docs.oracle.com/javase/tutorial/java/nutsandbolts/branch.html
https://en.wikipedia.org/wiki/Goto
http://www.oracle.com/technetwork/java/simple-142616.html
https://en.wikipedia.org/wiki/Goto
http://www.cs.tufts.edu/~nr/cs257/archive/ronald-brender/bliss.pdf
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.1002/spe.470
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://books.google.com/books?id=8lYbNfsAVT4C&pg=PA43
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-0-672-33370-5
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
http://www.cprogramming.com/tutorial/goto.html
https://en.wikipedia.org/wiki/Goto
http://channel9.msdn.com/Events/GoingNative/GoingNative-2012/Keynote-Bjarne-Stroustrup-Cpp11-Style
https://en.wikipedia.org/wiki/Goto
https://books.google.com/books?id=iTQSWMJTkw4C&pg=PA249
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-0-321-81375-6
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/International_Standard_Book_Number
https://en.wikipedia.org/wiki/Special:BookSources/978-3-540-37443-5
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
http://www.schemers.org/Documents/Standards/R5RS/
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.1023/A:1010051815785
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://web.archive.org/web/20160526142532/http:/www.lahey.com/docs/lfprohelp/F95ARComputed_GOTOStmt.htm
http://www.lahey.com/docs/lfprohelp/F95ARComputed_GOTOStmt.htm
https://en.wikipedia.org/wiki/Goto
http://www.qbasicnews.com/qboho/qckadvr@l804a.shtml
https://en.wikipedia.org/wiki/Microsoft
https://en.wikipedia.org/wiki/Goto
http://www.personal.psu.edu/jhm/f90/statements/goto_a.html
https://en.wikipedia.org/wiki/Goto
https://software.intel.com/sites/products/documentation/doclib/stdxe/2013/composerxe/compiler/fortran-win/GUID-ADCD2825-BFEB-41FA-9B9B-1EC3D78EFCF7.htm
https://en.wikipedia.org/wiki/Goto
http://publib.boulder.ibm.com/infocenter/lnxpcomp/v7v91/index.jsp?topic=/com.ibm.vacpp7l.doc/language/ref/clrc08computed_goto.htm
https://en.wikipedia.org/wiki/Goto
https://software.intel.com/en-us/articles/intel-composer-xe-2013-compilers-sp1-fixes-list
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://gcc.gnu.org/onlinedocs/gcc/Labels-as-Values.html
https://en.wikipedia.org/wiki/Goto
https://books.google.com/books?id=_wLvAAAAMAAJ&pg=PA226
https://en.wikipedia.org/wiki/Goto
http://docs.hp.com/cgi-bin/doc3k/B3150090013.11820/72
https://en.wikipedia.org/wiki/Goto
http://www.gavilan.edu/csis/languages/labels.html
https://en.wikipedia.org/wiki/Goto
http://perldoc.perl.org/perlsyn.html
https://en.wikipedia.org/wiki/Goto
http://www.steike.com/code/useless/java-goto/
https://en.wikipedia.org/wiki/Goto
http://summerofgoto.com/
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
http://entrian.com/goto/
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Goto
https://github.com/snoack/python-goto
https://en.wikipedia.org/wiki/Goto
http://java.sun.com/docs/books/jls/third_edition/html/lexical.html
https://en.wikipedia.org/wiki/Goto
http://java.sun.com/docs/books/jls/third_edition/html/statements.html
https://en.wikipedia.org/wiki/Goto
http://php.net/manual/en/control-structures.goto.php
https://en.wikipedia.org/wiki/Goto
http://www.bitsavers.org/pdf/univOfMichigan/mad/Galler_TheLangOfComps_1962.pdf
https://en.wikipedia.org/wiki/Edsger_Dijkstra
https://www.cs.utexas.edu/users/EWD/ewd02xx/EWD215.PDF
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.1145/362929.362947
https://en.wikipedia.org/wiki/Digital_object_identifier
https://doi.org/10.1145/48014.48021
https://en.wikipedia.org/w/index.php?title=Goto&oldid=806371922
https://en.wikipedia.org/wiki/Help:Category
https://en.wikipedia.org/wiki/Category:BASIC_commands
https://en.wikipedia.org/wiki/Category:Control_flow
https://en.wikipedia.org/wiki/Category:Edsger_W._Dijkstra
https://en.wikipedia.org/wiki/Special:MyTalk
https://en.wikipedia.org/wiki/Special:MyContributions
https://en.wikipedia.org/w/index.php?title=Special:CreateAccount&returnto=Goto
https://en.wikipedia.org/w/index.php?title=Special:UserLogin&returnto=Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/wiki/Talk:Goto
https://en.wikipedia.org/wiki/Goto
https://en.wikipedia.org/w/index.php?title=Goto&action=edit
https://en.wikipedia.org/w/index.php?title=Goto&action=history
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Main_Page
https://en.wikipedia.org/wiki/Portal:Contents
https://en.wikipedia.org/wiki/Portal:Featured_content
https://en.wikipedia.org/wiki/Portal:Current_events
https://en.wikipedia.org/wiki/Special:Random
https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&utm_medium=sidebar&utm_campaign=C13_en.wikipedia.org&uselang=en
https://shop.wikimedia.org
https://en.wikipedia.org/wiki/Help:Contents
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:Community_portal
https://en.wikipedia.org/wiki/Special:RecentChanges
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://en.wikipedia.org/wiki/Special:WhatLinksHere/Goto
https://en.wikipedia.org/wiki/Special:RecentChangesLinked/Goto
https://en.wikipedia.org/wiki/Wikipedia:File_Upload_Wizard
https://en.wikipedia.org/wiki/Special:SpecialPages
https://en.wikipedia.org/w/index.php?title=Goto&oldid=806371922
https://en.wikipedia.org/w/index.php?title=Goto&action=info
https://www.wikidata.org/wiki/Special:EntityPage/Q750997
https://en.wikipedia.org/w/index.php?title=Special:CiteThisPage&page=Goto&id=806371922
https://en.wikipedia.org/w/index.php?title=Special:Book&bookcmd=book_creator&referer=Goto
https://en.wikipedia.org/w/index.php?title=Special:ElectronPdf&page=Goto&action=show-download-screen
https://en.wikipedia.org/w/index.php?title=Goto&printable=yes
https://az.wikipedia.org/wiki/GOTO
https://ca.wikipedia.org/wiki/GOTO
https://de.wikipedia.org/wiki/Sprunganweisung
https://es.wikipedia.org/wiki/GOTO
https://fr.wikipedia.org/wiki/Goto_(informatique)
https://ko.wikipedia.org/wiki/Goto_문
https://hr.wikipedia.org/wiki/Goto
https://it.wikipedia.org/wiki/GOTO
https://he.wikipedia.org/wiki/פקודת_goto
https://hu.wikipedia.org/wiki/GOTO
https://nl.wikipedia.org/wiki/Spronginstructie
https://ja.wikipedia.org/wiki/Goto文
https://pl.wikipedia.org/wiki/Instrukcja_skoku
https://pt.wikipedia.org/wiki/Goto_(programação)
https://ru.wikipedia.org/wiki/Goto
https://simple.wikipedia.org/wiki/Goto
https://sr.wikipedia.org/wiki/Goto_naredba
https://sh.wikipedia.org/wiki/GoTo
https://sv.wikipedia.org/wiki/Goto
https://tr.wikipedia.org/wiki/GOTO
https://uk.wikipedia.org/wiki/Безумовний_перехід
https://zh.wikipedia.org/wiki/Goto
https://www.wikidata.org/wiki/Special:EntityPage/Q750997
https://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License
https://creativecommons.org/licenses/by-sa/3.0/
https://wikimediafoundation.org/wiki/Terms_of_Use
https://wikimediafoundation.org/wiki/Privacy_policy
https://www.wikimediafoundation.org/
https://wikimediafoundation.org/wiki/Privacy_policy
https://en.wikipedia.org/wiki/Wikipedia:About
https://en.wikipedia.org/wiki/Wikipedia:General_disclaimer
https://en.wikipedia.org/wiki/Wikipedia:Contact_us
https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute
https://wikimediafoundation.org/wiki/Cookie_statement
https://en.m.wikipedia.org/w/index.php?title=Goto&mobileaction=toggle_view_mobile
https://wikimediafoundation.org/
https://www.mediawiki.org/
